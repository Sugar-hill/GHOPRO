{"id":"bb958b7d57f34bcc5d2230544a425f18","_format":"hh-sol-build-info-1","solcVersion":"0.8.26","solcLongVersion":"0.8.26+commit.8a97fa7a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/LendingPool.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./RWAOracle.sol\";\r\n\r\ncontract LendingPool {\r\n    struct Loan {\r\n        address borrower;\r\n        address token;\r\n        uint256 amount;\r\n        uint256 collateral;\r\n        bool isActive;\r\n    }\r\n\r\n    address public admin;\r\n    RWAOracle public oracle;\r\n    mapping(uint256 => Loan) public loans;\r\n    uint256 public loanCounter;\r\n\r\n    event LoanCreated(uint256 indexed loanId, address borrower, uint256 amount, uint256 collateral);\r\n    event LoanRepaid(uint256 indexed loanId);\r\n    event LoanLiquidated(uint256 indexed loanId);\r\n\r\n    constructor(address _oracle) {\r\n        admin = msg.sender;\r\n        oracle = RWAOracle(_oracle);\r\n    }\r\n\r\n    function createLoan(address token, uint256 amount, uint256 collateral) external {\r\n        require(oracle.getPrice(token) > 0, \"Token not supported\");\r\n\r\n        uint256 collateralValue = collateral * oracle.getPrice(token);\r\n        require(collateralValue >= amount, \"Insufficient collateral\");\r\n\r\n        // Transfer collateral from borrower\r\n        ERC20(token).transferFrom(msg.sender, address(this), collateral);\r\n\r\n        // Record the loan\r\n        loans[loanCounter] = Loan({\r\n            borrower: msg.sender,\r\n            token: token,\r\n            amount: amount,\r\n            collateral: collateral,\r\n            isActive: true\r\n        });\r\n\r\n        emit LoanCreated(loanCounter, msg.sender, amount, collateral);\r\n        loanCounter++;\r\n    }\r\n\r\n    function repayLoan(uint256 loanId) external {\r\n        Loan storage loan = loans[loanId];\r\n        require(loan.isActive, \"Loan is not active\");\r\n        require(msg.sender == loan.borrower, \"Only borrower can repay\");\r\n\r\n        // Transfer repayment amount to contract\r\n        ERC20(loan.token).transferFrom(msg.sender, address(this), loan.amount);\r\n\r\n        // Return collateral to borrower\r\n        ERC20(loan.token).transfer(loan.borrower, loan.collateral);\r\n\r\n        loan.isActive = false;\r\n        emit LoanRepaid(loanId);\r\n    }\r\n\r\n    function liquidateLoan(uint256 loanId) external {\r\n        Loan storage loan = loans[loanId];\r\n        require(loan.isActive, \"Loan is not active\");\r\n\r\n        uint256 collateralValue = loan.collateral * oracle.getPrice(loan.token);\r\n        require(collateralValue < loan.amount, \"Collateral value is sufficient\");\r\n\r\n        loan.isActive = false;\r\n        emit LoanLiquidated(loanId);\r\n    }\r\n}\r\n"},"contracts/MockRWAToken.sol":{"content":"// MockRWAToken Contract\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract MockRWAToken is ERC20 {\r\n    address public admin;\r\n\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\r\n        admin = msg.sender;\r\n        _mint(admin, 5 * 10 ** decimals()); // Mint 5 tokens to the deployer\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external {\r\n        require(msg.sender == admin, \"Only admin can mint\");\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"},"contracts/RWAOracle.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\n// RWAOracle Contract\r\ncontract RWAOracle {\r\n    address public admin;\r\n    mapping(address => uint256) public prices;\r\n\r\n    event PriceUpdated(address indexed token, uint256 price);\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    function setPrice(address token, uint256 price) external {\r\n        require(msg.sender == admin, \"Only admin can update prices\");\r\n        prices[token] = price;\r\n        emit PriceUpdated(token, price);\r\n    }\r\n\r\n    function getPrice(address token) external view returns (uint256) {\r\n        return prices[token];\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MockRWAToken.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/MockRWAToken.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> contracts/MockRWAToken.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/MockRWAToken.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:86:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":755,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":755,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":755,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"277:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"contracts/LendingPool.sol":{"ast":{"absolutePath":"contracts/LendingPool.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"LendingPool":[1033],"RWAOracle":[1152]},"id":1034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":652,"src":"60:55:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/RWAOracle.sol","file":"./RWAOracle.sol","id":789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":1153,"src":"117:25:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LendingPool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1033,"linearizedBaseContracts":[1033],"name":"LendingPool","nameLocation":"155:11:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LendingPool.Loan","id":800,"members":[{"constant":false,"id":791,"mutability":"mutable","name":"borrower","nameLocation":"205:8:5","nodeType":"VariableDeclaration","scope":800,"src":"197:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"197:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"token","nameLocation":"232:5:5","nodeType":"VariableDeclaration","scope":800,"src":"224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"224:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"amount","nameLocation":"256:6:5","nodeType":"VariableDeclaration","scope":800,"src":"248:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"collateral","nameLocation":"281:10:5","nodeType":"VariableDeclaration","scope":800,"src":"273:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"isActive","nameLocation":"307:8:5","nodeType":"VariableDeclaration","scope":800,"src":"302:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":798,"name":"bool","nodeType":"ElementaryTypeName","src":"302:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Loan","nameLocation":"181:4:5","nodeType":"StructDefinition","scope":1033,"src":"174:149:5","visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":802,"mutability":"mutable","name":"admin","nameLocation":"346:5:5","nodeType":"VariableDeclaration","scope":1033,"src":"331:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"7dc0d1d0","id":805,"mutability":"mutable","name":"oracle","nameLocation":"375:6:5","nodeType":"VariableDeclaration","scope":1033,"src":"358:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"},"typeName":{"id":804,"nodeType":"UserDefinedTypeName","pathNode":{"id":803,"name":"RWAOracle","nameLocations":["358:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"358:9:5"},"referencedDeclaration":1152,"src":"358:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"visibility":"public"},{"constant":false,"functionSelector":"e1ec3c68","id":810,"mutability":"mutable","name":"loans","nameLocation":"420:5:5","nodeType":"VariableDeclaration","scope":1033,"src":"388:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$800_storage_$","typeString":"mapping(uint256 => struct LendingPool.Loan)"},"typeName":{"id":809,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"388:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$800_storage_$","typeString":"mapping(uint256 => struct LendingPool.Loan)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":808,"nodeType":"UserDefinedTypeName","pathNode":{"id":807,"name":"Loan","nameLocations":["407:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":800,"src":"407:4:5"},"referencedDeclaration":800,"src":"407:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan"}}},"visibility":"public"},{"constant":false,"functionSelector":"34d9289e","id":812,"mutability":"mutable","name":"loanCounter","nameLocation":"447:11:5","nodeType":"VariableDeclaration","scope":1033,"src":"432:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"3373919ad665425d2cddb4072830e5935b6ee308440fa99b23383648da473bc0","id":822,"name":"LoanCreated","nameLocation":"473:11:5","nodeType":"EventDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"loanId","nameLocation":"501:6:5","nodeType":"VariableDeclaration","scope":822,"src":"485:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"485:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"517:8:5","nodeType":"VariableDeclaration","scope":822,"src":"509:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"535:6:5","nodeType":"VariableDeclaration","scope":822,"src":"527:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"indexed":false,"mutability":"mutable","name":"collateral","nameLocation":"551:10:5","nodeType":"VariableDeclaration","scope":822,"src":"543:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"484:78:5"},"src":"467:96:5"},{"anonymous":false,"eventSelector":"9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc47186","id":826,"name":"LoanRepaid","nameLocation":"575:10:5","nodeType":"EventDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"indexed":true,"mutability":"mutable","name":"loanId","nameLocation":"602:6:5","nodeType":"VariableDeclaration","scope":826,"src":"586:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:24:5"},"src":"569:41:5"},{"anonymous":false,"eventSelector":"af91ffe368225045d42f7c2b4b90feb438133ac1e375e73bc9066652b70a1d77","id":830,"name":"LoanLiquidated","nameLocation":"622:14:5","nodeType":"EventDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"indexed":true,"mutability":"mutable","name":"loanId","nameLocation":"653:6:5","nodeType":"VariableDeclaration","scope":830,"src":"637:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:24:5"},"src":"616:45:5"},{"body":{"id":846,"nodeType":"Block","src":"698:75:5","statements":[{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":835,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"709:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"717:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"721:6:5","memberName":"sender","nodeType":"MemberAccess","src":"717:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"709:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":839,"nodeType":"ExpressionStatement","src":"709:18:5"},{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"738:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":842,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"757:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":841,"name":"RWAOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"747:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RWAOracle_$1152_$","typeString":"type(contract RWAOracle)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"747:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"src":"738:27:5","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"id":845,"nodeType":"ExpressionStatement","src":"738:27:5"}]},"id":847,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"_oracle","nameLocation":"689:7:5","nodeType":"VariableDeclaration","scope":847,"src":"681:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:17:5"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"698:0:5"},"scope":1033,"src":"669:104:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"861:680:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":859,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"896:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":857,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"880:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"887:8:5","memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"880:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"880:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"905:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"880:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420737570706f72746564","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"908:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""},"value":"Token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"872:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"872:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"872:58:5"},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"collateralValue","nameLocation":"951:15:5","nodeType":"VariableDeclaration","scope":919,"src":"943:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":868,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"969:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":871,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"998:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":869,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"982:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"989:8:5","memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"982:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"982:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"969:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"943:61:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":876,"name":"collateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"1023:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":877,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1042:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1023:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6c6c61746572616c","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1050:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa","typeString":"literal_string \"Insufficient collateral\""},"value":"Insufficient collateral"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa","typeString":"literal_string \"Insufficient collateral\""}],"id":875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1015:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"1015:61:5"},{"expression":{"arguments":[{"expression":{"id":886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1161:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1165:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1161:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":890,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1181:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_LendingPool_$1033","typeString":"contract LendingPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LendingPool_$1033","typeString":"contract LendingPool"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1173:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:5","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"1188:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":883,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1141:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":882,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1135:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$651_$","typeString":"type(contract ERC20)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1135:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1148:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"1135:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1135:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":894,"nodeType":"ExpressionStatement","src":"1135:64:5"},{"expression":{"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":895,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1240:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$800_storage_$","typeString":"mapping(uint256 => struct LendingPool.Loan storage ref)"}},"id":897,"indexExpression":{"id":896,"name":"loanCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1246:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1240:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage","typeString":"struct LendingPool.Loan storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1291:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1295:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1291:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1323:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1351:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":903,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"1384:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1419:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":898,"name":"Loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1261:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Loan_$800_storage_ptr_$","typeString":"type(struct LendingPool.Loan storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1281:8:5","1316:5:5","1343:6:5","1372:10:5","1409:8:5"],"names":["borrower","token","amount","collateral","isActive"],"nodeType":"FunctionCall","src":"1261:174:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_memory_ptr","typeString":"struct LendingPool.Loan memory"}},"src":"1240:195:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage","typeString":"struct LendingPool.Loan storage ref"}},"id":907,"nodeType":"ExpressionStatement","src":"1240:195:5"},{"eventCall":{"arguments":[{"id":909,"name":"loanCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1465:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1478:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1482:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1478:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1490:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":913,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"1498:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":908,"name":"LoanCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"1453:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1453:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"EmitStatement","src":"1448:61:5"},{"expression":{"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1520:13:5","subExpression":{"id":916,"name":"loanCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1520:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":918,"nodeType":"ExpressionStatement","src":"1520:13:5"}]},"functionSelector":"488dd3e6","id":920,"implemented":true,"kind":"function","modifiers":[],"name":"createLoan","nameLocation":"790:10:5","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"token","nameLocation":"809:5:5","nodeType":"VariableDeclaration","scope":920,"src":"801:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"amount","nameLocation":"824:6:5","nodeType":"VariableDeclaration","scope":920,"src":"816:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"collateral","nameLocation":"840:10:5","nodeType":"VariableDeclaration","scope":920,"src":"832:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"800:51:5"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"861:0:5"},"scope":1033,"src":"781:760:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":983,"nodeType":"Block","src":"1593:495:5","statements":[{"assignments":[927],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"loan","nameLocation":"1617:4:5","nodeType":"VariableDeclaration","scope":983,"src":"1604:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan"},"typeName":{"id":926,"nodeType":"UserDefinedTypeName","pathNode":{"id":925,"name":"Loan","nameLocations":["1604:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":800,"src":"1604:4:5"},"referencedDeclaration":800,"src":"1604:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan"}},"visibility":"internal"}],"id":931,"initialValue":{"baseExpression":{"id":928,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1624:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$800_storage_$","typeString":"mapping(uint256 => struct LendingPool.Loan storage ref)"}},"id":930,"indexExpression":{"id":929,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1630:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1624:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage","typeString":"struct LendingPool.Loan storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1604:33:5"},{"expression":{"arguments":[{"expression":{"id":933,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1656:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1661:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":799,"src":"1656:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f616e206973206e6f7420616374697665","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1671:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a","typeString":"literal_string \"Loan is not active\""},"value":"Loan is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a","typeString":"literal_string \"Loan is not active\""}],"id":932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1648:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1648:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"1648:44:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1711:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1711:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":941,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1725:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1730:8:5","memberName":"borrower","nodeType":"MemberAccess","referencedDeclaration":791,"src":"1725:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1711:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920626f72726f7765722063616e207265706179","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1740:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e","typeString":"literal_string \"Only borrower can repay\""},"value":"Only borrower can repay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e","typeString":"literal_string \"Only borrower can repay\""}],"id":938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1703:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1703:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"ExpressionStatement","src":"1703:63:5"},{"expression":{"arguments":[{"expression":{"id":952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1860:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1864:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1860:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":956,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1880:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_LendingPool_$1033","typeString":"contract LendingPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LendingPool_$1033","typeString":"contract LendingPool"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1872:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"1872:7:5","typeDescriptions":{}}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":958,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1887:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1892:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":795,"src":"1887:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":948,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1835:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1840:5:5","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":793,"src":"1835:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":947,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1829:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$651_$","typeString":"type(contract ERC20)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"1829:30:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":961,"nodeType":"ExpressionStatement","src":"1829:70:5"},{"expression":{"arguments":[{"expression":{"id":967,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1981:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1986:8:5","memberName":"borrower","nodeType":"MemberAccess","referencedDeclaration":791,"src":"1981:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":969,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1996:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2001:10:5","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":797,"src":"1996:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":963,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1960:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1965:5:5","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":793,"src":"1960:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":962,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1954:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$651_$","typeString":"type(contract ERC20)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1972:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"1954:26:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":972,"nodeType":"ExpressionStatement","src":"1954:58:5"},{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":973,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2025:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2030:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":799,"src":"2025:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2025:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"ExpressionStatement","src":"2025:21:5"},{"eventCall":{"arguments":[{"id":980,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2073:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":979,"name":"LoanRepaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2062:10:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"EmitStatement","src":"2057:23:5"}]},"functionSelector":"ab7b1c89","id":984,"implemented":true,"kind":"function","modifiers":[],"name":"repayLoan","nameLocation":"1558:9:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"loanId","nameLocation":"1576:6:5","nodeType":"VariableDeclaration","scope":984,"src":"1568:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1567:16:5"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"1593:0:5"},"scope":1033,"src":"1549:539:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1031,"nodeType":"Block","src":"2144:346:5","statements":[{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"loan","nameLocation":"2168:4:5","nodeType":"VariableDeclaration","scope":1031,"src":"2155:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan"},"typeName":{"id":990,"nodeType":"UserDefinedTypeName","pathNode":{"id":989,"name":"Loan","nameLocations":["2155:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":800,"src":"2155:4:5"},"referencedDeclaration":800,"src":"2155:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan"}},"visibility":"internal"}],"id":995,"initialValue":{"baseExpression":{"id":992,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2175:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$800_storage_$","typeString":"mapping(uint256 => struct LendingPool.Loan storage ref)"}},"id":994,"indexExpression":{"id":993,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2181:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2175:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage","typeString":"struct LendingPool.Loan storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2155:33:5"},{"expression":{"arguments":[{"expression":{"id":997,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2207:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2212:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":799,"src":"2207:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f616e206973206e6f7420616374697665","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2222:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a","typeString":"literal_string \"Loan is not active\""},"value":"Loan is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a","typeString":"literal_string \"Loan is not active\""}],"id":996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2199:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"2199:44:5"},{"assignments":[1003],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"collateralValue","nameLocation":"2264:15:5","nodeType":"VariableDeclaration","scope":1031,"src":"2256:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1012,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1004,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2282:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2287:10:5","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":797,"src":"2282:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"expression":{"id":1008,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2316:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":1009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2321:5:5","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":793,"src":"2316:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1006,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"2300:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_RWAOracle_$1152","typeString":"contract RWAOracle"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:5","memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"2300:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2282:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2256:71:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"collateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2346:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1015,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2364:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":1016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2369:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":795,"src":"2364:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2346:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6c6c61746572616c2076616c75652069732073756666696369656e74","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2377:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_eabe3d27c8c68aa5d541c9b67703a5365349796e19ce4d9d4eefbd36d057c7b1","typeString":"literal_string \"Collateral value is sufficient\""},"value":"Collateral value is sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eabe3d27c8c68aa5d541c9b67703a5365349796e19ce4d9d4eefbd36d057c7b1","typeString":"literal_string \"Collateral value is sufficient\""}],"id":1013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2338:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2338:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"ExpressionStatement","src":"2338:72:5"},{"expression":{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1021,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2423:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$800_storage_ptr","typeString":"struct LendingPool.Loan storage pointer"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2428:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":799,"src":"2423:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2439:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2423:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"ExpressionStatement","src":"2423:21:5"},{"eventCall":{"arguments":[{"id":1028,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2475:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1027,"name":"LoanLiquidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2460:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"EmitStatement","src":"2455:27:5"}]},"functionSelector":"ccdd9f5d","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"liquidateLoan","nameLocation":"2105:13:5","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"loanId","nameLocation":"2127:6:5","nodeType":"VariableDeclaration","scope":1032,"src":"2119:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2119:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2118:16:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"2144:0:5"},"scope":1033,"src":"2096:394:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1034,"src":"146:2347:5","usedErrors":[],"usedEvents":[822,826,830]}],"src":"33:2462:5"},"id":5},"contracts/MockRWAToken.sol":{"ast":{"absolutePath":"contracts/MockRWAToken.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"MockRWAToken":[1088]},"id":1089,"nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":652,"src":"26:55:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1036,"name":"ERC20","nameLocations":["110:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"110:5:6"},"id":1037,"nodeType":"InheritanceSpecifier","src":"110:5:6"}],"canonicalName":"MockRWAToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1088,"linearizedBaseContracts":[1088,651,41,755,729,785],"name":"MockRWAToken","nameLocation":"94:12:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f851a440","id":1039,"mutability":"mutable","name":"admin","nameLocation":"138:5:6","nodeType":"VariableDeclaration","scope":1088,"src":"123:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1065,"nodeType":"Block","src":"226:115:6","statements":[{"expression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1050,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"237:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"245:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"249:6:6","memberName":"sender","nodeType":"MemberAccess","src":"245:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"237:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1054,"nodeType":"ExpressionStatement","src":"237:18:6"},{"expression":{"arguments":[{"id":1056,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"272:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"35","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"279:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"283:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1059,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"289:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"289:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"283:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"279:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1055,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"266:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"266:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"266:34:6"}]},"id":1066,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1046,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"212:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1047,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"218:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1048,"kind":"baseConstructorSpecifier","modifierName":{"id":1045,"name":"ERC20","nameLocations":["206:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"206:5:6"},"nodeType":"ModifierInvocation","src":"206:19:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"name","nameLocation":"178:4:6","nodeType":"VariableDeclaration","scope":1066,"src":"164:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1040,"name":"string","nodeType":"ElementaryTypeName","src":"164:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"symbol","nameLocation":"198:6:6","nodeType":"VariableDeclaration","scope":1066,"src":"184:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1042,"name":"string","nodeType":"ElementaryTypeName","src":"184:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"163:42:6"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"226:0:6"},"scope":1088,"src":"152:189:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1086,"nodeType":"Block","src":"400:98:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"419:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"423:6:6","memberName":"sender","nodeType":"MemberAccess","src":"419:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1076,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"433:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"419:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e206d696e74","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"440:21:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d96500ea9414223520a8d18635edd40ec897fdcd23024884790a0352b17fef4","typeString":"literal_string \"Only admin can mint\""},"value":"Only admin can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d96500ea9414223520a8d18635edd40ec897fdcd23024884790a0352b17fef4","typeString":"literal_string \"Only admin can mint\""}],"id":1073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"411:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"411:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"411:51:6"},{"expression":{"arguments":[{"id":1082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"479:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"483:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"473:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"473:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"473:17:6"}]},"functionSelector":"40c10f19","id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"358:4:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"to","nameLocation":"371:2:6","nodeType":"VariableDeclaration","scope":1087,"src":"363:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"amount","nameLocation":"383:6:6","nodeType":"VariableDeclaration","scope":1087,"src":"375:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"362:28:6"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"400:0:6"},"scope":1088,"src":"349:149:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1089,"src":"85:416:6","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"26:477:6"},"id":6},"contracts/RWAOracle.sol":{"ast":{"absolutePath":"contracts/RWAOracle.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"RWAOracle":[1152]},"id":1153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1090,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1153,"sourceUnit":652,"src":"62:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RWAOracle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1152,"linearizedBaseContracts":[1152],"name":"RWAOracle","nameLocation":"155:9:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f851a440","id":1093,"mutability":"mutable","name":"admin","nameLocation":"187:5:7","nodeType":"VariableDeclaration","scope":1152,"src":"172:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"172:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cfed246b","id":1097,"mutability":"mutable","name":"prices","nameLocation":"234:6:7","nodeType":"VariableDeclaration","scope":1152,"src":"199:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1096,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"199:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b84","id":1103,"name":"PriceUpdated","nameLocation":"255:12:7","nodeType":"EventDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"284:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"268:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"299:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"291:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"267:38:7"},"src":"249:57:7"},{"body":{"id":1111,"nodeType":"Block","src":"328:37:7","statements":[{"expression":{"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1106,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"339:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"347:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"351:6:7","memberName":"sender","nodeType":"MemberAccess","src":"347:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"339:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1110,"nodeType":"ExpressionStatement","src":"339:18:7"}]},"id":1112,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[],"src":"325:2:7"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"328:0:7"},"scope":1152,"src":"314:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1138,"nodeType":"Block","src":"430:153:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"449:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"453:6:7","memberName":"sender","nodeType":"MemberAccess","src":"449:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1122,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"463:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"449:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2075706461746520707269636573","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"470:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef1c71dda171e86d57395274b028fb914558f9fc3f24c799ef3ebed3d6d99d11","typeString":"literal_string \"Only admin can update prices\""},"value":"Only admin can update prices"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef1c71dda171e86d57395274b028fb914558f9fc3f24c799ef3ebed3d6d99d11","typeString":"literal_string \"Only admin can update prices\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"441:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"441:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"441:60:7"},{"expression":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1127,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"512:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1129,"indexExpression":{"id":1128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"519:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"512:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1130,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"528:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"512:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1132,"nodeType":"ExpressionStatement","src":"512:21:7"},{"eventCall":{"arguments":[{"id":1134,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"562:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"569:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1133,"name":"PriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"549:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"549:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"EmitStatement","src":"544:31:7"}]},"functionSelector":"00e4768b","id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"setPrice","nameLocation":"382:8:7","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"token","nameLocation":"399:5:7","nodeType":"VariableDeclaration","scope":1139,"src":"391:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"391:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"price","nameLocation":"414:5:7","nodeType":"VariableDeclaration","scope":1139,"src":"406:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"390:30:7"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"430:0:7"},"scope":1152,"src":"373:210:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1150,"nodeType":"Block","src":"656:39:7","statements":[{"expression":{"baseExpression":{"id":1146,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"674:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1148,"indexExpression":{"id":1147,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"681:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"674:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1145,"id":1149,"nodeType":"Return","src":"667:20:7"}]},"functionSelector":"41976e09","id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"600:8:7","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"token","nameLocation":"617:5:7","nodeType":"VariableDeclaration","scope":1151,"src":"609:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:15:7"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"647:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:9:7"},"scope":1152,"src":"591:104:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1153,"src":"146:552:7","usedErrors":[],"usedEvents":[1103]}],"src":"33:665:7"},"id":7}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LendingPool.sol":{"LendingPool":{"abi":[{"inputs":[{"internalType":"address","name":"_oracle","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":false,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateral","type":"uint256"}],"name":"LoanCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanRepaid","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"}],"name":"createLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"liquidateLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loanCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"loans","outputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract RWAOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"repayLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_847":{"entryPoint":null,"id":847,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":94,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:306:8","nodeType":"YulBlock","src":"0:306:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"95:209:8","nodeType":"YulBlock","src":"95:209:8","statements":[{"body":{"nativeSrc":"141:16:8","nodeType":"YulBlock","src":"141:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:8","nodeType":"YulLiteral","src":"150:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:8","nodeType":"YulLiteral","src":"153:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:8","nodeType":"YulIdentifier","src":"143:6:8"},"nativeSrc":"143:12:8","nodeType":"YulFunctionCall","src":"143:12:8"},"nativeSrc":"143:12:8","nodeType":"YulExpressionStatement","src":"143:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:8","nodeType":"YulIdentifier","src":"116:7:8"},{"name":"headStart","nativeSrc":"125:9:8","nodeType":"YulIdentifier","src":"125:9:8"}],"functionName":{"name":"sub","nativeSrc":"112:3:8","nodeType":"YulIdentifier","src":"112:3:8"},"nativeSrc":"112:23:8","nodeType":"YulFunctionCall","src":"112:23:8"},{"kind":"number","nativeSrc":"137:2:8","nodeType":"YulLiteral","src":"137:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:8","nodeType":"YulIdentifier","src":"108:3:8"},"nativeSrc":"108:32:8","nodeType":"YulFunctionCall","src":"108:32:8"},"nativeSrc":"105:52:8","nodeType":"YulIf","src":"105:52:8"},{"nativeSrc":"166:29:8","nodeType":"YulVariableDeclaration","src":"166:29:8","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:8","nodeType":"YulIdentifier","src":"185:9:8"}],"functionName":{"name":"mload","nativeSrc":"179:5:8","nodeType":"YulIdentifier","src":"179:5:8"},"nativeSrc":"179:16:8","nodeType":"YulFunctionCall","src":"179:16:8"},"variables":[{"name":"value","nativeSrc":"170:5:8","nodeType":"YulTypedName","src":"170:5:8","type":""}]},{"body":{"nativeSrc":"258:16:8","nodeType":"YulBlock","src":"258:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:8","nodeType":"YulLiteral","src":"267:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:8","nodeType":"YulLiteral","src":"270:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:8","nodeType":"YulIdentifier","src":"260:6:8"},"nativeSrc":"260:12:8","nodeType":"YulFunctionCall","src":"260:12:8"},"nativeSrc":"260:12:8","nodeType":"YulExpressionStatement","src":"260:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:8","nodeType":"YulIdentifier","src":"217:5:8"},{"arguments":[{"name":"value","nativeSrc":"228:5:8","nodeType":"YulIdentifier","src":"228:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:8","nodeType":"YulLiteral","src":"243:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:8","nodeType":"YulLiteral","src":"248:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:8","nodeType":"YulIdentifier","src":"239:3:8"},"nativeSrc":"239:11:8","nodeType":"YulFunctionCall","src":"239:11:8"},{"kind":"number","nativeSrc":"252:1:8","nodeType":"YulLiteral","src":"252:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:8","nodeType":"YulIdentifier","src":"235:3:8"},"nativeSrc":"235:19:8","nodeType":"YulFunctionCall","src":"235:19:8"}],"functionName":{"name":"and","nativeSrc":"224:3:8","nodeType":"YulIdentifier","src":"224:3:8"},"nativeSrc":"224:31:8","nodeType":"YulFunctionCall","src":"224:31:8"}],"functionName":{"name":"eq","nativeSrc":"214:2:8","nodeType":"YulIdentifier","src":"214:2:8"},"nativeSrc":"214:42:8","nodeType":"YulFunctionCall","src":"214:42:8"}],"functionName":{"name":"iszero","nativeSrc":"207:6:8","nodeType":"YulIdentifier","src":"207:6:8"},"nativeSrc":"207:50:8","nodeType":"YulFunctionCall","src":"207:50:8"},"nativeSrc":"204:70:8","nodeType":"YulIf","src":"204:70:8"},{"nativeSrc":"283:15:8","nodeType":"YulAssignment","src":"283:15:8","value":{"name":"value","nativeSrc":"293:5:8","nodeType":"YulIdentifier","src":"293:5:8"},"variableNames":[{"name":"value0","nativeSrc":"283:6:8","nodeType":"YulIdentifier","src":"283:6:8"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:8","nodeType":"YulTypedName","src":"61:9:8","type":""},{"name":"dataEnd","nativeSrc":"72:7:8","nodeType":"YulTypedName","src":"72:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:8","nodeType":"YulTypedName","src":"84:6:8","type":""}],"src":"14:290:8"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052348015600f57600080fd5b506040516109a23803806109a2833981016040819052602c91605e565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055608c565b600060208284031215606f57600080fd5b81516001600160a01b0381168114608557600080fd5b9392505050565b6109078061009b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ab7b1c891161005b578063ab7b1c89146100de578063ccdd9f5d146100f1578063e1ec3c6814610104578063f851a4401461018657600080fd5b806334d9289e14610082578063488dd3e61461009e5780637dc0d1d0146100b3575b600080fd5b61008b60035481565b6040519081526020015b60405180910390f35b6100b16100ac3660046107e9565b610199565b005b6001546100c6906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6100b16100ec36600461082a565b61048b565b6100b16100ff36600461082a565b61067b565b61015161011236600461082a565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039283169490921692909160ff1685565b604080516001600160a01b0396871681529590941660208601529284019190915260608301521515608082015260a001610095565b6000546100c6906001600160a01b031681565b6001546040516341976e0960e01b81526001600160a01b03858116600483015260009216906341976e0990602401602060405180830381865afa1580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102089190610843565b116102505760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064015b60405180910390fd5b6001546040516341976e0960e01b81526001600160a01b03858116600483015260009216906341976e0990602401602060405180830381865afa15801561029b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bf9190610843565b6102c99083610872565b90508281101561031b5760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606401610247565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061088f565b506040805160a081018252338082526001600160a01b03878116602080850191825284860189815260608087018a81526001608089018181526003805460009081526002808952908d90209b518c546001600160a01b0319908116918c16919091178d559851938c018054909916939099169290921790965592519588019590955593518682015591516004909501805460ff19169515159590951790945554845192835292820187905292810185905290917f3373919ad665425d2cddb4072830e5935b6ee308440fa99b23383648da473bc0910160405180910390a260038054906000610480836108b8565b919050555050505050565b6000818152600260205260409020600481015460ff166104e25760405162461bcd60e51b81526020600482015260126024820152714c6f616e206973206e6f742061637469766560701b6044820152606401610247565b80546001600160a01b0316331461053b5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920626f72726f7765722063616e2072657061790000000000000000006044820152606401610247565b600181015460028201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be919061088f565b5060018101548154600383015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af115801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f919061088f565b5060048101805460ff1916905560405182907f9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc4718690600090a25050565b6000818152600260205260409020600481015460ff166106d25760405162461bcd60e51b81526020600482015260126024820152714c6f616e206973206e6f742061637469766560701b6044820152606401610247565b60018054908201546040516341976e0960e01b81526001600160a01b03918216600482015260009291909116906341976e0990602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190610843565b82600301546107589190610872565b9050816002015481106107ad5760405162461bcd60e51b815260206004820152601e60248201527f436f6c6c61746572616c2076616c75652069732073756666696369656e7400006044820152606401610247565b60048201805460ff1916905560405183907faf91ffe368225045d42f7c2b4b90feb438133ac1e375e73bc9066652b70a1d7790600090a2505050565b6000806000606084860312156107fe57600080fd5b83356001600160a01b038116811461081557600080fd5b95602085013595506040909401359392505050565b60006020828403121561083c57600080fd5b5035919050565b60006020828403121561085557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108895761088961085c565b92915050565b6000602082840312156108a157600080fd5b815180151581146108b157600080fd5b9392505050565b6000600182016108ca576108ca61085c565b506001019056fea2646970667358221220e1f8272057b401d9c1dd1d81aae62641fdb929bf4f4b43a7e884b913747aa19764736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9A2 CODESIZE SUB DUP1 PUSH2 0x9A2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2C SWAP2 PUSH1 0x5E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x907 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB7B1C89 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xCCDD9F5D EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34D9289E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x488DD3E6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0xB1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0xB1 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x151 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST GT PUSH2 0x250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2C9 SWAP1 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP5 DUP7 ADD DUP10 DUP2 MSTORE PUSH1 0x60 DUP1 DUP8 ADD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP10 MSTORE SWAP1 DUP14 SWAP1 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP13 AND SWAP2 SWAP1 SWAP2 OR DUP14 SSTORE SWAP9 MLOAD SWAP4 DUP13 ADD DUP1 SLOAD SWAP1 SWAP10 AND SWAP4 SWAP1 SWAP10 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP7 SSTORE SWAP3 MLOAD SWAP6 DUP9 ADD SWAP6 SWAP1 SWAP6 SSTORE SWAP4 MLOAD DUP7 DUP3 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SLOAD DUP5 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 PUSH32 0x3373919AD665425D2CDDB4072830E5935B6EE308440FA99B23383648DA473BC0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x480 DUP4 PUSH2 0x8B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4C6F616E206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626F72726F7765722063616E207265706179000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x9A7851747CD7FFB3FE0A32CAF3DA48B31F27CEBE131267051640F8B72FC47186 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4C6F616E206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 LT PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C61746572616C2076616C75652069732073756666696369656E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0xAF91FFE368225045D42F7C2B4B90FEB438133AC1E375E73BC9066652B70A1D77 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x889 JUMPI PUSH2 0x889 PUSH2 0x85C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x85C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xF8 0x27 KECCAK256 JUMPI 0xB4 ADD 0xD9 0xC1 0xDD SAR DUP2 0xAA 0xE6 0x26 COINBASE REVERT 0xB9 0x29 0xBF 0x4F 0x4B NUMBER 0xA7 0xE8 DUP5 0xB9 SGT PUSH21 0x7AA19764736F6C634300081A003300000000000000 ","sourceMap":"146:2347:5:-:0;;;669:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;709:5;:18;;717:10;-1:-1:-1;;;;;;709:18:5;;;;;;;-1:-1:-1;738:27:5;;;;;-1:-1:-1;;;;;738:27:5;;;;;;;;;;146:2347;;14:290:8;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;:::-;146:2347:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@admin_802":{"entryPoint":null,"id":802,"parameterSlots":0,"returnSlots":0},"@createLoan_920":{"entryPoint":409,"id":920,"parameterSlots":3,"returnSlots":0},"@liquidateLoan_1032":{"entryPoint":1659,"id":1032,"parameterSlots":1,"returnSlots":0},"@loanCounter_812":{"entryPoint":null,"id":812,"parameterSlots":0,"returnSlots":0},"@loans_810":{"entryPoint":null,"id":810,"parameterSlots":0,"returnSlots":0},"@oracle_805":{"entryPoint":null,"id":805,"parameterSlots":0,"returnSlots":0},"@repayLoan_984":{"entryPoint":1163,"id":984,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":2025,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_RWAOracle_$1152__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eabe3d27c8c68aa5d541c9b67703a5365349796e19ce4d9d4eefbd36d057c7b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2162,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":2232,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2140,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5598:8","nodeType":"YulBlock","src":"0:5598:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"115:76:8","nodeType":"YulBlock","src":"115:76:8","statements":[{"nativeSrc":"125:26:8","nodeType":"YulAssignment","src":"125:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:8","nodeType":"YulIdentifier","src":"137:9:8"},{"kind":"number","nativeSrc":"148:2:8","nodeType":"YulLiteral","src":"148:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:8","nodeType":"YulIdentifier","src":"133:3:8"},"nativeSrc":"133:18:8","nodeType":"YulFunctionCall","src":"133:18:8"},"variableNames":[{"name":"tail","nativeSrc":"125:4:8","nodeType":"YulIdentifier","src":"125:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:8","nodeType":"YulIdentifier","src":"167:9:8"},{"name":"value0","nativeSrc":"178:6:8","nodeType":"YulIdentifier","src":"178:6:8"}],"functionName":{"name":"mstore","nativeSrc":"160:6:8","nodeType":"YulIdentifier","src":"160:6:8"},"nativeSrc":"160:25:8","nodeType":"YulFunctionCall","src":"160:25:8"},"nativeSrc":"160:25:8","nodeType":"YulExpressionStatement","src":"160:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14:177:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:8","nodeType":"YulTypedName","src":"84:9:8","type":""},{"name":"value0","nativeSrc":"95:6:8","nodeType":"YulTypedName","src":"95:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:8","nodeType":"YulTypedName","src":"106:4:8","type":""}],"src":"14:177:8"},{"body":{"nativeSrc":"300:422:8","nodeType":"YulBlock","src":"300:422:8","statements":[{"body":{"nativeSrc":"346:16:8","nodeType":"YulBlock","src":"346:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"355:1:8","nodeType":"YulLiteral","src":"355:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"358:1:8","nodeType":"YulLiteral","src":"358:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"348:6:8","nodeType":"YulIdentifier","src":"348:6:8"},"nativeSrc":"348:12:8","nodeType":"YulFunctionCall","src":"348:12:8"},"nativeSrc":"348:12:8","nodeType":"YulExpressionStatement","src":"348:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"321:7:8","nodeType":"YulIdentifier","src":"321:7:8"},{"name":"headStart","nativeSrc":"330:9:8","nodeType":"YulIdentifier","src":"330:9:8"}],"functionName":{"name":"sub","nativeSrc":"317:3:8","nodeType":"YulIdentifier","src":"317:3:8"},"nativeSrc":"317:23:8","nodeType":"YulFunctionCall","src":"317:23:8"},{"kind":"number","nativeSrc":"342:2:8","nodeType":"YulLiteral","src":"342:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"313:3:8","nodeType":"YulIdentifier","src":"313:3:8"},"nativeSrc":"313:32:8","nodeType":"YulFunctionCall","src":"313:32:8"},"nativeSrc":"310:52:8","nodeType":"YulIf","src":"310:52:8"},{"nativeSrc":"371:36:8","nodeType":"YulVariableDeclaration","src":"371:36:8","value":{"arguments":[{"name":"headStart","nativeSrc":"397:9:8","nodeType":"YulIdentifier","src":"397:9:8"}],"functionName":{"name":"calldataload","nativeSrc":"384:12:8","nodeType":"YulIdentifier","src":"384:12:8"},"nativeSrc":"384:23:8","nodeType":"YulFunctionCall","src":"384:23:8"},"variables":[{"name":"value","nativeSrc":"375:5:8","nodeType":"YulTypedName","src":"375:5:8","type":""}]},{"body":{"nativeSrc":"470:16:8","nodeType":"YulBlock","src":"470:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"479:1:8","nodeType":"YulLiteral","src":"479:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"482:1:8","nodeType":"YulLiteral","src":"482:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"472:6:8","nodeType":"YulIdentifier","src":"472:6:8"},"nativeSrc":"472:12:8","nodeType":"YulFunctionCall","src":"472:12:8"},"nativeSrc":"472:12:8","nodeType":"YulExpressionStatement","src":"472:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"429:5:8","nodeType":"YulIdentifier","src":"429:5:8"},{"arguments":[{"name":"value","nativeSrc":"440:5:8","nodeType":"YulIdentifier","src":"440:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"455:3:8","nodeType":"YulLiteral","src":"455:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"460:1:8","nodeType":"YulLiteral","src":"460:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"451:3:8","nodeType":"YulIdentifier","src":"451:3:8"},"nativeSrc":"451:11:8","nodeType":"YulFunctionCall","src":"451:11:8"},{"kind":"number","nativeSrc":"464:1:8","nodeType":"YulLiteral","src":"464:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"447:3:8","nodeType":"YulIdentifier","src":"447:3:8"},"nativeSrc":"447:19:8","nodeType":"YulFunctionCall","src":"447:19:8"}],"functionName":{"name":"and","nativeSrc":"436:3:8","nodeType":"YulIdentifier","src":"436:3:8"},"nativeSrc":"436:31:8","nodeType":"YulFunctionCall","src":"436:31:8"}],"functionName":{"name":"eq","nativeSrc":"426:2:8","nodeType":"YulIdentifier","src":"426:2:8"},"nativeSrc":"426:42:8","nodeType":"YulFunctionCall","src":"426:42:8"}],"functionName":{"name":"iszero","nativeSrc":"419:6:8","nodeType":"YulIdentifier","src":"419:6:8"},"nativeSrc":"419:50:8","nodeType":"YulFunctionCall","src":"419:50:8"},"nativeSrc":"416:70:8","nodeType":"YulIf","src":"416:70:8"},{"nativeSrc":"495:15:8","nodeType":"YulAssignment","src":"495:15:8","value":{"name":"value","nativeSrc":"505:5:8","nodeType":"YulIdentifier","src":"505:5:8"},"variableNames":[{"name":"value0","nativeSrc":"495:6:8","nodeType":"YulIdentifier","src":"495:6:8"}]},{"nativeSrc":"519:16:8","nodeType":"YulVariableDeclaration","src":"519:16:8","value":{"kind":"number","nativeSrc":"534:1:8","nodeType":"YulLiteral","src":"534:1:8","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"523:7:8","nodeType":"YulTypedName","src":"523:7:8","type":""}]},{"nativeSrc":"544:43:8","nodeType":"YulAssignment","src":"544:43:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"572:9:8","nodeType":"YulIdentifier","src":"572:9:8"},{"kind":"number","nativeSrc":"583:2:8","nodeType":"YulLiteral","src":"583:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"568:3:8","nodeType":"YulIdentifier","src":"568:3:8"},"nativeSrc":"568:18:8","nodeType":"YulFunctionCall","src":"568:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"555:12:8","nodeType":"YulIdentifier","src":"555:12:8"},"nativeSrc":"555:32:8","nodeType":"YulFunctionCall","src":"555:32:8"},"variableNames":[{"name":"value_1","nativeSrc":"544:7:8","nodeType":"YulIdentifier","src":"544:7:8"}]},{"nativeSrc":"596:17:8","nodeType":"YulAssignment","src":"596:17:8","value":{"name":"value_1","nativeSrc":"606:7:8","nodeType":"YulIdentifier","src":"606:7:8"},"variableNames":[{"name":"value1","nativeSrc":"596:6:8","nodeType":"YulIdentifier","src":"596:6:8"}]},{"nativeSrc":"622:16:8","nodeType":"YulVariableDeclaration","src":"622:16:8","value":{"kind":"number","nativeSrc":"637:1:8","nodeType":"YulLiteral","src":"637:1:8","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"626:7:8","nodeType":"YulTypedName","src":"626:7:8","type":""}]},{"nativeSrc":"647:43:8","nodeType":"YulAssignment","src":"647:43:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"675:9:8","nodeType":"YulIdentifier","src":"675:9:8"},{"kind":"number","nativeSrc":"686:2:8","nodeType":"YulLiteral","src":"686:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"671:3:8","nodeType":"YulIdentifier","src":"671:3:8"},"nativeSrc":"671:18:8","nodeType":"YulFunctionCall","src":"671:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"658:12:8","nodeType":"YulIdentifier","src":"658:12:8"},"nativeSrc":"658:32:8","nodeType":"YulFunctionCall","src":"658:32:8"},"variableNames":[{"name":"value_2","nativeSrc":"647:7:8","nodeType":"YulIdentifier","src":"647:7:8"}]},{"nativeSrc":"699:17:8","nodeType":"YulAssignment","src":"699:17:8","value":{"name":"value_2","nativeSrc":"709:7:8","nodeType":"YulIdentifier","src":"709:7:8"},"variableNames":[{"name":"value2","nativeSrc":"699:6:8","nodeType":"YulIdentifier","src":"699:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nativeSrc":"196:526:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"250:9:8","nodeType":"YulTypedName","src":"250:9:8","type":""},{"name":"dataEnd","nativeSrc":"261:7:8","nodeType":"YulTypedName","src":"261:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"273:6:8","nodeType":"YulTypedName","src":"273:6:8","type":""},{"name":"value1","nativeSrc":"281:6:8","nodeType":"YulTypedName","src":"281:6:8","type":""},{"name":"value2","nativeSrc":"289:6:8","nodeType":"YulTypedName","src":"289:6:8","type":""}],"src":"196:526:8"},{"body":{"nativeSrc":"846:102:8","nodeType":"YulBlock","src":"846:102:8","statements":[{"nativeSrc":"856:26:8","nodeType":"YulAssignment","src":"856:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"868:9:8","nodeType":"YulIdentifier","src":"868:9:8"},{"kind":"number","nativeSrc":"879:2:8","nodeType":"YulLiteral","src":"879:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"864:3:8","nodeType":"YulIdentifier","src":"864:3:8"},"nativeSrc":"864:18:8","nodeType":"YulFunctionCall","src":"864:18:8"},"variableNames":[{"name":"tail","nativeSrc":"856:4:8","nodeType":"YulIdentifier","src":"856:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"898:9:8","nodeType":"YulIdentifier","src":"898:9:8"},{"arguments":[{"name":"value0","nativeSrc":"913:6:8","nodeType":"YulIdentifier","src":"913:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"929:3:8","nodeType":"YulLiteral","src":"929:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"934:1:8","nodeType":"YulLiteral","src":"934:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"925:3:8","nodeType":"YulIdentifier","src":"925:3:8"},"nativeSrc":"925:11:8","nodeType":"YulFunctionCall","src":"925:11:8"},{"kind":"number","nativeSrc":"938:1:8","nodeType":"YulLiteral","src":"938:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"921:3:8","nodeType":"YulIdentifier","src":"921:3:8"},"nativeSrc":"921:19:8","nodeType":"YulFunctionCall","src":"921:19:8"}],"functionName":{"name":"and","nativeSrc":"909:3:8","nodeType":"YulIdentifier","src":"909:3:8"},"nativeSrc":"909:32:8","nodeType":"YulFunctionCall","src":"909:32:8"}],"functionName":{"name":"mstore","nativeSrc":"891:6:8","nodeType":"YulIdentifier","src":"891:6:8"},"nativeSrc":"891:51:8","nodeType":"YulFunctionCall","src":"891:51:8"},"nativeSrc":"891:51:8","nodeType":"YulExpressionStatement","src":"891:51:8"}]},"name":"abi_encode_tuple_t_contract$_RWAOracle_$1152__to_t_address__fromStack_reversed","nativeSrc":"727:221:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"815:9:8","nodeType":"YulTypedName","src":"815:9:8","type":""},{"name":"value0","nativeSrc":"826:6:8","nodeType":"YulTypedName","src":"826:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"837:4:8","nodeType":"YulTypedName","src":"837:4:8","type":""}],"src":"727:221:8"},{"body":{"nativeSrc":"1023:156:8","nodeType":"YulBlock","src":"1023:156:8","statements":[{"body":{"nativeSrc":"1069:16:8","nodeType":"YulBlock","src":"1069:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1078:1:8","nodeType":"YulLiteral","src":"1078:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1081:1:8","nodeType":"YulLiteral","src":"1081:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1071:6:8","nodeType":"YulIdentifier","src":"1071:6:8"},"nativeSrc":"1071:12:8","nodeType":"YulFunctionCall","src":"1071:12:8"},"nativeSrc":"1071:12:8","nodeType":"YulExpressionStatement","src":"1071:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1044:7:8","nodeType":"YulIdentifier","src":"1044:7:8"},{"name":"headStart","nativeSrc":"1053:9:8","nodeType":"YulIdentifier","src":"1053:9:8"}],"functionName":{"name":"sub","nativeSrc":"1040:3:8","nodeType":"YulIdentifier","src":"1040:3:8"},"nativeSrc":"1040:23:8","nodeType":"YulFunctionCall","src":"1040:23:8"},{"kind":"number","nativeSrc":"1065:2:8","nodeType":"YulLiteral","src":"1065:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1036:3:8","nodeType":"YulIdentifier","src":"1036:3:8"},"nativeSrc":"1036:32:8","nodeType":"YulFunctionCall","src":"1036:32:8"},"nativeSrc":"1033:52:8","nodeType":"YulIf","src":"1033:52:8"},{"nativeSrc":"1094:14:8","nodeType":"YulVariableDeclaration","src":"1094:14:8","value":{"kind":"number","nativeSrc":"1107:1:8","nodeType":"YulLiteral","src":"1107:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1098:5:8","nodeType":"YulTypedName","src":"1098:5:8","type":""}]},{"nativeSrc":"1117:32:8","nodeType":"YulAssignment","src":"1117:32:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1139:9:8","nodeType":"YulIdentifier","src":"1139:9:8"}],"functionName":{"name":"calldataload","nativeSrc":"1126:12:8","nodeType":"YulIdentifier","src":"1126:12:8"},"nativeSrc":"1126:23:8","nodeType":"YulFunctionCall","src":"1126:23:8"},"variableNames":[{"name":"value","nativeSrc":"1117:5:8","nodeType":"YulIdentifier","src":"1117:5:8"}]},{"nativeSrc":"1158:15:8","nodeType":"YulAssignment","src":"1158:15:8","value":{"name":"value","nativeSrc":"1168:5:8","nodeType":"YulIdentifier","src":"1168:5:8"},"variableNames":[{"name":"value0","nativeSrc":"1158:6:8","nodeType":"YulIdentifier","src":"1158:6:8"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"953:226:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"989:9:8","nodeType":"YulTypedName","src":"989:9:8","type":""},{"name":"dataEnd","nativeSrc":"1000:7:8","nodeType":"YulTypedName","src":"1000:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1012:6:8","nodeType":"YulTypedName","src":"1012:6:8","type":""}],"src":"953:226:8"},{"body":{"nativeSrc":"1391:318:8","nodeType":"YulBlock","src":"1391:318:8","statements":[{"nativeSrc":"1401:27:8","nodeType":"YulAssignment","src":"1401:27:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1413:9:8","nodeType":"YulIdentifier","src":"1413:9:8"},{"kind":"number","nativeSrc":"1424:3:8","nodeType":"YulLiteral","src":"1424:3:8","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"1409:3:8","nodeType":"YulIdentifier","src":"1409:3:8"},"nativeSrc":"1409:19:8","nodeType":"YulFunctionCall","src":"1409:19:8"},"variableNames":[{"name":"tail","nativeSrc":"1401:4:8","nodeType":"YulIdentifier","src":"1401:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1444:9:8","nodeType":"YulIdentifier","src":"1444:9:8"},{"arguments":[{"name":"value0","nativeSrc":"1459:6:8","nodeType":"YulIdentifier","src":"1459:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1475:3:8","nodeType":"YulLiteral","src":"1475:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"1480:1:8","nodeType":"YulLiteral","src":"1480:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1471:3:8","nodeType":"YulIdentifier","src":"1471:3:8"},"nativeSrc":"1471:11:8","nodeType":"YulFunctionCall","src":"1471:11:8"},{"kind":"number","nativeSrc":"1484:1:8","nodeType":"YulLiteral","src":"1484:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1467:3:8","nodeType":"YulIdentifier","src":"1467:3:8"},"nativeSrc":"1467:19:8","nodeType":"YulFunctionCall","src":"1467:19:8"}],"functionName":{"name":"and","nativeSrc":"1455:3:8","nodeType":"YulIdentifier","src":"1455:3:8"},"nativeSrc":"1455:32:8","nodeType":"YulFunctionCall","src":"1455:32:8"}],"functionName":{"name":"mstore","nativeSrc":"1437:6:8","nodeType":"YulIdentifier","src":"1437:6:8"},"nativeSrc":"1437:51:8","nodeType":"YulFunctionCall","src":"1437:51:8"},"nativeSrc":"1437:51:8","nodeType":"YulExpressionStatement","src":"1437:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1508:9:8","nodeType":"YulIdentifier","src":"1508:9:8"},{"kind":"number","nativeSrc":"1519:2:8","nodeType":"YulLiteral","src":"1519:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1504:3:8","nodeType":"YulIdentifier","src":"1504:3:8"},"nativeSrc":"1504:18:8","nodeType":"YulFunctionCall","src":"1504:18:8"},{"arguments":[{"name":"value1","nativeSrc":"1528:6:8","nodeType":"YulIdentifier","src":"1528:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1544:3:8","nodeType":"YulLiteral","src":"1544:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"1549:1:8","nodeType":"YulLiteral","src":"1549:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1540:3:8","nodeType":"YulIdentifier","src":"1540:3:8"},"nativeSrc":"1540:11:8","nodeType":"YulFunctionCall","src":"1540:11:8"},{"kind":"number","nativeSrc":"1553:1:8","nodeType":"YulLiteral","src":"1553:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1536:3:8","nodeType":"YulIdentifier","src":"1536:3:8"},"nativeSrc":"1536:19:8","nodeType":"YulFunctionCall","src":"1536:19:8"}],"functionName":{"name":"and","nativeSrc":"1524:3:8","nodeType":"YulIdentifier","src":"1524:3:8"},"nativeSrc":"1524:32:8","nodeType":"YulFunctionCall","src":"1524:32:8"}],"functionName":{"name":"mstore","nativeSrc":"1497:6:8","nodeType":"YulIdentifier","src":"1497:6:8"},"nativeSrc":"1497:60:8","nodeType":"YulFunctionCall","src":"1497:60:8"},"nativeSrc":"1497:60:8","nodeType":"YulExpressionStatement","src":"1497:60:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1577:9:8","nodeType":"YulIdentifier","src":"1577:9:8"},{"kind":"number","nativeSrc":"1588:2:8","nodeType":"YulLiteral","src":"1588:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1573:3:8","nodeType":"YulIdentifier","src":"1573:3:8"},"nativeSrc":"1573:18:8","nodeType":"YulFunctionCall","src":"1573:18:8"},{"name":"value2","nativeSrc":"1593:6:8","nodeType":"YulIdentifier","src":"1593:6:8"}],"functionName":{"name":"mstore","nativeSrc":"1566:6:8","nodeType":"YulIdentifier","src":"1566:6:8"},"nativeSrc":"1566:34:8","nodeType":"YulFunctionCall","src":"1566:34:8"},"nativeSrc":"1566:34:8","nodeType":"YulExpressionStatement","src":"1566:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1620:9:8","nodeType":"YulIdentifier","src":"1620:9:8"},{"kind":"number","nativeSrc":"1631:2:8","nodeType":"YulLiteral","src":"1631:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1616:3:8","nodeType":"YulIdentifier","src":"1616:3:8"},"nativeSrc":"1616:18:8","nodeType":"YulFunctionCall","src":"1616:18:8"},{"name":"value3","nativeSrc":"1636:6:8","nodeType":"YulIdentifier","src":"1636:6:8"}],"functionName":{"name":"mstore","nativeSrc":"1609:6:8","nodeType":"YulIdentifier","src":"1609:6:8"},"nativeSrc":"1609:34:8","nodeType":"YulFunctionCall","src":"1609:34:8"},"nativeSrc":"1609:34:8","nodeType":"YulExpressionStatement","src":"1609:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1663:9:8","nodeType":"YulIdentifier","src":"1663:9:8"},{"kind":"number","nativeSrc":"1674:3:8","nodeType":"YulLiteral","src":"1674:3:8","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1659:3:8","nodeType":"YulIdentifier","src":"1659:3:8"},"nativeSrc":"1659:19:8","nodeType":"YulFunctionCall","src":"1659:19:8"},{"arguments":[{"arguments":[{"name":"value4","nativeSrc":"1694:6:8","nodeType":"YulIdentifier","src":"1694:6:8"}],"functionName":{"name":"iszero","nativeSrc":"1687:6:8","nodeType":"YulIdentifier","src":"1687:6:8"},"nativeSrc":"1687:14:8","nodeType":"YulFunctionCall","src":"1687:14:8"}],"functionName":{"name":"iszero","nativeSrc":"1680:6:8","nodeType":"YulIdentifier","src":"1680:6:8"},"nativeSrc":"1680:22:8","nodeType":"YulFunctionCall","src":"1680:22:8"}],"functionName":{"name":"mstore","nativeSrc":"1652:6:8","nodeType":"YulIdentifier","src":"1652:6:8"},"nativeSrc":"1652:51:8","nodeType":"YulFunctionCall","src":"1652:51:8"},"nativeSrc":"1652:51:8","nodeType":"YulExpressionStatement","src":"1652:51:8"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed","nativeSrc":"1184:525:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1328:9:8","nodeType":"YulTypedName","src":"1328:9:8","type":""},{"name":"value4","nativeSrc":"1339:6:8","nodeType":"YulTypedName","src":"1339:6:8","type":""},{"name":"value3","nativeSrc":"1347:6:8","nodeType":"YulTypedName","src":"1347:6:8","type":""},{"name":"value2","nativeSrc":"1355:6:8","nodeType":"YulTypedName","src":"1355:6:8","type":""},{"name":"value1","nativeSrc":"1363:6:8","nodeType":"YulTypedName","src":"1363:6:8","type":""},{"name":"value0","nativeSrc":"1371:6:8","nodeType":"YulTypedName","src":"1371:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1382:4:8","nodeType":"YulTypedName","src":"1382:4:8","type":""}],"src":"1184:525:8"},{"body":{"nativeSrc":"1815:102:8","nodeType":"YulBlock","src":"1815:102:8","statements":[{"nativeSrc":"1825:26:8","nodeType":"YulAssignment","src":"1825:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1837:9:8","nodeType":"YulIdentifier","src":"1837:9:8"},{"kind":"number","nativeSrc":"1848:2:8","nodeType":"YulLiteral","src":"1848:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1833:3:8","nodeType":"YulIdentifier","src":"1833:3:8"},"nativeSrc":"1833:18:8","nodeType":"YulFunctionCall","src":"1833:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1825:4:8","nodeType":"YulIdentifier","src":"1825:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1867:9:8","nodeType":"YulIdentifier","src":"1867:9:8"},{"arguments":[{"name":"value0","nativeSrc":"1882:6:8","nodeType":"YulIdentifier","src":"1882:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1898:3:8","nodeType":"YulLiteral","src":"1898:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"1903:1:8","nodeType":"YulLiteral","src":"1903:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1894:3:8","nodeType":"YulIdentifier","src":"1894:3:8"},"nativeSrc":"1894:11:8","nodeType":"YulFunctionCall","src":"1894:11:8"},{"kind":"number","nativeSrc":"1907:1:8","nodeType":"YulLiteral","src":"1907:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1890:3:8","nodeType":"YulIdentifier","src":"1890:3:8"},"nativeSrc":"1890:19:8","nodeType":"YulFunctionCall","src":"1890:19:8"}],"functionName":{"name":"and","nativeSrc":"1878:3:8","nodeType":"YulIdentifier","src":"1878:3:8"},"nativeSrc":"1878:32:8","nodeType":"YulFunctionCall","src":"1878:32:8"}],"functionName":{"name":"mstore","nativeSrc":"1860:6:8","nodeType":"YulIdentifier","src":"1860:6:8"},"nativeSrc":"1860:51:8","nodeType":"YulFunctionCall","src":"1860:51:8"},"nativeSrc":"1860:51:8","nodeType":"YulExpressionStatement","src":"1860:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1714:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1784:9:8","nodeType":"YulTypedName","src":"1784:9:8","type":""},{"name":"value0","nativeSrc":"1795:6:8","nodeType":"YulTypedName","src":"1795:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1806:4:8","nodeType":"YulTypedName","src":"1806:4:8","type":""}],"src":"1714:203:8"},{"body":{"nativeSrc":"2003:103:8","nodeType":"YulBlock","src":"2003:103:8","statements":[{"body":{"nativeSrc":"2049:16:8","nodeType":"YulBlock","src":"2049:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2058:1:8","nodeType":"YulLiteral","src":"2058:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2061:1:8","nodeType":"YulLiteral","src":"2061:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2051:6:8","nodeType":"YulIdentifier","src":"2051:6:8"},"nativeSrc":"2051:12:8","nodeType":"YulFunctionCall","src":"2051:12:8"},"nativeSrc":"2051:12:8","nodeType":"YulExpressionStatement","src":"2051:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2024:7:8","nodeType":"YulIdentifier","src":"2024:7:8"},{"name":"headStart","nativeSrc":"2033:9:8","nodeType":"YulIdentifier","src":"2033:9:8"}],"functionName":{"name":"sub","nativeSrc":"2020:3:8","nodeType":"YulIdentifier","src":"2020:3:8"},"nativeSrc":"2020:23:8","nodeType":"YulFunctionCall","src":"2020:23:8"},{"kind":"number","nativeSrc":"2045:2:8","nodeType":"YulLiteral","src":"2045:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2016:3:8","nodeType":"YulIdentifier","src":"2016:3:8"},"nativeSrc":"2016:32:8","nodeType":"YulFunctionCall","src":"2016:32:8"},"nativeSrc":"2013:52:8","nodeType":"YulIf","src":"2013:52:8"},{"nativeSrc":"2074:26:8","nodeType":"YulAssignment","src":"2074:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2090:9:8","nodeType":"YulIdentifier","src":"2090:9:8"}],"functionName":{"name":"mload","nativeSrc":"2084:5:8","nodeType":"YulIdentifier","src":"2084:5:8"},"nativeSrc":"2084:16:8","nodeType":"YulFunctionCall","src":"2084:16:8"},"variableNames":[{"name":"value0","nativeSrc":"2074:6:8","nodeType":"YulIdentifier","src":"2074:6:8"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"1922:184:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1969:9:8","nodeType":"YulTypedName","src":"1969:9:8","type":""},{"name":"dataEnd","nativeSrc":"1980:7:8","nodeType":"YulTypedName","src":"1980:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1992:6:8","nodeType":"YulTypedName","src":"1992:6:8","type":""}],"src":"1922:184:8"},{"body":{"nativeSrc":"2285:169:8","nodeType":"YulBlock","src":"2285:169:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2302:9:8","nodeType":"YulIdentifier","src":"2302:9:8"},{"kind":"number","nativeSrc":"2313:2:8","nodeType":"YulLiteral","src":"2313:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2295:6:8","nodeType":"YulIdentifier","src":"2295:6:8"},"nativeSrc":"2295:21:8","nodeType":"YulFunctionCall","src":"2295:21:8"},"nativeSrc":"2295:21:8","nodeType":"YulExpressionStatement","src":"2295:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2336:9:8","nodeType":"YulIdentifier","src":"2336:9:8"},{"kind":"number","nativeSrc":"2347:2:8","nodeType":"YulLiteral","src":"2347:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2332:3:8","nodeType":"YulIdentifier","src":"2332:3:8"},"nativeSrc":"2332:18:8","nodeType":"YulFunctionCall","src":"2332:18:8"},{"kind":"number","nativeSrc":"2352:2:8","nodeType":"YulLiteral","src":"2352:2:8","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"2325:6:8","nodeType":"YulIdentifier","src":"2325:6:8"},"nativeSrc":"2325:30:8","nodeType":"YulFunctionCall","src":"2325:30:8"},"nativeSrc":"2325:30:8","nodeType":"YulExpressionStatement","src":"2325:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2375:9:8","nodeType":"YulIdentifier","src":"2375:9:8"},{"kind":"number","nativeSrc":"2386:2:8","nodeType":"YulLiteral","src":"2386:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2371:3:8","nodeType":"YulIdentifier","src":"2371:3:8"},"nativeSrc":"2371:18:8","nodeType":"YulFunctionCall","src":"2371:18:8"},{"hexValue":"546f6b656e206e6f7420737570706f72746564","kind":"string","nativeSrc":"2391:21:8","nodeType":"YulLiteral","src":"2391:21:8","type":"","value":"Token not supported"}],"functionName":{"name":"mstore","nativeSrc":"2364:6:8","nodeType":"YulIdentifier","src":"2364:6:8"},"nativeSrc":"2364:49:8","nodeType":"YulFunctionCall","src":"2364:49:8"},"nativeSrc":"2364:49:8","nodeType":"YulExpressionStatement","src":"2364:49:8"},{"nativeSrc":"2422:26:8","nodeType":"YulAssignment","src":"2422:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2434:9:8","nodeType":"YulIdentifier","src":"2434:9:8"},{"kind":"number","nativeSrc":"2445:2:8","nodeType":"YulLiteral","src":"2445:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2430:3:8","nodeType":"YulIdentifier","src":"2430:3:8"},"nativeSrc":"2430:18:8","nodeType":"YulFunctionCall","src":"2430:18:8"},"variableNames":[{"name":"tail","nativeSrc":"2422:4:8","nodeType":"YulIdentifier","src":"2422:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2111:343:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2262:9:8","nodeType":"YulTypedName","src":"2262:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2276:4:8","nodeType":"YulTypedName","src":"2276:4:8","type":""}],"src":"2111:343:8"},{"body":{"nativeSrc":"2491:95:8","nodeType":"YulBlock","src":"2491:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2508:1:8","nodeType":"YulLiteral","src":"2508:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2515:3:8","nodeType":"YulLiteral","src":"2515:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"2520:10:8","nodeType":"YulLiteral","src":"2520:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2511:3:8","nodeType":"YulIdentifier","src":"2511:3:8"},"nativeSrc":"2511:20:8","nodeType":"YulFunctionCall","src":"2511:20:8"}],"functionName":{"name":"mstore","nativeSrc":"2501:6:8","nodeType":"YulIdentifier","src":"2501:6:8"},"nativeSrc":"2501:31:8","nodeType":"YulFunctionCall","src":"2501:31:8"},"nativeSrc":"2501:31:8","nodeType":"YulExpressionStatement","src":"2501:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2548:1:8","nodeType":"YulLiteral","src":"2548:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"2551:4:8","nodeType":"YulLiteral","src":"2551:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"2541:6:8","nodeType":"YulIdentifier","src":"2541:6:8"},"nativeSrc":"2541:15:8","nodeType":"YulFunctionCall","src":"2541:15:8"},"nativeSrc":"2541:15:8","nodeType":"YulExpressionStatement","src":"2541:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2572:1:8","nodeType":"YulLiteral","src":"2572:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2575:4:8","nodeType":"YulLiteral","src":"2575:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2565:6:8","nodeType":"YulIdentifier","src":"2565:6:8"},"nativeSrc":"2565:15:8","nodeType":"YulFunctionCall","src":"2565:15:8"},"nativeSrc":"2565:15:8","nodeType":"YulExpressionStatement","src":"2565:15:8"}]},"name":"panic_error_0x11","nativeSrc":"2459:127:8","nodeType":"YulFunctionDefinition","src":"2459:127:8"},{"body":{"nativeSrc":"2643:116:8","nodeType":"YulBlock","src":"2643:116:8","statements":[{"nativeSrc":"2653:20:8","nodeType":"YulAssignment","src":"2653:20:8","value":{"arguments":[{"name":"x","nativeSrc":"2668:1:8","nodeType":"YulIdentifier","src":"2668:1:8"},{"name":"y","nativeSrc":"2671:1:8","nodeType":"YulIdentifier","src":"2671:1:8"}],"functionName":{"name":"mul","nativeSrc":"2664:3:8","nodeType":"YulIdentifier","src":"2664:3:8"},"nativeSrc":"2664:9:8","nodeType":"YulFunctionCall","src":"2664:9:8"},"variableNames":[{"name":"product","nativeSrc":"2653:7:8","nodeType":"YulIdentifier","src":"2653:7:8"}]},{"body":{"nativeSrc":"2731:22:8","nodeType":"YulBlock","src":"2731:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"2733:16:8","nodeType":"YulIdentifier","src":"2733:16:8"},"nativeSrc":"2733:18:8","nodeType":"YulFunctionCall","src":"2733:18:8"},"nativeSrc":"2733:18:8","nodeType":"YulExpressionStatement","src":"2733:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"2702:1:8","nodeType":"YulIdentifier","src":"2702:1:8"}],"functionName":{"name":"iszero","nativeSrc":"2695:6:8","nodeType":"YulIdentifier","src":"2695:6:8"},"nativeSrc":"2695:9:8","nodeType":"YulFunctionCall","src":"2695:9:8"},{"arguments":[{"name":"y","nativeSrc":"2709:1:8","nodeType":"YulIdentifier","src":"2709:1:8"},{"arguments":[{"name":"product","nativeSrc":"2716:7:8","nodeType":"YulIdentifier","src":"2716:7:8"},{"name":"x","nativeSrc":"2725:1:8","nodeType":"YulIdentifier","src":"2725:1:8"}],"functionName":{"name":"div","nativeSrc":"2712:3:8","nodeType":"YulIdentifier","src":"2712:3:8"},"nativeSrc":"2712:15:8","nodeType":"YulFunctionCall","src":"2712:15:8"}],"functionName":{"name":"eq","nativeSrc":"2706:2:8","nodeType":"YulIdentifier","src":"2706:2:8"},"nativeSrc":"2706:22:8","nodeType":"YulFunctionCall","src":"2706:22:8"}],"functionName":{"name":"or","nativeSrc":"2692:2:8","nodeType":"YulIdentifier","src":"2692:2:8"},"nativeSrc":"2692:37:8","nodeType":"YulFunctionCall","src":"2692:37:8"}],"functionName":{"name":"iszero","nativeSrc":"2685:6:8","nodeType":"YulIdentifier","src":"2685:6:8"},"nativeSrc":"2685:45:8","nodeType":"YulFunctionCall","src":"2685:45:8"},"nativeSrc":"2682:71:8","nodeType":"YulIf","src":"2682:71:8"}]},"name":"checked_mul_t_uint256","nativeSrc":"2591:168:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2622:1:8","nodeType":"YulTypedName","src":"2622:1:8","type":""},{"name":"y","nativeSrc":"2625:1:8","nodeType":"YulTypedName","src":"2625:1:8","type":""}],"returnVariables":[{"name":"product","nativeSrc":"2631:7:8","nodeType":"YulTypedName","src":"2631:7:8","type":""}],"src":"2591:168:8"},{"body":{"nativeSrc":"2938:173:8","nodeType":"YulBlock","src":"2938:173:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2955:9:8","nodeType":"YulIdentifier","src":"2955:9:8"},{"kind":"number","nativeSrc":"2966:2:8","nodeType":"YulLiteral","src":"2966:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2948:6:8","nodeType":"YulIdentifier","src":"2948:6:8"},"nativeSrc":"2948:21:8","nodeType":"YulFunctionCall","src":"2948:21:8"},"nativeSrc":"2948:21:8","nodeType":"YulExpressionStatement","src":"2948:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2989:9:8","nodeType":"YulIdentifier","src":"2989:9:8"},{"kind":"number","nativeSrc":"3000:2:8","nodeType":"YulLiteral","src":"3000:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2985:3:8","nodeType":"YulIdentifier","src":"2985:3:8"},"nativeSrc":"2985:18:8","nodeType":"YulFunctionCall","src":"2985:18:8"},{"kind":"number","nativeSrc":"3005:2:8","nodeType":"YulLiteral","src":"3005:2:8","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"2978:6:8","nodeType":"YulIdentifier","src":"2978:6:8"},"nativeSrc":"2978:30:8","nodeType":"YulFunctionCall","src":"2978:30:8"},"nativeSrc":"2978:30:8","nodeType":"YulExpressionStatement","src":"2978:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3028:9:8","nodeType":"YulIdentifier","src":"3028:9:8"},{"kind":"number","nativeSrc":"3039:2:8","nodeType":"YulLiteral","src":"3039:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3024:3:8","nodeType":"YulIdentifier","src":"3024:3:8"},"nativeSrc":"3024:18:8","nodeType":"YulFunctionCall","src":"3024:18:8"},{"hexValue":"496e73756666696369656e7420636f6c6c61746572616c","kind":"string","nativeSrc":"3044:25:8","nodeType":"YulLiteral","src":"3044:25:8","type":"","value":"Insufficient collateral"}],"functionName":{"name":"mstore","nativeSrc":"3017:6:8","nodeType":"YulIdentifier","src":"3017:6:8"},"nativeSrc":"3017:53:8","nodeType":"YulFunctionCall","src":"3017:53:8"},"nativeSrc":"3017:53:8","nodeType":"YulExpressionStatement","src":"3017:53:8"},{"nativeSrc":"3079:26:8","nodeType":"YulAssignment","src":"3079:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3091:9:8","nodeType":"YulIdentifier","src":"3091:9:8"},{"kind":"number","nativeSrc":"3102:2:8","nodeType":"YulLiteral","src":"3102:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3087:3:8","nodeType":"YulIdentifier","src":"3087:3:8"},"nativeSrc":"3087:18:8","nodeType":"YulFunctionCall","src":"3087:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3079:4:8","nodeType":"YulIdentifier","src":"3079:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2764:347:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2915:9:8","nodeType":"YulTypedName","src":"2915:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2929:4:8","nodeType":"YulTypedName","src":"2929:4:8","type":""}],"src":"2764:347:8"},{"body":{"nativeSrc":"3273:214:8","nodeType":"YulBlock","src":"3273:214:8","statements":[{"nativeSrc":"3283:26:8","nodeType":"YulAssignment","src":"3283:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3295:9:8","nodeType":"YulIdentifier","src":"3295:9:8"},{"kind":"number","nativeSrc":"3306:2:8","nodeType":"YulLiteral","src":"3306:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3291:3:8","nodeType":"YulIdentifier","src":"3291:3:8"},"nativeSrc":"3291:18:8","nodeType":"YulFunctionCall","src":"3291:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3283:4:8","nodeType":"YulIdentifier","src":"3283:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3325:9:8","nodeType":"YulIdentifier","src":"3325:9:8"},{"arguments":[{"name":"value0","nativeSrc":"3340:6:8","nodeType":"YulIdentifier","src":"3340:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3356:3:8","nodeType":"YulLiteral","src":"3356:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"3361:1:8","nodeType":"YulLiteral","src":"3361:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3352:3:8","nodeType":"YulIdentifier","src":"3352:3:8"},"nativeSrc":"3352:11:8","nodeType":"YulFunctionCall","src":"3352:11:8"},{"kind":"number","nativeSrc":"3365:1:8","nodeType":"YulLiteral","src":"3365:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3348:3:8","nodeType":"YulIdentifier","src":"3348:3:8"},"nativeSrc":"3348:19:8","nodeType":"YulFunctionCall","src":"3348:19:8"}],"functionName":{"name":"and","nativeSrc":"3336:3:8","nodeType":"YulIdentifier","src":"3336:3:8"},"nativeSrc":"3336:32:8","nodeType":"YulFunctionCall","src":"3336:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3318:6:8","nodeType":"YulIdentifier","src":"3318:6:8"},"nativeSrc":"3318:51:8","nodeType":"YulFunctionCall","src":"3318:51:8"},"nativeSrc":"3318:51:8","nodeType":"YulExpressionStatement","src":"3318:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3389:9:8","nodeType":"YulIdentifier","src":"3389:9:8"},{"kind":"number","nativeSrc":"3400:2:8","nodeType":"YulLiteral","src":"3400:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3385:3:8","nodeType":"YulIdentifier","src":"3385:3:8"},"nativeSrc":"3385:18:8","nodeType":"YulFunctionCall","src":"3385:18:8"},{"arguments":[{"name":"value1","nativeSrc":"3409:6:8","nodeType":"YulIdentifier","src":"3409:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3425:3:8","nodeType":"YulLiteral","src":"3425:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"3430:1:8","nodeType":"YulLiteral","src":"3430:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3421:3:8","nodeType":"YulIdentifier","src":"3421:3:8"},"nativeSrc":"3421:11:8","nodeType":"YulFunctionCall","src":"3421:11:8"},{"kind":"number","nativeSrc":"3434:1:8","nodeType":"YulLiteral","src":"3434:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3417:3:8","nodeType":"YulIdentifier","src":"3417:3:8"},"nativeSrc":"3417:19:8","nodeType":"YulFunctionCall","src":"3417:19:8"}],"functionName":{"name":"and","nativeSrc":"3405:3:8","nodeType":"YulIdentifier","src":"3405:3:8"},"nativeSrc":"3405:32:8","nodeType":"YulFunctionCall","src":"3405:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3378:6:8","nodeType":"YulIdentifier","src":"3378:6:8"},"nativeSrc":"3378:60:8","nodeType":"YulFunctionCall","src":"3378:60:8"},"nativeSrc":"3378:60:8","nodeType":"YulExpressionStatement","src":"3378:60:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3458:9:8","nodeType":"YulIdentifier","src":"3458:9:8"},{"kind":"number","nativeSrc":"3469:2:8","nodeType":"YulLiteral","src":"3469:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3454:3:8","nodeType":"YulIdentifier","src":"3454:3:8"},"nativeSrc":"3454:18:8","nodeType":"YulFunctionCall","src":"3454:18:8"},{"name":"value2","nativeSrc":"3474:6:8","nodeType":"YulIdentifier","src":"3474:6:8"}],"functionName":{"name":"mstore","nativeSrc":"3447:6:8","nodeType":"YulIdentifier","src":"3447:6:8"},"nativeSrc":"3447:34:8","nodeType":"YulFunctionCall","src":"3447:34:8"},"nativeSrc":"3447:34:8","nodeType":"YulExpressionStatement","src":"3447:34:8"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"3116:371:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3226:9:8","nodeType":"YulTypedName","src":"3226:9:8","type":""},{"name":"value2","nativeSrc":"3237:6:8","nodeType":"YulTypedName","src":"3237:6:8","type":""},{"name":"value1","nativeSrc":"3245:6:8","nodeType":"YulTypedName","src":"3245:6:8","type":""},{"name":"value0","nativeSrc":"3253:6:8","nodeType":"YulTypedName","src":"3253:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3264:4:8","nodeType":"YulTypedName","src":"3264:4:8","type":""}],"src":"3116:371:8"},{"body":{"nativeSrc":"3570:199:8","nodeType":"YulBlock","src":"3570:199:8","statements":[{"body":{"nativeSrc":"3616:16:8","nodeType":"YulBlock","src":"3616:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3625:1:8","nodeType":"YulLiteral","src":"3625:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3628:1:8","nodeType":"YulLiteral","src":"3628:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3618:6:8","nodeType":"YulIdentifier","src":"3618:6:8"},"nativeSrc":"3618:12:8","nodeType":"YulFunctionCall","src":"3618:12:8"},"nativeSrc":"3618:12:8","nodeType":"YulExpressionStatement","src":"3618:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3591:7:8","nodeType":"YulIdentifier","src":"3591:7:8"},{"name":"headStart","nativeSrc":"3600:9:8","nodeType":"YulIdentifier","src":"3600:9:8"}],"functionName":{"name":"sub","nativeSrc":"3587:3:8","nodeType":"YulIdentifier","src":"3587:3:8"},"nativeSrc":"3587:23:8","nodeType":"YulFunctionCall","src":"3587:23:8"},{"kind":"number","nativeSrc":"3612:2:8","nodeType":"YulLiteral","src":"3612:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3583:3:8","nodeType":"YulIdentifier","src":"3583:3:8"},"nativeSrc":"3583:32:8","nodeType":"YulFunctionCall","src":"3583:32:8"},"nativeSrc":"3580:52:8","nodeType":"YulIf","src":"3580:52:8"},{"nativeSrc":"3641:29:8","nodeType":"YulVariableDeclaration","src":"3641:29:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3660:9:8","nodeType":"YulIdentifier","src":"3660:9:8"}],"functionName":{"name":"mload","nativeSrc":"3654:5:8","nodeType":"YulIdentifier","src":"3654:5:8"},"nativeSrc":"3654:16:8","nodeType":"YulFunctionCall","src":"3654:16:8"},"variables":[{"name":"value","nativeSrc":"3645:5:8","nodeType":"YulTypedName","src":"3645:5:8","type":""}]},{"body":{"nativeSrc":"3723:16:8","nodeType":"YulBlock","src":"3723:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3732:1:8","nodeType":"YulLiteral","src":"3732:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3735:1:8","nodeType":"YulLiteral","src":"3735:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3725:6:8","nodeType":"YulIdentifier","src":"3725:6:8"},"nativeSrc":"3725:12:8","nodeType":"YulFunctionCall","src":"3725:12:8"},"nativeSrc":"3725:12:8","nodeType":"YulExpressionStatement","src":"3725:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3692:5:8","nodeType":"YulIdentifier","src":"3692:5:8"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3713:5:8","nodeType":"YulIdentifier","src":"3713:5:8"}],"functionName":{"name":"iszero","nativeSrc":"3706:6:8","nodeType":"YulIdentifier","src":"3706:6:8"},"nativeSrc":"3706:13:8","nodeType":"YulFunctionCall","src":"3706:13:8"}],"functionName":{"name":"iszero","nativeSrc":"3699:6:8","nodeType":"YulIdentifier","src":"3699:6:8"},"nativeSrc":"3699:21:8","nodeType":"YulFunctionCall","src":"3699:21:8"}],"functionName":{"name":"eq","nativeSrc":"3689:2:8","nodeType":"YulIdentifier","src":"3689:2:8"},"nativeSrc":"3689:32:8","nodeType":"YulFunctionCall","src":"3689:32:8"}],"functionName":{"name":"iszero","nativeSrc":"3682:6:8","nodeType":"YulIdentifier","src":"3682:6:8"},"nativeSrc":"3682:40:8","nodeType":"YulFunctionCall","src":"3682:40:8"},"nativeSrc":"3679:60:8","nodeType":"YulIf","src":"3679:60:8"},{"nativeSrc":"3748:15:8","nodeType":"YulAssignment","src":"3748:15:8","value":{"name":"value","nativeSrc":"3758:5:8","nodeType":"YulIdentifier","src":"3758:5:8"},"variableNames":[{"name":"value0","nativeSrc":"3748:6:8","nodeType":"YulIdentifier","src":"3748:6:8"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"3492:277:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3536:9:8","nodeType":"YulTypedName","src":"3536:9:8","type":""},{"name":"dataEnd","nativeSrc":"3547:7:8","nodeType":"YulTypedName","src":"3547:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3559:6:8","nodeType":"YulTypedName","src":"3559:6:8","type":""}],"src":"3492:277:8"},{"body":{"nativeSrc":"3931:188:8","nodeType":"YulBlock","src":"3931:188:8","statements":[{"nativeSrc":"3941:26:8","nodeType":"YulAssignment","src":"3941:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3953:9:8","nodeType":"YulIdentifier","src":"3953:9:8"},{"kind":"number","nativeSrc":"3964:2:8","nodeType":"YulLiteral","src":"3964:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3949:3:8","nodeType":"YulIdentifier","src":"3949:3:8"},"nativeSrc":"3949:18:8","nodeType":"YulFunctionCall","src":"3949:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3941:4:8","nodeType":"YulIdentifier","src":"3941:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3983:9:8","nodeType":"YulIdentifier","src":"3983:9:8"},{"arguments":[{"name":"value0","nativeSrc":"3998:6:8","nodeType":"YulIdentifier","src":"3998:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4014:3:8","nodeType":"YulLiteral","src":"4014:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"4019:1:8","nodeType":"YulLiteral","src":"4019:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4010:3:8","nodeType":"YulIdentifier","src":"4010:3:8"},"nativeSrc":"4010:11:8","nodeType":"YulFunctionCall","src":"4010:11:8"},{"kind":"number","nativeSrc":"4023:1:8","nodeType":"YulLiteral","src":"4023:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4006:3:8","nodeType":"YulIdentifier","src":"4006:3:8"},"nativeSrc":"4006:19:8","nodeType":"YulFunctionCall","src":"4006:19:8"}],"functionName":{"name":"and","nativeSrc":"3994:3:8","nodeType":"YulIdentifier","src":"3994:3:8"},"nativeSrc":"3994:32:8","nodeType":"YulFunctionCall","src":"3994:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3976:6:8","nodeType":"YulIdentifier","src":"3976:6:8"},"nativeSrc":"3976:51:8","nodeType":"YulFunctionCall","src":"3976:51:8"},"nativeSrc":"3976:51:8","nodeType":"YulExpressionStatement","src":"3976:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4047:9:8","nodeType":"YulIdentifier","src":"4047:9:8"},{"kind":"number","nativeSrc":"4058:2:8","nodeType":"YulLiteral","src":"4058:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4043:3:8","nodeType":"YulIdentifier","src":"4043:3:8"},"nativeSrc":"4043:18:8","nodeType":"YulFunctionCall","src":"4043:18:8"},{"name":"value1","nativeSrc":"4063:6:8","nodeType":"YulIdentifier","src":"4063:6:8"}],"functionName":{"name":"mstore","nativeSrc":"4036:6:8","nodeType":"YulIdentifier","src":"4036:6:8"},"nativeSrc":"4036:34:8","nodeType":"YulFunctionCall","src":"4036:34:8"},"nativeSrc":"4036:34:8","nodeType":"YulExpressionStatement","src":"4036:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4090:9:8","nodeType":"YulIdentifier","src":"4090:9:8"},{"kind":"number","nativeSrc":"4101:2:8","nodeType":"YulLiteral","src":"4101:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4086:3:8","nodeType":"YulIdentifier","src":"4086:3:8"},"nativeSrc":"4086:18:8","nodeType":"YulFunctionCall","src":"4086:18:8"},{"name":"value2","nativeSrc":"4106:6:8","nodeType":"YulIdentifier","src":"4106:6:8"}],"functionName":{"name":"mstore","nativeSrc":"4079:6:8","nodeType":"YulIdentifier","src":"4079:6:8"},"nativeSrc":"4079:34:8","nodeType":"YulFunctionCall","src":"4079:34:8"},"nativeSrc":"4079:34:8","nodeType":"YulExpressionStatement","src":"4079:34:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3774:345:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3884:9:8","nodeType":"YulTypedName","src":"3884:9:8","type":""},{"name":"value2","nativeSrc":"3895:6:8","nodeType":"YulTypedName","src":"3895:6:8","type":""},{"name":"value1","nativeSrc":"3903:6:8","nodeType":"YulTypedName","src":"3903:6:8","type":""},{"name":"value0","nativeSrc":"3911:6:8","nodeType":"YulTypedName","src":"3911:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3922:4:8","nodeType":"YulTypedName","src":"3922:4:8","type":""}],"src":"3774:345:8"},{"body":{"nativeSrc":"4171:88:8","nodeType":"YulBlock","src":"4171:88:8","statements":[{"body":{"nativeSrc":"4202:22:8","nodeType":"YulBlock","src":"4202:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4204:16:8","nodeType":"YulIdentifier","src":"4204:16:8"},"nativeSrc":"4204:18:8","nodeType":"YulFunctionCall","src":"4204:18:8"},"nativeSrc":"4204:18:8","nodeType":"YulExpressionStatement","src":"4204:18:8"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"4187:5:8","nodeType":"YulIdentifier","src":"4187:5:8"},{"arguments":[{"kind":"number","nativeSrc":"4198:1:8","nodeType":"YulLiteral","src":"4198:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4194:3:8","nodeType":"YulIdentifier","src":"4194:3:8"},"nativeSrc":"4194:6:8","nodeType":"YulFunctionCall","src":"4194:6:8"}],"functionName":{"name":"eq","nativeSrc":"4184:2:8","nodeType":"YulIdentifier","src":"4184:2:8"},"nativeSrc":"4184:17:8","nodeType":"YulFunctionCall","src":"4184:17:8"},"nativeSrc":"4181:43:8","nodeType":"YulIf","src":"4181:43:8"},{"nativeSrc":"4233:20:8","nodeType":"YulAssignment","src":"4233:20:8","value":{"arguments":[{"name":"value","nativeSrc":"4244:5:8","nodeType":"YulIdentifier","src":"4244:5:8"},{"kind":"number","nativeSrc":"4251:1:8","nodeType":"YulLiteral","src":"4251:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4240:3:8","nodeType":"YulIdentifier","src":"4240:3:8"},"nativeSrc":"4240:13:8","nodeType":"YulFunctionCall","src":"4240:13:8"},"variableNames":[{"name":"ret","nativeSrc":"4233:3:8","nodeType":"YulIdentifier","src":"4233:3:8"}]}]},"name":"increment_t_uint256","nativeSrc":"4124:135:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4153:5:8","nodeType":"YulTypedName","src":"4153:5:8","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"4163:3:8","nodeType":"YulTypedName","src":"4163:3:8","type":""}],"src":"4124:135:8"},{"body":{"nativeSrc":"4438:168:8","nodeType":"YulBlock","src":"4438:168:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4455:9:8","nodeType":"YulIdentifier","src":"4455:9:8"},{"kind":"number","nativeSrc":"4466:2:8","nodeType":"YulLiteral","src":"4466:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4448:6:8","nodeType":"YulIdentifier","src":"4448:6:8"},"nativeSrc":"4448:21:8","nodeType":"YulFunctionCall","src":"4448:21:8"},"nativeSrc":"4448:21:8","nodeType":"YulExpressionStatement","src":"4448:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4489:9:8","nodeType":"YulIdentifier","src":"4489:9:8"},{"kind":"number","nativeSrc":"4500:2:8","nodeType":"YulLiteral","src":"4500:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4485:3:8","nodeType":"YulIdentifier","src":"4485:3:8"},"nativeSrc":"4485:18:8","nodeType":"YulFunctionCall","src":"4485:18:8"},{"kind":"number","nativeSrc":"4505:2:8","nodeType":"YulLiteral","src":"4505:2:8","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"4478:6:8","nodeType":"YulIdentifier","src":"4478:6:8"},"nativeSrc":"4478:30:8","nodeType":"YulFunctionCall","src":"4478:30:8"},"nativeSrc":"4478:30:8","nodeType":"YulExpressionStatement","src":"4478:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4528:9:8","nodeType":"YulIdentifier","src":"4528:9:8"},{"kind":"number","nativeSrc":"4539:2:8","nodeType":"YulLiteral","src":"4539:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4524:3:8","nodeType":"YulIdentifier","src":"4524:3:8"},"nativeSrc":"4524:18:8","nodeType":"YulFunctionCall","src":"4524:18:8"},{"hexValue":"4c6f616e206973206e6f7420616374697665","kind":"string","nativeSrc":"4544:20:8","nodeType":"YulLiteral","src":"4544:20:8","type":"","value":"Loan is not active"}],"functionName":{"name":"mstore","nativeSrc":"4517:6:8","nodeType":"YulIdentifier","src":"4517:6:8"},"nativeSrc":"4517:48:8","nodeType":"YulFunctionCall","src":"4517:48:8"},"nativeSrc":"4517:48:8","nodeType":"YulExpressionStatement","src":"4517:48:8"},{"nativeSrc":"4574:26:8","nodeType":"YulAssignment","src":"4574:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"4586:9:8","nodeType":"YulIdentifier","src":"4586:9:8"},{"kind":"number","nativeSrc":"4597:2:8","nodeType":"YulLiteral","src":"4597:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4582:3:8","nodeType":"YulIdentifier","src":"4582:3:8"},"nativeSrc":"4582:18:8","nodeType":"YulFunctionCall","src":"4582:18:8"},"variableNames":[{"name":"tail","nativeSrc":"4574:4:8","nodeType":"YulIdentifier","src":"4574:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4264:342:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4415:9:8","nodeType":"YulTypedName","src":"4415:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4429:4:8","nodeType":"YulTypedName","src":"4429:4:8","type":""}],"src":"4264:342:8"},{"body":{"nativeSrc":"4785:173:8","nodeType":"YulBlock","src":"4785:173:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4802:9:8","nodeType":"YulIdentifier","src":"4802:9:8"},{"kind":"number","nativeSrc":"4813:2:8","nodeType":"YulLiteral","src":"4813:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4795:6:8","nodeType":"YulIdentifier","src":"4795:6:8"},"nativeSrc":"4795:21:8","nodeType":"YulFunctionCall","src":"4795:21:8"},"nativeSrc":"4795:21:8","nodeType":"YulExpressionStatement","src":"4795:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4836:9:8","nodeType":"YulIdentifier","src":"4836:9:8"},{"kind":"number","nativeSrc":"4847:2:8","nodeType":"YulLiteral","src":"4847:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4832:3:8","nodeType":"YulIdentifier","src":"4832:3:8"},"nativeSrc":"4832:18:8","nodeType":"YulFunctionCall","src":"4832:18:8"},{"kind":"number","nativeSrc":"4852:2:8","nodeType":"YulLiteral","src":"4852:2:8","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"4825:6:8","nodeType":"YulIdentifier","src":"4825:6:8"},"nativeSrc":"4825:30:8","nodeType":"YulFunctionCall","src":"4825:30:8"},"nativeSrc":"4825:30:8","nodeType":"YulExpressionStatement","src":"4825:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4875:9:8","nodeType":"YulIdentifier","src":"4875:9:8"},{"kind":"number","nativeSrc":"4886:2:8","nodeType":"YulLiteral","src":"4886:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4871:3:8","nodeType":"YulIdentifier","src":"4871:3:8"},"nativeSrc":"4871:18:8","nodeType":"YulFunctionCall","src":"4871:18:8"},{"hexValue":"4f6e6c7920626f72726f7765722063616e207265706179","kind":"string","nativeSrc":"4891:25:8","nodeType":"YulLiteral","src":"4891:25:8","type":"","value":"Only borrower can repay"}],"functionName":{"name":"mstore","nativeSrc":"4864:6:8","nodeType":"YulIdentifier","src":"4864:6:8"},"nativeSrc":"4864:53:8","nodeType":"YulFunctionCall","src":"4864:53:8"},"nativeSrc":"4864:53:8","nodeType":"YulExpressionStatement","src":"4864:53:8"},{"nativeSrc":"4926:26:8","nodeType":"YulAssignment","src":"4926:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"4938:9:8","nodeType":"YulIdentifier","src":"4938:9:8"},{"kind":"number","nativeSrc":"4949:2:8","nodeType":"YulLiteral","src":"4949:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4934:3:8","nodeType":"YulIdentifier","src":"4934:3:8"},"nativeSrc":"4934:18:8","nodeType":"YulFunctionCall","src":"4934:18:8"},"variableNames":[{"name":"tail","nativeSrc":"4926:4:8","nodeType":"YulIdentifier","src":"4926:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4611:347:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4762:9:8","nodeType":"YulTypedName","src":"4762:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4776:4:8","nodeType":"YulTypedName","src":"4776:4:8","type":""}],"src":"4611:347:8"},{"body":{"nativeSrc":"5092:145:8","nodeType":"YulBlock","src":"5092:145:8","statements":[{"nativeSrc":"5102:26:8","nodeType":"YulAssignment","src":"5102:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5114:9:8","nodeType":"YulIdentifier","src":"5114:9:8"},{"kind":"number","nativeSrc":"5125:2:8","nodeType":"YulLiteral","src":"5125:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5110:3:8","nodeType":"YulIdentifier","src":"5110:3:8"},"nativeSrc":"5110:18:8","nodeType":"YulFunctionCall","src":"5110:18:8"},"variableNames":[{"name":"tail","nativeSrc":"5102:4:8","nodeType":"YulIdentifier","src":"5102:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5144:9:8","nodeType":"YulIdentifier","src":"5144:9:8"},{"arguments":[{"name":"value0","nativeSrc":"5159:6:8","nodeType":"YulIdentifier","src":"5159:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5175:3:8","nodeType":"YulLiteral","src":"5175:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"5180:1:8","nodeType":"YulLiteral","src":"5180:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5171:3:8","nodeType":"YulIdentifier","src":"5171:3:8"},"nativeSrc":"5171:11:8","nodeType":"YulFunctionCall","src":"5171:11:8"},{"kind":"number","nativeSrc":"5184:1:8","nodeType":"YulLiteral","src":"5184:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5167:3:8","nodeType":"YulIdentifier","src":"5167:3:8"},"nativeSrc":"5167:19:8","nodeType":"YulFunctionCall","src":"5167:19:8"}],"functionName":{"name":"and","nativeSrc":"5155:3:8","nodeType":"YulIdentifier","src":"5155:3:8"},"nativeSrc":"5155:32:8","nodeType":"YulFunctionCall","src":"5155:32:8"}],"functionName":{"name":"mstore","nativeSrc":"5137:6:8","nodeType":"YulIdentifier","src":"5137:6:8"},"nativeSrc":"5137:51:8","nodeType":"YulFunctionCall","src":"5137:51:8"},"nativeSrc":"5137:51:8","nodeType":"YulExpressionStatement","src":"5137:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5208:9:8","nodeType":"YulIdentifier","src":"5208:9:8"},{"kind":"number","nativeSrc":"5219:2:8","nodeType":"YulLiteral","src":"5219:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5204:3:8","nodeType":"YulIdentifier","src":"5204:3:8"},"nativeSrc":"5204:18:8","nodeType":"YulFunctionCall","src":"5204:18:8"},{"name":"value1","nativeSrc":"5224:6:8","nodeType":"YulIdentifier","src":"5224:6:8"}],"functionName":{"name":"mstore","nativeSrc":"5197:6:8","nodeType":"YulIdentifier","src":"5197:6:8"},"nativeSrc":"5197:34:8","nodeType":"YulFunctionCall","src":"5197:34:8"},"nativeSrc":"5197:34:8","nodeType":"YulExpressionStatement","src":"5197:34:8"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4963:274:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5053:9:8","nodeType":"YulTypedName","src":"5053:9:8","type":""},{"name":"value1","nativeSrc":"5064:6:8","nodeType":"YulTypedName","src":"5064:6:8","type":""},{"name":"value0","nativeSrc":"5072:6:8","nodeType":"YulTypedName","src":"5072:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5083:4:8","nodeType":"YulTypedName","src":"5083:4:8","type":""}],"src":"4963:274:8"},{"body":{"nativeSrc":"5416:180:8","nodeType":"YulBlock","src":"5416:180:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5433:9:8","nodeType":"YulIdentifier","src":"5433:9:8"},{"kind":"number","nativeSrc":"5444:2:8","nodeType":"YulLiteral","src":"5444:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5426:6:8","nodeType":"YulIdentifier","src":"5426:6:8"},"nativeSrc":"5426:21:8","nodeType":"YulFunctionCall","src":"5426:21:8"},"nativeSrc":"5426:21:8","nodeType":"YulExpressionStatement","src":"5426:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5467:9:8","nodeType":"YulIdentifier","src":"5467:9:8"},{"kind":"number","nativeSrc":"5478:2:8","nodeType":"YulLiteral","src":"5478:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5463:3:8","nodeType":"YulIdentifier","src":"5463:3:8"},"nativeSrc":"5463:18:8","nodeType":"YulFunctionCall","src":"5463:18:8"},{"kind":"number","nativeSrc":"5483:2:8","nodeType":"YulLiteral","src":"5483:2:8","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"5456:6:8","nodeType":"YulIdentifier","src":"5456:6:8"},"nativeSrc":"5456:30:8","nodeType":"YulFunctionCall","src":"5456:30:8"},"nativeSrc":"5456:30:8","nodeType":"YulExpressionStatement","src":"5456:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5506:9:8","nodeType":"YulIdentifier","src":"5506:9:8"},{"kind":"number","nativeSrc":"5517:2:8","nodeType":"YulLiteral","src":"5517:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5502:3:8","nodeType":"YulIdentifier","src":"5502:3:8"},"nativeSrc":"5502:18:8","nodeType":"YulFunctionCall","src":"5502:18:8"},{"hexValue":"436f6c6c61746572616c2076616c75652069732073756666696369656e74","kind":"string","nativeSrc":"5522:32:8","nodeType":"YulLiteral","src":"5522:32:8","type":"","value":"Collateral value is sufficient"}],"functionName":{"name":"mstore","nativeSrc":"5495:6:8","nodeType":"YulIdentifier","src":"5495:6:8"},"nativeSrc":"5495:60:8","nodeType":"YulFunctionCall","src":"5495:60:8"},"nativeSrc":"5495:60:8","nodeType":"YulExpressionStatement","src":"5495:60:8"},{"nativeSrc":"5564:26:8","nodeType":"YulAssignment","src":"5564:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5576:9:8","nodeType":"YulIdentifier","src":"5576:9:8"},{"kind":"number","nativeSrc":"5587:2:8","nodeType":"YulLiteral","src":"5587:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5572:3:8","nodeType":"YulIdentifier","src":"5572:3:8"},"nativeSrc":"5572:18:8","nodeType":"YulFunctionCall","src":"5572:18:8"},"variableNames":[{"name":"tail","nativeSrc":"5564:4:8","nodeType":"YulIdentifier","src":"5564:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_eabe3d27c8c68aa5d541c9b67703a5365349796e19ce4d9d4eefbd36d057c7b1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5242:354:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5393:9:8","nodeType":"YulTypedName","src":"5393:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5407:4:8","nodeType":"YulTypedName","src":"5407:4:8","type":""}],"src":"5242:354:8"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_contract$_RWAOracle_$1152__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Token not supported\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Insufficient collateral\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_295dc4c7cf67879972117851179971bda0626d902ff6fa0440a0b23c4b08050a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Loan is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only borrower can repay\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_eabe3d27c8c68aa5d541c9b67703a5365349796e19ce4d9d4eefbd36d057c7b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Collateral value is sufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ab7b1c891161005b578063ab7b1c89146100de578063ccdd9f5d146100f1578063e1ec3c6814610104578063f851a4401461018657600080fd5b806334d9289e14610082578063488dd3e61461009e5780637dc0d1d0146100b3575b600080fd5b61008b60035481565b6040519081526020015b60405180910390f35b6100b16100ac3660046107e9565b610199565b005b6001546100c6906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6100b16100ec36600461082a565b61048b565b6100b16100ff36600461082a565b61067b565b61015161011236600461082a565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039283169490921692909160ff1685565b604080516001600160a01b0396871681529590941660208601529284019190915260608301521515608082015260a001610095565b6000546100c6906001600160a01b031681565b6001546040516341976e0960e01b81526001600160a01b03858116600483015260009216906341976e0990602401602060405180830381865afa1580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102089190610843565b116102505760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064015b60405180910390fd5b6001546040516341976e0960e01b81526001600160a01b03858116600483015260009216906341976e0990602401602060405180830381865afa15801561029b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bf9190610843565b6102c99083610872565b90508281101561031b5760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606401610247565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061088f565b506040805160a081018252338082526001600160a01b03878116602080850191825284860189815260608087018a81526001608089018181526003805460009081526002808952908d90209b518c546001600160a01b0319908116918c16919091178d559851938c018054909916939099169290921790965592519588019590955593518682015591516004909501805460ff19169515159590951790945554845192835292820187905292810185905290917f3373919ad665425d2cddb4072830e5935b6ee308440fa99b23383648da473bc0910160405180910390a260038054906000610480836108b8565b919050555050505050565b6000818152600260205260409020600481015460ff166104e25760405162461bcd60e51b81526020600482015260126024820152714c6f616e206973206e6f742061637469766560701b6044820152606401610247565b80546001600160a01b0316331461053b5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920626f72726f7765722063616e2072657061790000000000000000006044820152606401610247565b600181015460028201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be919061088f565b5060018101548154600383015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af115801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f919061088f565b5060048101805460ff1916905560405182907f9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc4718690600090a25050565b6000818152600260205260409020600481015460ff166106d25760405162461bcd60e51b81526020600482015260126024820152714c6f616e206973206e6f742061637469766560701b6044820152606401610247565b60018054908201546040516341976e0960e01b81526001600160a01b03918216600482015260009291909116906341976e0990602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190610843565b82600301546107589190610872565b9050816002015481106107ad5760405162461bcd60e51b815260206004820152601e60248201527f436f6c6c61746572616c2076616c75652069732073756666696369656e7400006044820152606401610247565b60048201805460ff1916905560405183907faf91ffe368225045d42f7c2b4b90feb438133ac1e375e73bc9066652b70a1d7790600090a2505050565b6000806000606084860312156107fe57600080fd5b83356001600160a01b038116811461081557600080fd5b95602085013595506040909401359392505050565b60006020828403121561083c57600080fd5b5035919050565b60006020828403121561085557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108895761088961085c565b92915050565b6000602082840312156108a157600080fd5b815180151581146108b157600080fd5b9392505050565b6000600182016108ca576108ca61085c565b506001019056fea2646970667358221220e1f8272057b401d9c1dd1d81aae62641fdb929bf4f4b43a7e884b913747aa19764736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB7B1C89 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xCCDD9F5D EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34D9289E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x488DD3E6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0xB1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0xB1 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x151 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST GT PUSH2 0x250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2C9 SWAP1 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP5 DUP7 ADD DUP10 DUP2 MSTORE PUSH1 0x60 DUP1 DUP8 ADD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP10 MSTORE SWAP1 DUP14 SWAP1 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP13 AND SWAP2 SWAP1 SWAP2 OR DUP14 SSTORE SWAP9 MLOAD SWAP4 DUP13 ADD DUP1 SLOAD SWAP1 SWAP10 AND SWAP4 SWAP1 SWAP10 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP7 SSTORE SWAP3 MLOAD SWAP6 DUP9 ADD SWAP6 SWAP1 SWAP6 SSTORE SWAP4 MLOAD DUP7 DUP3 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SLOAD DUP5 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 PUSH32 0x3373919AD665425D2CDDB4072830E5935B6EE308440FA99B23383648DA473BC0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x480 DUP4 PUSH2 0x8B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4C6F616E206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626F72726F7765722063616E207265706179000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x9A7851747CD7FFB3FE0A32CAF3DA48B31F27CEBE131267051640F8B72FC47186 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4C6F616E206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 LT PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C61746572616C2076616C75652069732073756666696369656E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x247 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0xAF91FFE368225045D42F7C2B4B90FEB438133AC1E375E73BC9066652B70A1D77 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x889 JUMPI PUSH2 0x889 PUSH2 0x85C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x85C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xF8 0x27 KECCAK256 JUMPI 0xB4 ADD 0xD9 0xC1 0xDD SAR DUP2 0xAA 0xE6 0x26 COINBASE REVERT 0xB9 0x29 0xBF 0x4F 0x4B NUMBER 0xA7 0xE8 DUP5 0xB9 SGT PUSH21 0x7AA19764736F6C634300081A003300000000000000 ","sourceMap":"146:2347:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;432:26;;;;;;;;;160:25:8;;;148:2;133:18;432:26:5;;;;;;;;781:760;;;;;;:::i;:::-;;:::i;:::-;;358:23;;;;;-1:-1:-1;;;;;358:23:5;;;;;;-1:-1:-1;;;;;909:32:8;;;891:51;;879:2;864:18;358:23:5;727:221:8;1549:539:5;;;;;;:::i;:::-;;:::i;2096:394::-;;;;;;:::i;:::-;;:::i;388:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;388:37:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1455:32:8;;;1437:51;;1524:32;;;;1519:2;1504:18;;1497:60;1573:18;;;1566:34;;;;1631:2;1616:18;;1609:34;1687:14;1680:22;1674:3;1659:19;;1652:51;1424:3;1409:19;388:37:5;1184:525:8;331:20:5;;;;;-1:-1:-1;;;;;331:20:5;;;781:760;880:6;;:22;;-1:-1:-1;;;880:22:5;;-1:-1:-1;;;;;909:32:8;;;880:22:5;;;891:51:8;905:1:5;;880:6;;:15;;864:18:8;;880:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;872:58;;;;-1:-1:-1;;;872:58:5;;2313:2:8;872:58:5;;;2295:21:8;2352:2;2332:18;;;2325:30;-1:-1:-1;;;2371:18:8;;;2364:49;2430:18;;872:58:5;;;;;;;;;982:6;;:22;;-1:-1:-1;;;982:22:5;;-1:-1:-1;;;;;909:32:8;;;982:22:5;;;891:51:8;943:23:5;;982:6;;:15;;864:18:8;;982:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;969:35;;:10;:35;:::i;:::-;943:61;;1042:6;1023:15;:25;;1015:61;;;;-1:-1:-1;;;1015:61:5;;2966:2:8;1015:61:5;;;2948:21:8;3005:2;2985:18;;;2978:30;3044:25;3024:18;;;3017:53;3087:18;;1015:61:5;2764:347:8;1015:61:5;1135:64;;-1:-1:-1;;;1135:64:5;;1161:10;1135:64;;;3318:51:8;1181:4:5;3385:18:8;;;3378:60;3454:18;;;3447:34;;;-1:-1:-1;;;;;1135:25:5;;;;;3291:18:8;;1135:64:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1261:174:5;;;;;;;;1291:10;1261:174;;;-1:-1:-1;;;;;1261:174:5;;;;;;;;;;;;;;;;;;;;;;;1419:4;1261:174;;;;;;1246:11;;;-1:-1:-1;1240:18:5;;;:5;:18;;;;;;;:195;;;;-1:-1:-1;;;;;;1240:195:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1240:195:5;;;;;;;;;;;1465:11;1453:56;;3976:51:8;;;4043:18;;;4036:34;;;4086:18;;;4079:34;;;1465:11:5;;1453:56;;3949:18:8;1453:56:5;;;;;;;1520:11;:13;;;:11;:13;;;:::i;:::-;;;;;;861:680;781:760;;;:::o;1549:539::-;1604:17;1624:13;;;:5;:13;;;;;1656;;;;;;1648:44;;;;-1:-1:-1;;;1648:44:5;;4466:2:8;1648:44:5;;;4448:21:8;4505:2;4485:18;;;4478:30;-1:-1:-1;;;4524:18:8;;;4517:48;4582:18;;1648:44:5;4264:342:8;1648:44:5;1725:13;;-1:-1:-1;;;;;1725:13:5;1711:10;:27;1703:63;;;;-1:-1:-1;;;1703:63:5;;4813:2:8;1703:63:5;;;4795:21:8;4852:2;4832:18;;;4825:30;4891:25;4871:18;;;4864:53;4934:18;;1703:63:5;4611:347:8;1703:63:5;1835:10;;;;1887:11;;;;1829:70;;-1:-1:-1;;;1829:70:5;;1860:10;1829:70;;;3318:51:8;1880:4:5;3385:18:8;;;3378:60;3454:18;;;3447:34;;;;-1:-1:-1;;;;;1835:10:5;;;;1829:30;;3291:18:8;;1829:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1960:10:5;;;;1981:13;;1996:15;;;;1954:58;;-1:-1:-1;;;1954:58:5;;-1:-1:-1;;;;;1981:13:5;;;1954:58;;;5137:51:8;5204:18;;;5197:34;;;;1960:10:5;;;1954:26;;5110:18:8;;1954:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2025:13:5;;;:21;;-1:-1:-1;;2025:21:5;;;2062:18;;2073:6;;2062:18;;2041:5;;2062:18;1593:495;1549:539;:::o;2096:394::-;2155:17;2175:13;;;:5;:13;;;;;2207;;;;;;2199:44;;;;-1:-1:-1;;;2199:44:5;;4466:2:8;2199:44:5;;;4448:21:8;4505:2;4485:18;;;4478:30;-1:-1:-1;;;4524:18:8;;;4517:48;4582:18;;2199:44:5;4264:342:8;2199:44:5;2300:6;;;2316:10;;;;2300:27;;-1:-1:-1;;;2300:27:5;;-1:-1:-1;;;;;2316:10:5;;;2300:27;;;891:51:8;2256:23:5;;2300:6;;;;;:15;;864:18:8;;2300:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2282:4;:15;;;:45;;;;:::i;:::-;2256:71;;2364:4;:11;;;2346:15;:29;2338:72;;;;-1:-1:-1;;;2338:72:5;;5444:2:8;2338:72:5;;;5426:21:8;5483:2;5463:18;;;5456:30;5522:32;5502:18;;;5495:60;5572:18;;2338:72:5;5242:354:8;2338:72:5;2423:13;;;:21;;-1:-1:-1;;2423:21:5;;;2460:22;;2475:6;;2460:22;;2439:5;;2460:22;2144:346;;2096:394;:::o;196:526:8:-;273:6;281;289;342:2;330:9;321:7;317:23;313:32;310:52;;;358:1;355;348:12;310:52;384:23;;-1:-1:-1;;;;;436:31:8;;426:42;;416:70;;482:1;479;472:12;416:70;505:5;583:2;568:18;;555:32;;-1:-1:-1;686:2:8;671:18;;;658:32;;196:526;-1:-1:-1;;;196:526:8:o;953:226::-;1012:6;1065:2;1053:9;1044:7;1040:23;1036:32;1033:52;;;1081:1;1078;1071:12;1033:52;-1:-1:-1;1126:23:8;;953:226;-1:-1:-1;953:226:8:o;1922:184::-;1992:6;2045:2;2033:9;2024:7;2020:23;2016:32;2013:52;;;2061:1;2058;2051:12;2013:52;-1:-1:-1;2084:16:8;;1922:184;-1:-1:-1;1922:184:8:o;2459:127::-;2520:10;2515:3;2511:20;2508:1;2501:31;2551:4;2548:1;2541:15;2575:4;2572:1;2565:15;2591:168;2664:9;;;2695;;2712:15;;;2706:22;;2692:37;2682:71;;2733:18;;:::i;:::-;2591:168;;;;:::o;3492:277::-;3559:6;3612:2;3600:9;3591:7;3587:23;3583:32;3580:52;;;3628:1;3625;3618:12;3580:52;3660:9;3654:16;3713:5;3706:13;3699:21;3692:5;3689:32;3679:60;;3735:1;3732;3725:12;3679:60;3758:5;3492:277;-1:-1:-1;;;3492:277:8:o;4124:135::-;4163:3;4184:17;;;4181:43;;4204:18;;:::i;:::-;-1:-1:-1;4251:1:8;4240:13;;4124:135::o"},"gasEstimates":{"creation":{"codeDepositCost":"462200","executionCost":"infinite","totalCost":"infinite"},"external":{"admin()":"2403","createLoan(address,uint256,uint256)":"infinite","liquidateLoan(uint256)":"infinite","loanCounter()":"2285","loans(uint256)":"11095","oracle()":"2382","repayLoan(uint256)":"infinite"}},"methodIdentifiers":{"admin()":"f851a440","createLoan(address,uint256,uint256)":"488dd3e6","liquidateLoan(uint256)":"ccdd9f5d","loanCounter()":"34d9289e","loans(uint256)":"e1ec3c68","oracle()":"7dc0d1d0","repayLoan(uint256)":"ab7b1c89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"LoanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"createLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loanCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract RWAOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LendingPool.sol\":\"LendingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/LendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"./RWAOracle.sol\\\";\\r\\n\\r\\ncontract LendingPool {\\r\\n    struct Loan {\\r\\n        address borrower;\\r\\n        address token;\\r\\n        uint256 amount;\\r\\n        uint256 collateral;\\r\\n        bool isActive;\\r\\n    }\\r\\n\\r\\n    address public admin;\\r\\n    RWAOracle public oracle;\\r\\n    mapping(uint256 => Loan) public loans;\\r\\n    uint256 public loanCounter;\\r\\n\\r\\n    event LoanCreated(uint256 indexed loanId, address borrower, uint256 amount, uint256 collateral);\\r\\n    event LoanRepaid(uint256 indexed loanId);\\r\\n    event LoanLiquidated(uint256 indexed loanId);\\r\\n\\r\\n    constructor(address _oracle) {\\r\\n        admin = msg.sender;\\r\\n        oracle = RWAOracle(_oracle);\\r\\n    }\\r\\n\\r\\n    function createLoan(address token, uint256 amount, uint256 collateral) external {\\r\\n        require(oracle.getPrice(token) > 0, \\\"Token not supported\\\");\\r\\n\\r\\n        uint256 collateralValue = collateral * oracle.getPrice(token);\\r\\n        require(collateralValue >= amount, \\\"Insufficient collateral\\\");\\r\\n\\r\\n        // Transfer collateral from borrower\\r\\n        ERC20(token).transferFrom(msg.sender, address(this), collateral);\\r\\n\\r\\n        // Record the loan\\r\\n        loans[loanCounter] = Loan({\\r\\n            borrower: msg.sender,\\r\\n            token: token,\\r\\n            amount: amount,\\r\\n            collateral: collateral,\\r\\n            isActive: true\\r\\n        });\\r\\n\\r\\n        emit LoanCreated(loanCounter, msg.sender, amount, collateral);\\r\\n        loanCounter++;\\r\\n    }\\r\\n\\r\\n    function repayLoan(uint256 loanId) external {\\r\\n        Loan storage loan = loans[loanId];\\r\\n        require(loan.isActive, \\\"Loan is not active\\\");\\r\\n        require(msg.sender == loan.borrower, \\\"Only borrower can repay\\\");\\r\\n\\r\\n        // Transfer repayment amount to contract\\r\\n        ERC20(loan.token).transferFrom(msg.sender, address(this), loan.amount);\\r\\n\\r\\n        // Return collateral to borrower\\r\\n        ERC20(loan.token).transfer(loan.borrower, loan.collateral);\\r\\n\\r\\n        loan.isActive = false;\\r\\n        emit LoanRepaid(loanId);\\r\\n    }\\r\\n\\r\\n    function liquidateLoan(uint256 loanId) external {\\r\\n        Loan storage loan = loans[loanId];\\r\\n        require(loan.isActive, \\\"Loan is not active\\\");\\r\\n\\r\\n        uint256 collateralValue = loan.collateral * oracle.getPrice(loan.token);\\r\\n        require(collateralValue < loan.amount, \\\"Collateral value is sufficient\\\");\\r\\n\\r\\n        loan.isActive = false;\\r\\n        emit LoanLiquidated(loanId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x832a5e577e2315d0709cfe6aab1068d30a98d64ed6fb7c9b5174e74273a075f4\",\"license\":\"MIT\"},\"contracts/RWAOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\n\\r\\n// RWAOracle Contract\\r\\ncontract RWAOracle {\\r\\n    address public admin;\\r\\n    mapping(address => uint256) public prices;\\r\\n\\r\\n    event PriceUpdated(address indexed token, uint256 price);\\r\\n\\r\\n    constructor() {\\r\\n        admin = msg.sender;\\r\\n    }\\r\\n\\r\\n    function setPrice(address token, uint256 price) external {\\r\\n        require(msg.sender == admin, \\\"Only admin can update prices\\\");\\r\\n        prices[token] = price;\\r\\n        emit PriceUpdated(token, price);\\r\\n    }\\r\\n\\r\\n    function getPrice(address token) external view returns (uint256) {\\r\\n        return prices[token];\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2af1255d74b03967f75770bd084a07fa9c8576c4213c4c95e434dce9ec2dc516\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":802,"contract":"contracts/LendingPool.sol:LendingPool","label":"admin","offset":0,"slot":"0","type":"t_address"},{"astId":805,"contract":"contracts/LendingPool.sol:LendingPool","label":"oracle","offset":0,"slot":"1","type":"t_contract(RWAOracle)1152"},{"astId":810,"contract":"contracts/LendingPool.sol:LendingPool","label":"loans","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_struct(Loan)800_storage)"},{"astId":812,"contract":"contracts/LendingPool.sol:LendingPool","label":"loanCounter","offset":0,"slot":"3","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(RWAOracle)1152":{"encoding":"inplace","label":"contract RWAOracle","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(Loan)800_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct LendingPool.Loan)","numberOfBytes":"32","value":"t_struct(Loan)800_storage"},"t_struct(Loan)800_storage":{"encoding":"inplace","label":"struct LendingPool.Loan","members":[{"astId":791,"contract":"contracts/LendingPool.sol:LendingPool","label":"borrower","offset":0,"slot":"0","type":"t_address"},{"astId":793,"contract":"contracts/LendingPool.sol:LendingPool","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":795,"contract":"contracts/LendingPool.sol:LendingPool","label":"amount","offset":0,"slot":"2","type":"t_uint256"},{"astId":797,"contract":"contracts/LendingPool.sol:LendingPool","label":"collateral","offset":0,"slot":"3","type":"t_uint256"},{"astId":799,"contract":"contracts/LendingPool.sol:LendingPool","label":"isActive","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MockRWAToken.sol":{"MockRWAToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1066":{"entryPoint":null,"id":1066,"parameterSlots":2,"returnSlots":0},"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_mint_491":{"entryPoint":144,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":207,"id":458,"parameterSlots":3,"returnSlots":0},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":690,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1422,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1144,"id":null,"parameterSlots":3,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1377,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1399,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":853,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":932,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":795,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1122,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":505,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6660:8","nodeType":"YulBlock","src":"0:6660:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"46:95:8","nodeType":"YulBlock","src":"46:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:8","nodeType":"YulLiteral","src":"63:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:8","nodeType":"YulLiteral","src":"70:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:8","nodeType":"YulLiteral","src":"75:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:8","nodeType":"YulIdentifier","src":"66:3:8"},"nativeSrc":"66:20:8","nodeType":"YulFunctionCall","src":"66:20:8"}],"functionName":{"name":"mstore","nativeSrc":"56:6:8","nodeType":"YulIdentifier","src":"56:6:8"},"nativeSrc":"56:31:8","nodeType":"YulFunctionCall","src":"56:31:8"},"nativeSrc":"56:31:8","nodeType":"YulExpressionStatement","src":"56:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:8","nodeType":"YulLiteral","src":"103:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:8","nodeType":"YulLiteral","src":"106:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:8","nodeType":"YulIdentifier","src":"96:6:8"},"nativeSrc":"96:15:8","nodeType":"YulFunctionCall","src":"96:15:8"},"nativeSrc":"96:15:8","nodeType":"YulExpressionStatement","src":"96:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:8","nodeType":"YulLiteral","src":"127:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:8","nodeType":"YulLiteral","src":"130:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:8","nodeType":"YulIdentifier","src":"120:6:8"},"nativeSrc":"120:15:8","nodeType":"YulFunctionCall","src":"120:15:8"},"nativeSrc":"120:15:8","nodeType":"YulExpressionStatement","src":"120:15:8"}]},"name":"panic_error_0x41","nativeSrc":"14:127:8","nodeType":"YulFunctionDefinition","src":"14:127:8"},{"body":{"nativeSrc":"210:770:8","nodeType":"YulBlock","src":"210:770:8","statements":[{"body":{"nativeSrc":"259:16:8","nodeType":"YulBlock","src":"259:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"268:1:8","nodeType":"YulLiteral","src":"268:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"271:1:8","nodeType":"YulLiteral","src":"271:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"261:6:8","nodeType":"YulIdentifier","src":"261:6:8"},"nativeSrc":"261:12:8","nodeType":"YulFunctionCall","src":"261:12:8"},"nativeSrc":"261:12:8","nodeType":"YulExpressionStatement","src":"261:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"238:6:8","nodeType":"YulIdentifier","src":"238:6:8"},{"kind":"number","nativeSrc":"246:4:8","nodeType":"YulLiteral","src":"246:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"234:3:8","nodeType":"YulIdentifier","src":"234:3:8"},"nativeSrc":"234:17:8","nodeType":"YulFunctionCall","src":"234:17:8"},{"name":"end","nativeSrc":"253:3:8","nodeType":"YulIdentifier","src":"253:3:8"}],"functionName":{"name":"slt","nativeSrc":"230:3:8","nodeType":"YulIdentifier","src":"230:3:8"},"nativeSrc":"230:27:8","nodeType":"YulFunctionCall","src":"230:27:8"}],"functionName":{"name":"iszero","nativeSrc":"223:6:8","nodeType":"YulIdentifier","src":"223:6:8"},"nativeSrc":"223:35:8","nodeType":"YulFunctionCall","src":"223:35:8"},"nativeSrc":"220:55:8","nodeType":"YulIf","src":"220:55:8"},{"nativeSrc":"284:27:8","nodeType":"YulVariableDeclaration","src":"284:27:8","value":{"arguments":[{"name":"offset","nativeSrc":"304:6:8","nodeType":"YulIdentifier","src":"304:6:8"}],"functionName":{"name":"mload","nativeSrc":"298:5:8","nodeType":"YulIdentifier","src":"298:5:8"},"nativeSrc":"298:13:8","nodeType":"YulFunctionCall","src":"298:13:8"},"variables":[{"name":"length","nativeSrc":"288:6:8","nodeType":"YulTypedName","src":"288:6:8","type":""}]},{"body":{"nativeSrc":"354:22:8","nodeType":"YulBlock","src":"354:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"356:16:8","nodeType":"YulIdentifier","src":"356:16:8"},"nativeSrc":"356:18:8","nodeType":"YulFunctionCall","src":"356:18:8"},"nativeSrc":"356:18:8","nodeType":"YulExpressionStatement","src":"356:18:8"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"326:6:8","nodeType":"YulIdentifier","src":"326:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"342:2:8","nodeType":"YulLiteral","src":"342:2:8","type":"","value":"64"},{"kind":"number","nativeSrc":"346:1:8","nodeType":"YulLiteral","src":"346:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"338:3:8","nodeType":"YulIdentifier","src":"338:3:8"},"nativeSrc":"338:10:8","nodeType":"YulFunctionCall","src":"338:10:8"},{"kind":"number","nativeSrc":"350:1:8","nodeType":"YulLiteral","src":"350:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"334:3:8","nodeType":"YulIdentifier","src":"334:3:8"},"nativeSrc":"334:18:8","nodeType":"YulFunctionCall","src":"334:18:8"}],"functionName":{"name":"gt","nativeSrc":"323:2:8","nodeType":"YulIdentifier","src":"323:2:8"},"nativeSrc":"323:30:8","nodeType":"YulFunctionCall","src":"323:30:8"},"nativeSrc":"320:56:8","nodeType":"YulIf","src":"320:56:8"},{"nativeSrc":"385:23:8","nodeType":"YulVariableDeclaration","src":"385:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"405:2:8","nodeType":"YulLiteral","src":"405:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"399:5:8","nodeType":"YulIdentifier","src":"399:5:8"},"nativeSrc":"399:9:8","nodeType":"YulFunctionCall","src":"399:9:8"},"variables":[{"name":"memPtr","nativeSrc":"389:6:8","nodeType":"YulTypedName","src":"389:6:8","type":""}]},{"nativeSrc":"417:85:8","nodeType":"YulVariableDeclaration","src":"417:85:8","value":{"arguments":[{"name":"memPtr","nativeSrc":"439:6:8","nodeType":"YulIdentifier","src":"439:6:8"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"463:6:8","nodeType":"YulIdentifier","src":"463:6:8"},{"kind":"number","nativeSrc":"471:4:8","nodeType":"YulLiteral","src":"471:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"459:3:8","nodeType":"YulIdentifier","src":"459:3:8"},"nativeSrc":"459:17:8","nodeType":"YulFunctionCall","src":"459:17:8"},{"arguments":[{"kind":"number","nativeSrc":"482:2:8","nodeType":"YulLiteral","src":"482:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"478:3:8","nodeType":"YulIdentifier","src":"478:3:8"},"nativeSrc":"478:7:8","nodeType":"YulFunctionCall","src":"478:7:8"}],"functionName":{"name":"and","nativeSrc":"455:3:8","nodeType":"YulIdentifier","src":"455:3:8"},"nativeSrc":"455:31:8","nodeType":"YulFunctionCall","src":"455:31:8"},{"kind":"number","nativeSrc":"488:2:8","nodeType":"YulLiteral","src":"488:2:8","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"451:3:8","nodeType":"YulIdentifier","src":"451:3:8"},"nativeSrc":"451:40:8","nodeType":"YulFunctionCall","src":"451:40:8"},{"arguments":[{"kind":"number","nativeSrc":"497:2:8","nodeType":"YulLiteral","src":"497:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"493:3:8","nodeType":"YulIdentifier","src":"493:3:8"},"nativeSrc":"493:7:8","nodeType":"YulFunctionCall","src":"493:7:8"}],"functionName":{"name":"and","nativeSrc":"447:3:8","nodeType":"YulIdentifier","src":"447:3:8"},"nativeSrc":"447:54:8","nodeType":"YulFunctionCall","src":"447:54:8"}],"functionName":{"name":"add","nativeSrc":"435:3:8","nodeType":"YulIdentifier","src":"435:3:8"},"nativeSrc":"435:67:8","nodeType":"YulFunctionCall","src":"435:67:8"},"variables":[{"name":"newFreePtr","nativeSrc":"421:10:8","nodeType":"YulTypedName","src":"421:10:8","type":""}]},{"body":{"nativeSrc":"577:22:8","nodeType":"YulBlock","src":"577:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"579:16:8","nodeType":"YulIdentifier","src":"579:16:8"},"nativeSrc":"579:18:8","nodeType":"YulFunctionCall","src":"579:18:8"},"nativeSrc":"579:18:8","nodeType":"YulExpressionStatement","src":"579:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"520:10:8","nodeType":"YulIdentifier","src":"520:10:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"540:2:8","nodeType":"YulLiteral","src":"540:2:8","type":"","value":"64"},{"kind":"number","nativeSrc":"544:1:8","nodeType":"YulLiteral","src":"544:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"536:3:8","nodeType":"YulIdentifier","src":"536:3:8"},"nativeSrc":"536:10:8","nodeType":"YulFunctionCall","src":"536:10:8"},{"kind":"number","nativeSrc":"548:1:8","nodeType":"YulLiteral","src":"548:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"532:3:8","nodeType":"YulIdentifier","src":"532:3:8"},"nativeSrc":"532:18:8","nodeType":"YulFunctionCall","src":"532:18:8"}],"functionName":{"name":"gt","nativeSrc":"517:2:8","nodeType":"YulIdentifier","src":"517:2:8"},"nativeSrc":"517:34:8","nodeType":"YulFunctionCall","src":"517:34:8"},{"arguments":[{"name":"newFreePtr","nativeSrc":"556:10:8","nodeType":"YulIdentifier","src":"556:10:8"},{"name":"memPtr","nativeSrc":"568:6:8","nodeType":"YulIdentifier","src":"568:6:8"}],"functionName":{"name":"lt","nativeSrc":"553:2:8","nodeType":"YulIdentifier","src":"553:2:8"},"nativeSrc":"553:22:8","nodeType":"YulFunctionCall","src":"553:22:8"}],"functionName":{"name":"or","nativeSrc":"514:2:8","nodeType":"YulIdentifier","src":"514:2:8"},"nativeSrc":"514:62:8","nodeType":"YulFunctionCall","src":"514:62:8"},"nativeSrc":"511:88:8","nodeType":"YulIf","src":"511:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"615:2:8","nodeType":"YulLiteral","src":"615:2:8","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"619:10:8","nodeType":"YulIdentifier","src":"619:10:8"}],"functionName":{"name":"mstore","nativeSrc":"608:6:8","nodeType":"YulIdentifier","src":"608:6:8"},"nativeSrc":"608:22:8","nodeType":"YulFunctionCall","src":"608:22:8"},"nativeSrc":"608:22:8","nodeType":"YulExpressionStatement","src":"608:22:8"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"646:6:8","nodeType":"YulIdentifier","src":"646:6:8"},{"name":"length","nativeSrc":"654:6:8","nodeType":"YulIdentifier","src":"654:6:8"}],"functionName":{"name":"mstore","nativeSrc":"639:6:8","nodeType":"YulIdentifier","src":"639:6:8"},"nativeSrc":"639:22:8","nodeType":"YulFunctionCall","src":"639:22:8"},"nativeSrc":"639:22:8","nodeType":"YulExpressionStatement","src":"639:22:8"},{"body":{"nativeSrc":"713:16:8","nodeType":"YulBlock","src":"713:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"722:1:8","nodeType":"YulLiteral","src":"722:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"725:1:8","nodeType":"YulLiteral","src":"725:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"715:6:8","nodeType":"YulIdentifier","src":"715:6:8"},"nativeSrc":"715:12:8","nodeType":"YulFunctionCall","src":"715:12:8"},"nativeSrc":"715:12:8","nodeType":"YulExpressionStatement","src":"715:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"684:6:8","nodeType":"YulIdentifier","src":"684:6:8"},{"name":"length","nativeSrc":"692:6:8","nodeType":"YulIdentifier","src":"692:6:8"}],"functionName":{"name":"add","nativeSrc":"680:3:8","nodeType":"YulIdentifier","src":"680:3:8"},"nativeSrc":"680:19:8","nodeType":"YulFunctionCall","src":"680:19:8"},{"kind":"number","nativeSrc":"701:4:8","nodeType":"YulLiteral","src":"701:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"676:3:8","nodeType":"YulIdentifier","src":"676:3:8"},"nativeSrc":"676:30:8","nodeType":"YulFunctionCall","src":"676:30:8"},{"name":"end","nativeSrc":"708:3:8","nodeType":"YulIdentifier","src":"708:3:8"}],"functionName":{"name":"gt","nativeSrc":"673:2:8","nodeType":"YulIdentifier","src":"673:2:8"},"nativeSrc":"673:39:8","nodeType":"YulFunctionCall","src":"673:39:8"},"nativeSrc":"670:59:8","nodeType":"YulIf","src":"670:59:8"},{"nativeSrc":"738:10:8","nodeType":"YulVariableDeclaration","src":"738:10:8","value":{"kind":"number","nativeSrc":"747:1:8","nodeType":"YulLiteral","src":"747:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"742:1:8","nodeType":"YulTypedName","src":"742:1:8","type":""}]},{"body":{"nativeSrc":"809:91:8","nodeType":"YulBlock","src":"809:91:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"838:6:8","nodeType":"YulIdentifier","src":"838:6:8"},{"name":"i","nativeSrc":"846:1:8","nodeType":"YulIdentifier","src":"846:1:8"}],"functionName":{"name":"add","nativeSrc":"834:3:8","nodeType":"YulIdentifier","src":"834:3:8"},"nativeSrc":"834:14:8","nodeType":"YulFunctionCall","src":"834:14:8"},{"kind":"number","nativeSrc":"850:4:8","nodeType":"YulLiteral","src":"850:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"830:3:8","nodeType":"YulIdentifier","src":"830:3:8"},"nativeSrc":"830:25:8","nodeType":"YulFunctionCall","src":"830:25:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"871:6:8","nodeType":"YulIdentifier","src":"871:6:8"},{"name":"i","nativeSrc":"879:1:8","nodeType":"YulIdentifier","src":"879:1:8"}],"functionName":{"name":"add","nativeSrc":"867:3:8","nodeType":"YulIdentifier","src":"867:3:8"},"nativeSrc":"867:14:8","nodeType":"YulFunctionCall","src":"867:14:8"},{"kind":"number","nativeSrc":"883:4:8","nodeType":"YulLiteral","src":"883:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"863:3:8","nodeType":"YulIdentifier","src":"863:3:8"},"nativeSrc":"863:25:8","nodeType":"YulFunctionCall","src":"863:25:8"}],"functionName":{"name":"mload","nativeSrc":"857:5:8","nodeType":"YulIdentifier","src":"857:5:8"},"nativeSrc":"857:32:8","nodeType":"YulFunctionCall","src":"857:32:8"}],"functionName":{"name":"mstore","nativeSrc":"823:6:8","nodeType":"YulIdentifier","src":"823:6:8"},"nativeSrc":"823:67:8","nodeType":"YulFunctionCall","src":"823:67:8"},"nativeSrc":"823:67:8","nodeType":"YulExpressionStatement","src":"823:67:8"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"768:1:8","nodeType":"YulIdentifier","src":"768:1:8"},{"name":"length","nativeSrc":"771:6:8","nodeType":"YulIdentifier","src":"771:6:8"}],"functionName":{"name":"lt","nativeSrc":"765:2:8","nodeType":"YulIdentifier","src":"765:2:8"},"nativeSrc":"765:13:8","nodeType":"YulFunctionCall","src":"765:13:8"},"nativeSrc":"757:143:8","nodeType":"YulForLoop","post":{"nativeSrc":"779:21:8","nodeType":"YulBlock","src":"779:21:8","statements":[{"nativeSrc":"781:17:8","nodeType":"YulAssignment","src":"781:17:8","value":{"arguments":[{"name":"i","nativeSrc":"790:1:8","nodeType":"YulIdentifier","src":"790:1:8"},{"kind":"number","nativeSrc":"793:4:8","nodeType":"YulLiteral","src":"793:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"786:3:8","nodeType":"YulIdentifier","src":"786:3:8"},"nativeSrc":"786:12:8","nodeType":"YulFunctionCall","src":"786:12:8"},"variableNames":[{"name":"i","nativeSrc":"781:1:8","nodeType":"YulIdentifier","src":"781:1:8"}]}]},"pre":{"nativeSrc":"761:3:8","nodeType":"YulBlock","src":"761:3:8","statements":[]},"src":"757:143:8"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"924:6:8","nodeType":"YulIdentifier","src":"924:6:8"},{"name":"length","nativeSrc":"932:6:8","nodeType":"YulIdentifier","src":"932:6:8"}],"functionName":{"name":"add","nativeSrc":"920:3:8","nodeType":"YulIdentifier","src":"920:3:8"},"nativeSrc":"920:19:8","nodeType":"YulFunctionCall","src":"920:19:8"},{"kind":"number","nativeSrc":"941:4:8","nodeType":"YulLiteral","src":"941:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"916:3:8","nodeType":"YulIdentifier","src":"916:3:8"},"nativeSrc":"916:30:8","nodeType":"YulFunctionCall","src":"916:30:8"},{"kind":"number","nativeSrc":"948:1:8","nodeType":"YulLiteral","src":"948:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"909:6:8","nodeType":"YulIdentifier","src":"909:6:8"},"nativeSrc":"909:41:8","nodeType":"YulFunctionCall","src":"909:41:8"},"nativeSrc":"909:41:8","nodeType":"YulExpressionStatement","src":"909:41:8"},{"nativeSrc":"959:15:8","nodeType":"YulAssignment","src":"959:15:8","value":{"name":"memPtr","nativeSrc":"968:6:8","nodeType":"YulIdentifier","src":"968:6:8"},"variableNames":[{"name":"array","nativeSrc":"959:5:8","nodeType":"YulIdentifier","src":"959:5:8"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"146:834:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"184:6:8","nodeType":"YulTypedName","src":"184:6:8","type":""},{"name":"end","nativeSrc":"192:3:8","nodeType":"YulTypedName","src":"192:3:8","type":""}],"returnVariables":[{"name":"array","nativeSrc":"200:5:8","nodeType":"YulTypedName","src":"200:5:8","type":""}],"src":"146:834:8"},{"body":{"nativeSrc":"1103:439:8","nodeType":"YulBlock","src":"1103:439:8","statements":[{"body":{"nativeSrc":"1149:16:8","nodeType":"YulBlock","src":"1149:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1158:1:8","nodeType":"YulLiteral","src":"1158:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1161:1:8","nodeType":"YulLiteral","src":"1161:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1151:6:8","nodeType":"YulIdentifier","src":"1151:6:8"},"nativeSrc":"1151:12:8","nodeType":"YulFunctionCall","src":"1151:12:8"},"nativeSrc":"1151:12:8","nodeType":"YulExpressionStatement","src":"1151:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1124:7:8","nodeType":"YulIdentifier","src":"1124:7:8"},{"name":"headStart","nativeSrc":"1133:9:8","nodeType":"YulIdentifier","src":"1133:9:8"}],"functionName":{"name":"sub","nativeSrc":"1120:3:8","nodeType":"YulIdentifier","src":"1120:3:8"},"nativeSrc":"1120:23:8","nodeType":"YulFunctionCall","src":"1120:23:8"},{"kind":"number","nativeSrc":"1145:2:8","nodeType":"YulLiteral","src":"1145:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1116:3:8","nodeType":"YulIdentifier","src":"1116:3:8"},"nativeSrc":"1116:32:8","nodeType":"YulFunctionCall","src":"1116:32:8"},"nativeSrc":"1113:52:8","nodeType":"YulIf","src":"1113:52:8"},{"nativeSrc":"1174:30:8","nodeType":"YulVariableDeclaration","src":"1174:30:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1194:9:8","nodeType":"YulIdentifier","src":"1194:9:8"}],"functionName":{"name":"mload","nativeSrc":"1188:5:8","nodeType":"YulIdentifier","src":"1188:5:8"},"nativeSrc":"1188:16:8","nodeType":"YulFunctionCall","src":"1188:16:8"},"variables":[{"name":"offset","nativeSrc":"1178:6:8","nodeType":"YulTypedName","src":"1178:6:8","type":""}]},{"body":{"nativeSrc":"1247:16:8","nodeType":"YulBlock","src":"1247:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1256:1:8","nodeType":"YulLiteral","src":"1256:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1259:1:8","nodeType":"YulLiteral","src":"1259:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1249:6:8","nodeType":"YulIdentifier","src":"1249:6:8"},"nativeSrc":"1249:12:8","nodeType":"YulFunctionCall","src":"1249:12:8"},"nativeSrc":"1249:12:8","nodeType":"YulExpressionStatement","src":"1249:12:8"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1219:6:8","nodeType":"YulIdentifier","src":"1219:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1235:2:8","nodeType":"YulLiteral","src":"1235:2:8","type":"","value":"64"},{"kind":"number","nativeSrc":"1239:1:8","nodeType":"YulLiteral","src":"1239:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1231:3:8","nodeType":"YulIdentifier","src":"1231:3:8"},"nativeSrc":"1231:10:8","nodeType":"YulFunctionCall","src":"1231:10:8"},{"kind":"number","nativeSrc":"1243:1:8","nodeType":"YulLiteral","src":"1243:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1227:3:8","nodeType":"YulIdentifier","src":"1227:3:8"},"nativeSrc":"1227:18:8","nodeType":"YulFunctionCall","src":"1227:18:8"}],"functionName":{"name":"gt","nativeSrc":"1216:2:8","nodeType":"YulIdentifier","src":"1216:2:8"},"nativeSrc":"1216:30:8","nodeType":"YulFunctionCall","src":"1216:30:8"},"nativeSrc":"1213:50:8","nodeType":"YulIf","src":"1213:50:8"},{"nativeSrc":"1272:71:8","nodeType":"YulAssignment","src":"1272:71:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1315:9:8","nodeType":"YulIdentifier","src":"1315:9:8"},{"name":"offset","nativeSrc":"1326:6:8","nodeType":"YulIdentifier","src":"1326:6:8"}],"functionName":{"name":"add","nativeSrc":"1311:3:8","nodeType":"YulIdentifier","src":"1311:3:8"},"nativeSrc":"1311:22:8","nodeType":"YulFunctionCall","src":"1311:22:8"},{"name":"dataEnd","nativeSrc":"1335:7:8","nodeType":"YulIdentifier","src":"1335:7:8"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1282:28:8","nodeType":"YulIdentifier","src":"1282:28:8"},"nativeSrc":"1282:61:8","nodeType":"YulFunctionCall","src":"1282:61:8"},"variableNames":[{"name":"value0","nativeSrc":"1272:6:8","nodeType":"YulIdentifier","src":"1272:6:8"}]},{"nativeSrc":"1352:41:8","nodeType":"YulVariableDeclaration","src":"1352:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1378:9:8","nodeType":"YulIdentifier","src":"1378:9:8"},{"kind":"number","nativeSrc":"1389:2:8","nodeType":"YulLiteral","src":"1389:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1374:3:8","nodeType":"YulIdentifier","src":"1374:3:8"},"nativeSrc":"1374:18:8","nodeType":"YulFunctionCall","src":"1374:18:8"}],"functionName":{"name":"mload","nativeSrc":"1368:5:8","nodeType":"YulIdentifier","src":"1368:5:8"},"nativeSrc":"1368:25:8","nodeType":"YulFunctionCall","src":"1368:25:8"},"variables":[{"name":"offset_1","nativeSrc":"1356:8:8","nodeType":"YulTypedName","src":"1356:8:8","type":""}]},{"body":{"nativeSrc":"1438:16:8","nodeType":"YulBlock","src":"1438:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1447:1:8","nodeType":"YulLiteral","src":"1447:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1450:1:8","nodeType":"YulLiteral","src":"1450:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1440:6:8","nodeType":"YulIdentifier","src":"1440:6:8"},"nativeSrc":"1440:12:8","nodeType":"YulFunctionCall","src":"1440:12:8"},"nativeSrc":"1440:12:8","nodeType":"YulExpressionStatement","src":"1440:12:8"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1408:8:8","nodeType":"YulIdentifier","src":"1408:8:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1426:2:8","nodeType":"YulLiteral","src":"1426:2:8","type":"","value":"64"},{"kind":"number","nativeSrc":"1430:1:8","nodeType":"YulLiteral","src":"1430:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1422:3:8","nodeType":"YulIdentifier","src":"1422:3:8"},"nativeSrc":"1422:10:8","nodeType":"YulFunctionCall","src":"1422:10:8"},{"kind":"number","nativeSrc":"1434:1:8","nodeType":"YulLiteral","src":"1434:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1418:3:8","nodeType":"YulIdentifier","src":"1418:3:8"},"nativeSrc":"1418:18:8","nodeType":"YulFunctionCall","src":"1418:18:8"}],"functionName":{"name":"gt","nativeSrc":"1405:2:8","nodeType":"YulIdentifier","src":"1405:2:8"},"nativeSrc":"1405:32:8","nodeType":"YulFunctionCall","src":"1405:32:8"},"nativeSrc":"1402:52:8","nodeType":"YulIf","src":"1402:52:8"},{"nativeSrc":"1463:73:8","nodeType":"YulAssignment","src":"1463:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1506:9:8","nodeType":"YulIdentifier","src":"1506:9:8"},{"name":"offset_1","nativeSrc":"1517:8:8","nodeType":"YulIdentifier","src":"1517:8:8"}],"functionName":{"name":"add","nativeSrc":"1502:3:8","nodeType":"YulIdentifier","src":"1502:3:8"},"nativeSrc":"1502:24:8","nodeType":"YulFunctionCall","src":"1502:24:8"},{"name":"dataEnd","nativeSrc":"1528:7:8","nodeType":"YulIdentifier","src":"1528:7:8"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1473:28:8","nodeType":"YulIdentifier","src":"1473:28:8"},"nativeSrc":"1473:63:8","nodeType":"YulFunctionCall","src":"1473:63:8"},"variableNames":[{"name":"value1","nativeSrc":"1463:6:8","nodeType":"YulIdentifier","src":"1463:6:8"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"985:557:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1061:9:8","nodeType":"YulTypedName","src":"1061:9:8","type":""},{"name":"dataEnd","nativeSrc":"1072:7:8","nodeType":"YulTypedName","src":"1072:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1084:6:8","nodeType":"YulTypedName","src":"1084:6:8","type":""},{"name":"value1","nativeSrc":"1092:6:8","nodeType":"YulTypedName","src":"1092:6:8","type":""}],"src":"985:557:8"},{"body":{"nativeSrc":"1602:325:8","nodeType":"YulBlock","src":"1602:325:8","statements":[{"nativeSrc":"1612:22:8","nodeType":"YulAssignment","src":"1612:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"1626:1:8","nodeType":"YulLiteral","src":"1626:1:8","type":"","value":"1"},{"name":"data","nativeSrc":"1629:4:8","nodeType":"YulIdentifier","src":"1629:4:8"}],"functionName":{"name":"shr","nativeSrc":"1622:3:8","nodeType":"YulIdentifier","src":"1622:3:8"},"nativeSrc":"1622:12:8","nodeType":"YulFunctionCall","src":"1622:12:8"},"variableNames":[{"name":"length","nativeSrc":"1612:6:8","nodeType":"YulIdentifier","src":"1612:6:8"}]},{"nativeSrc":"1643:38:8","nodeType":"YulVariableDeclaration","src":"1643:38:8","value":{"arguments":[{"name":"data","nativeSrc":"1673:4:8","nodeType":"YulIdentifier","src":"1673:4:8"},{"kind":"number","nativeSrc":"1679:1:8","nodeType":"YulLiteral","src":"1679:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1669:3:8","nodeType":"YulIdentifier","src":"1669:3:8"},"nativeSrc":"1669:12:8","nodeType":"YulFunctionCall","src":"1669:12:8"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1647:18:8","nodeType":"YulTypedName","src":"1647:18:8","type":""}]},{"body":{"nativeSrc":"1720:31:8","nodeType":"YulBlock","src":"1720:31:8","statements":[{"nativeSrc":"1722:27:8","nodeType":"YulAssignment","src":"1722:27:8","value":{"arguments":[{"name":"length","nativeSrc":"1736:6:8","nodeType":"YulIdentifier","src":"1736:6:8"},{"kind":"number","nativeSrc":"1744:4:8","nodeType":"YulLiteral","src":"1744:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1732:3:8","nodeType":"YulIdentifier","src":"1732:3:8"},"nativeSrc":"1732:17:8","nodeType":"YulFunctionCall","src":"1732:17:8"},"variableNames":[{"name":"length","nativeSrc":"1722:6:8","nodeType":"YulIdentifier","src":"1722:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1700:18:8","nodeType":"YulIdentifier","src":"1700:18:8"}],"functionName":{"name":"iszero","nativeSrc":"1693:6:8","nodeType":"YulIdentifier","src":"1693:6:8"},"nativeSrc":"1693:26:8","nodeType":"YulFunctionCall","src":"1693:26:8"},"nativeSrc":"1690:61:8","nodeType":"YulIf","src":"1690:61:8"},{"body":{"nativeSrc":"1810:111:8","nodeType":"YulBlock","src":"1810:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1831:1:8","nodeType":"YulLiteral","src":"1831:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1838:3:8","nodeType":"YulLiteral","src":"1838:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"1843:10:8","nodeType":"YulLiteral","src":"1843:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1834:3:8","nodeType":"YulIdentifier","src":"1834:3:8"},"nativeSrc":"1834:20:8","nodeType":"YulFunctionCall","src":"1834:20:8"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:8","nodeType":"YulIdentifier","src":"1824:6:8"},"nativeSrc":"1824:31:8","nodeType":"YulFunctionCall","src":"1824:31:8"},"nativeSrc":"1824:31:8","nodeType":"YulExpressionStatement","src":"1824:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:1:8","nodeType":"YulLiteral","src":"1875:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"1878:4:8","nodeType":"YulLiteral","src":"1878:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:8","nodeType":"YulIdentifier","src":"1868:6:8"},"nativeSrc":"1868:15:8","nodeType":"YulFunctionCall","src":"1868:15:8"},"nativeSrc":"1868:15:8","nodeType":"YulExpressionStatement","src":"1868:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1903:1:8","nodeType":"YulLiteral","src":"1903:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1906:4:8","nodeType":"YulLiteral","src":"1906:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1896:6:8","nodeType":"YulIdentifier","src":"1896:6:8"},"nativeSrc":"1896:15:8","nodeType":"YulFunctionCall","src":"1896:15:8"},"nativeSrc":"1896:15:8","nodeType":"YulExpressionStatement","src":"1896:15:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1766:18:8","nodeType":"YulIdentifier","src":"1766:18:8"},{"arguments":[{"name":"length","nativeSrc":"1789:6:8","nodeType":"YulIdentifier","src":"1789:6:8"},{"kind":"number","nativeSrc":"1797:2:8","nodeType":"YulLiteral","src":"1797:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1786:2:8","nodeType":"YulIdentifier","src":"1786:2:8"},"nativeSrc":"1786:14:8","nodeType":"YulFunctionCall","src":"1786:14:8"}],"functionName":{"name":"eq","nativeSrc":"1763:2:8","nodeType":"YulIdentifier","src":"1763:2:8"},"nativeSrc":"1763:38:8","nodeType":"YulFunctionCall","src":"1763:38:8"},"nativeSrc":"1760:161:8","nodeType":"YulIf","src":"1760:161:8"}]},"name":"extract_byte_array_length","nativeSrc":"1547:380:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1582:4:8","nodeType":"YulTypedName","src":"1582:4:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1591:6:8","nodeType":"YulTypedName","src":"1591:6:8","type":""}],"src":"1547:380:8"},{"body":{"nativeSrc":"1988:65:8","nodeType":"YulBlock","src":"1988:65:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2005:1:8","nodeType":"YulLiteral","src":"2005:1:8","type":"","value":"0"},{"name":"ptr","nativeSrc":"2008:3:8","nodeType":"YulIdentifier","src":"2008:3:8"}],"functionName":{"name":"mstore","nativeSrc":"1998:6:8","nodeType":"YulIdentifier","src":"1998:6:8"},"nativeSrc":"1998:14:8","nodeType":"YulFunctionCall","src":"1998:14:8"},"nativeSrc":"1998:14:8","nodeType":"YulExpressionStatement","src":"1998:14:8"},{"nativeSrc":"2021:26:8","nodeType":"YulAssignment","src":"2021:26:8","value":{"arguments":[{"kind":"number","nativeSrc":"2039:1:8","nodeType":"YulLiteral","src":"2039:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2042:4:8","nodeType":"YulLiteral","src":"2042:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2029:9:8","nodeType":"YulIdentifier","src":"2029:9:8"},"nativeSrc":"2029:18:8","nodeType":"YulFunctionCall","src":"2029:18:8"},"variableNames":[{"name":"data","nativeSrc":"2021:4:8","nodeType":"YulIdentifier","src":"2021:4:8"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1932:121:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1971:3:8","nodeType":"YulTypedName","src":"1971:3:8","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1979:4:8","nodeType":"YulTypedName","src":"1979:4:8","type":""}],"src":"1932:121:8"},{"body":{"nativeSrc":"2139:437:8","nodeType":"YulBlock","src":"2139:437:8","statements":[{"body":{"nativeSrc":"2172:398:8","nodeType":"YulBlock","src":"2172:398:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2193:1:8","nodeType":"YulLiteral","src":"2193:1:8","type":"","value":"0"},{"name":"array","nativeSrc":"2196:5:8","nodeType":"YulIdentifier","src":"2196:5:8"}],"functionName":{"name":"mstore","nativeSrc":"2186:6:8","nodeType":"YulIdentifier","src":"2186:6:8"},"nativeSrc":"2186:16:8","nodeType":"YulFunctionCall","src":"2186:16:8"},"nativeSrc":"2186:16:8","nodeType":"YulExpressionStatement","src":"2186:16:8"},{"nativeSrc":"2215:30:8","nodeType":"YulVariableDeclaration","src":"2215:30:8","value":{"arguments":[{"kind":"number","nativeSrc":"2237:1:8","nodeType":"YulLiteral","src":"2237:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2240:4:8","nodeType":"YulLiteral","src":"2240:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2227:9:8","nodeType":"YulIdentifier","src":"2227:9:8"},"nativeSrc":"2227:18:8","nodeType":"YulFunctionCall","src":"2227:18:8"},"variables":[{"name":"data","nativeSrc":"2219:4:8","nodeType":"YulTypedName","src":"2219:4:8","type":""}]},{"nativeSrc":"2258:57:8","nodeType":"YulVariableDeclaration","src":"2258:57:8","value":{"arguments":[{"name":"data","nativeSrc":"2281:4:8","nodeType":"YulIdentifier","src":"2281:4:8"},{"arguments":[{"kind":"number","nativeSrc":"2291:1:8","nodeType":"YulLiteral","src":"2291:1:8","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2298:10:8","nodeType":"YulIdentifier","src":"2298:10:8"},{"kind":"number","nativeSrc":"2310:2:8","nodeType":"YulLiteral","src":"2310:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2294:3:8","nodeType":"YulIdentifier","src":"2294:3:8"},"nativeSrc":"2294:19:8","nodeType":"YulFunctionCall","src":"2294:19:8"}],"functionName":{"name":"shr","nativeSrc":"2287:3:8","nodeType":"YulIdentifier","src":"2287:3:8"},"nativeSrc":"2287:27:8","nodeType":"YulFunctionCall","src":"2287:27:8"}],"functionName":{"name":"add","nativeSrc":"2277:3:8","nodeType":"YulIdentifier","src":"2277:3:8"},"nativeSrc":"2277:38:8","nodeType":"YulFunctionCall","src":"2277:38:8"},"variables":[{"name":"deleteStart","nativeSrc":"2262:11:8","nodeType":"YulTypedName","src":"2262:11:8","type":""}]},{"body":{"nativeSrc":"2352:23:8","nodeType":"YulBlock","src":"2352:23:8","statements":[{"nativeSrc":"2354:19:8","nodeType":"YulAssignment","src":"2354:19:8","value":{"name":"data","nativeSrc":"2369:4:8","nodeType":"YulIdentifier","src":"2369:4:8"},"variableNames":[{"name":"deleteStart","nativeSrc":"2354:11:8","nodeType":"YulIdentifier","src":"2354:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2334:10:8","nodeType":"YulIdentifier","src":"2334:10:8"},{"kind":"number","nativeSrc":"2346:4:8","nodeType":"YulLiteral","src":"2346:4:8","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2331:2:8","nodeType":"YulIdentifier","src":"2331:2:8"},"nativeSrc":"2331:20:8","nodeType":"YulFunctionCall","src":"2331:20:8"},"nativeSrc":"2328:47:8","nodeType":"YulIf","src":"2328:47:8"},{"nativeSrc":"2388:41:8","nodeType":"YulVariableDeclaration","src":"2388:41:8","value":{"arguments":[{"name":"data","nativeSrc":"2402:4:8","nodeType":"YulIdentifier","src":"2402:4:8"},{"arguments":[{"kind":"number","nativeSrc":"2412:1:8","nodeType":"YulLiteral","src":"2412:1:8","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2419:3:8","nodeType":"YulIdentifier","src":"2419:3:8"},{"kind":"number","nativeSrc":"2424:2:8","nodeType":"YulLiteral","src":"2424:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2415:3:8","nodeType":"YulIdentifier","src":"2415:3:8"},"nativeSrc":"2415:12:8","nodeType":"YulFunctionCall","src":"2415:12:8"}],"functionName":{"name":"shr","nativeSrc":"2408:3:8","nodeType":"YulIdentifier","src":"2408:3:8"},"nativeSrc":"2408:20:8","nodeType":"YulFunctionCall","src":"2408:20:8"}],"functionName":{"name":"add","nativeSrc":"2398:3:8","nodeType":"YulIdentifier","src":"2398:3:8"},"nativeSrc":"2398:31:8","nodeType":"YulFunctionCall","src":"2398:31:8"},"variables":[{"name":"_1","nativeSrc":"2392:2:8","nodeType":"YulTypedName","src":"2392:2:8","type":""}]},{"nativeSrc":"2442:24:8","nodeType":"YulVariableDeclaration","src":"2442:24:8","value":{"name":"deleteStart","nativeSrc":"2455:11:8","nodeType":"YulIdentifier","src":"2455:11:8"},"variables":[{"name":"start","nativeSrc":"2446:5:8","nodeType":"YulTypedName","src":"2446:5:8","type":""}]},{"body":{"nativeSrc":"2540:20:8","nodeType":"YulBlock","src":"2540:20:8","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2549:5:8","nodeType":"YulIdentifier","src":"2549:5:8"},{"kind":"number","nativeSrc":"2556:1:8","nodeType":"YulLiteral","src":"2556:1:8","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"2542:6:8","nodeType":"YulIdentifier","src":"2542:6:8"},"nativeSrc":"2542:16:8","nodeType":"YulFunctionCall","src":"2542:16:8"},"nativeSrc":"2542:16:8","nodeType":"YulExpressionStatement","src":"2542:16:8"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2490:5:8","nodeType":"YulIdentifier","src":"2490:5:8"},{"name":"_1","nativeSrc":"2497:2:8","nodeType":"YulIdentifier","src":"2497:2:8"}],"functionName":{"name":"lt","nativeSrc":"2487:2:8","nodeType":"YulIdentifier","src":"2487:2:8"},"nativeSrc":"2487:13:8","nodeType":"YulFunctionCall","src":"2487:13:8"},"nativeSrc":"2479:81:8","nodeType":"YulForLoop","post":{"nativeSrc":"2501:26:8","nodeType":"YulBlock","src":"2501:26:8","statements":[{"nativeSrc":"2503:22:8","nodeType":"YulAssignment","src":"2503:22:8","value":{"arguments":[{"name":"start","nativeSrc":"2516:5:8","nodeType":"YulIdentifier","src":"2516:5:8"},{"kind":"number","nativeSrc":"2523:1:8","nodeType":"YulLiteral","src":"2523:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2512:3:8","nodeType":"YulIdentifier","src":"2512:3:8"},"nativeSrc":"2512:13:8","nodeType":"YulFunctionCall","src":"2512:13:8"},"variableNames":[{"name":"start","nativeSrc":"2503:5:8","nodeType":"YulIdentifier","src":"2503:5:8"}]}]},"pre":{"nativeSrc":"2483:3:8","nodeType":"YulBlock","src":"2483:3:8","statements":[]},"src":"2479:81:8"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2155:3:8","nodeType":"YulIdentifier","src":"2155:3:8"},{"kind":"number","nativeSrc":"2160:2:8","nodeType":"YulLiteral","src":"2160:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2152:2:8","nodeType":"YulIdentifier","src":"2152:2:8"},"nativeSrc":"2152:11:8","nodeType":"YulFunctionCall","src":"2152:11:8"},"nativeSrc":"2149:421:8","nodeType":"YulIf","src":"2149:421:8"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2058:518:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2111:5:8","nodeType":"YulTypedName","src":"2111:5:8","type":""},{"name":"len","nativeSrc":"2118:3:8","nodeType":"YulTypedName","src":"2118:3:8","type":""},{"name":"startIndex","nativeSrc":"2123:10:8","nodeType":"YulTypedName","src":"2123:10:8","type":""}],"src":"2058:518:8"},{"body":{"nativeSrc":"2666:81:8","nodeType":"YulBlock","src":"2666:81:8","statements":[{"nativeSrc":"2676:65:8","nodeType":"YulAssignment","src":"2676:65:8","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2691:4:8","nodeType":"YulIdentifier","src":"2691:4:8"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2709:1:8","nodeType":"YulLiteral","src":"2709:1:8","type":"","value":"3"},{"name":"len","nativeSrc":"2712:3:8","nodeType":"YulIdentifier","src":"2712:3:8"}],"functionName":{"name":"shl","nativeSrc":"2705:3:8","nodeType":"YulIdentifier","src":"2705:3:8"},"nativeSrc":"2705:11:8","nodeType":"YulFunctionCall","src":"2705:11:8"},{"arguments":[{"kind":"number","nativeSrc":"2722:1:8","nodeType":"YulLiteral","src":"2722:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2718:3:8","nodeType":"YulIdentifier","src":"2718:3:8"},"nativeSrc":"2718:6:8","nodeType":"YulFunctionCall","src":"2718:6:8"}],"functionName":{"name":"shr","nativeSrc":"2701:3:8","nodeType":"YulIdentifier","src":"2701:3:8"},"nativeSrc":"2701:24:8","nodeType":"YulFunctionCall","src":"2701:24:8"}],"functionName":{"name":"not","nativeSrc":"2697:3:8","nodeType":"YulIdentifier","src":"2697:3:8"},"nativeSrc":"2697:29:8","nodeType":"YulFunctionCall","src":"2697:29:8"}],"functionName":{"name":"and","nativeSrc":"2687:3:8","nodeType":"YulIdentifier","src":"2687:3:8"},"nativeSrc":"2687:40:8","nodeType":"YulFunctionCall","src":"2687:40:8"},{"arguments":[{"kind":"number","nativeSrc":"2733:1:8","nodeType":"YulLiteral","src":"2733:1:8","type":"","value":"1"},{"name":"len","nativeSrc":"2736:3:8","nodeType":"YulIdentifier","src":"2736:3:8"}],"functionName":{"name":"shl","nativeSrc":"2729:3:8","nodeType":"YulIdentifier","src":"2729:3:8"},"nativeSrc":"2729:11:8","nodeType":"YulFunctionCall","src":"2729:11:8"}],"functionName":{"name":"or","nativeSrc":"2684:2:8","nodeType":"YulIdentifier","src":"2684:2:8"},"nativeSrc":"2684:57:8","nodeType":"YulFunctionCall","src":"2684:57:8"},"variableNames":[{"name":"used","nativeSrc":"2676:4:8","nodeType":"YulIdentifier","src":"2676:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2581:166:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2643:4:8","nodeType":"YulTypedName","src":"2643:4:8","type":""},{"name":"len","nativeSrc":"2649:3:8","nodeType":"YulTypedName","src":"2649:3:8","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2657:4:8","nodeType":"YulTypedName","src":"2657:4:8","type":""}],"src":"2581:166:8"},{"body":{"nativeSrc":"2848:1203:8","nodeType":"YulBlock","src":"2848:1203:8","statements":[{"nativeSrc":"2858:24:8","nodeType":"YulVariableDeclaration","src":"2858:24:8","value":{"arguments":[{"name":"src","nativeSrc":"2878:3:8","nodeType":"YulIdentifier","src":"2878:3:8"}],"functionName":{"name":"mload","nativeSrc":"2872:5:8","nodeType":"YulIdentifier","src":"2872:5:8"},"nativeSrc":"2872:10:8","nodeType":"YulFunctionCall","src":"2872:10:8"},"variables":[{"name":"newLen","nativeSrc":"2862:6:8","nodeType":"YulTypedName","src":"2862:6:8","type":""}]},{"body":{"nativeSrc":"2925:22:8","nodeType":"YulBlock","src":"2925:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2927:16:8","nodeType":"YulIdentifier","src":"2927:16:8"},"nativeSrc":"2927:18:8","nodeType":"YulFunctionCall","src":"2927:18:8"},"nativeSrc":"2927:18:8","nodeType":"YulExpressionStatement","src":"2927:18:8"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2897:6:8","nodeType":"YulIdentifier","src":"2897:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2913:2:8","nodeType":"YulLiteral","src":"2913:2:8","type":"","value":"64"},{"kind":"number","nativeSrc":"2917:1:8","nodeType":"YulLiteral","src":"2917:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2909:3:8","nodeType":"YulIdentifier","src":"2909:3:8"},"nativeSrc":"2909:10:8","nodeType":"YulFunctionCall","src":"2909:10:8"},{"kind":"number","nativeSrc":"2921:1:8","nodeType":"YulLiteral","src":"2921:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2905:3:8","nodeType":"YulIdentifier","src":"2905:3:8"},"nativeSrc":"2905:18:8","nodeType":"YulFunctionCall","src":"2905:18:8"}],"functionName":{"name":"gt","nativeSrc":"2894:2:8","nodeType":"YulIdentifier","src":"2894:2:8"},"nativeSrc":"2894:30:8","nodeType":"YulFunctionCall","src":"2894:30:8"},"nativeSrc":"2891:56:8","nodeType":"YulIf","src":"2891:56:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3000:4:8","nodeType":"YulIdentifier","src":"3000:4:8"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3038:4:8","nodeType":"YulIdentifier","src":"3038:4:8"}],"functionName":{"name":"sload","nativeSrc":"3032:5:8","nodeType":"YulIdentifier","src":"3032:5:8"},"nativeSrc":"3032:11:8","nodeType":"YulFunctionCall","src":"3032:11:8"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"3006:25:8","nodeType":"YulIdentifier","src":"3006:25:8"},"nativeSrc":"3006:38:8","nodeType":"YulFunctionCall","src":"3006:38:8"},{"name":"newLen","nativeSrc":"3046:6:8","nodeType":"YulIdentifier","src":"3046:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2956:43:8","nodeType":"YulIdentifier","src":"2956:43:8"},"nativeSrc":"2956:97:8","nodeType":"YulFunctionCall","src":"2956:97:8"},"nativeSrc":"2956:97:8","nodeType":"YulExpressionStatement","src":"2956:97:8"},{"nativeSrc":"3062:18:8","nodeType":"YulVariableDeclaration","src":"3062:18:8","value":{"kind":"number","nativeSrc":"3079:1:8","nodeType":"YulLiteral","src":"3079:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"3066:9:8","nodeType":"YulTypedName","src":"3066:9:8","type":""}]},{"nativeSrc":"3089:17:8","nodeType":"YulAssignment","src":"3089:17:8","value":{"kind":"number","nativeSrc":"3102:4:8","nodeType":"YulLiteral","src":"3102:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"3089:9:8","nodeType":"YulIdentifier","src":"3089:9:8"}]},{"cases":[{"body":{"nativeSrc":"3152:642:8","nodeType":"YulBlock","src":"3152:642:8","statements":[{"nativeSrc":"3166:35:8","nodeType":"YulVariableDeclaration","src":"3166:35:8","value":{"arguments":[{"name":"newLen","nativeSrc":"3185:6:8","nodeType":"YulIdentifier","src":"3185:6:8"},{"arguments":[{"kind":"number","nativeSrc":"3197:2:8","nodeType":"YulLiteral","src":"3197:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3193:3:8","nodeType":"YulIdentifier","src":"3193:3:8"},"nativeSrc":"3193:7:8","nodeType":"YulFunctionCall","src":"3193:7:8"}],"functionName":{"name":"and","nativeSrc":"3181:3:8","nodeType":"YulIdentifier","src":"3181:3:8"},"nativeSrc":"3181:20:8","nodeType":"YulFunctionCall","src":"3181:20:8"},"variables":[{"name":"loopEnd","nativeSrc":"3170:7:8","nodeType":"YulTypedName","src":"3170:7:8","type":""}]},{"nativeSrc":"3214:49:8","nodeType":"YulVariableDeclaration","src":"3214:49:8","value":{"arguments":[{"name":"slot","nativeSrc":"3258:4:8","nodeType":"YulIdentifier","src":"3258:4:8"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3228:29:8","nodeType":"YulIdentifier","src":"3228:29:8"},"nativeSrc":"3228:35:8","nodeType":"YulFunctionCall","src":"3228:35:8"},"variables":[{"name":"dstPtr","nativeSrc":"3218:6:8","nodeType":"YulTypedName","src":"3218:6:8","type":""}]},{"nativeSrc":"3276:10:8","nodeType":"YulVariableDeclaration","src":"3276:10:8","value":{"kind":"number","nativeSrc":"3285:1:8","nodeType":"YulLiteral","src":"3285:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3280:1:8","nodeType":"YulTypedName","src":"3280:1:8","type":""}]},{"body":{"nativeSrc":"3356:165:8","nodeType":"YulBlock","src":"3356:165:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3381:6:8","nodeType":"YulIdentifier","src":"3381:6:8"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3399:3:8","nodeType":"YulIdentifier","src":"3399:3:8"},{"name":"srcOffset","nativeSrc":"3404:9:8","nodeType":"YulIdentifier","src":"3404:9:8"}],"functionName":{"name":"add","nativeSrc":"3395:3:8","nodeType":"YulIdentifier","src":"3395:3:8"},"nativeSrc":"3395:19:8","nodeType":"YulFunctionCall","src":"3395:19:8"}],"functionName":{"name":"mload","nativeSrc":"3389:5:8","nodeType":"YulIdentifier","src":"3389:5:8"},"nativeSrc":"3389:26:8","nodeType":"YulFunctionCall","src":"3389:26:8"}],"functionName":{"name":"sstore","nativeSrc":"3374:6:8","nodeType":"YulIdentifier","src":"3374:6:8"},"nativeSrc":"3374:42:8","nodeType":"YulFunctionCall","src":"3374:42:8"},"nativeSrc":"3374:42:8","nodeType":"YulExpressionStatement","src":"3374:42:8"},{"nativeSrc":"3433:24:8","nodeType":"YulAssignment","src":"3433:24:8","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3447:6:8","nodeType":"YulIdentifier","src":"3447:6:8"},{"kind":"number","nativeSrc":"3455:1:8","nodeType":"YulLiteral","src":"3455:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3443:3:8","nodeType":"YulIdentifier","src":"3443:3:8"},"nativeSrc":"3443:14:8","nodeType":"YulFunctionCall","src":"3443:14:8"},"variableNames":[{"name":"dstPtr","nativeSrc":"3433:6:8","nodeType":"YulIdentifier","src":"3433:6:8"}]},{"nativeSrc":"3474:33:8","nodeType":"YulAssignment","src":"3474:33:8","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3491:9:8","nodeType":"YulIdentifier","src":"3491:9:8"},{"kind":"number","nativeSrc":"3502:4:8","nodeType":"YulLiteral","src":"3502:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3487:3:8","nodeType":"YulIdentifier","src":"3487:3:8"},"nativeSrc":"3487:20:8","nodeType":"YulFunctionCall","src":"3487:20:8"},"variableNames":[{"name":"srcOffset","nativeSrc":"3474:9:8","nodeType":"YulIdentifier","src":"3474:9:8"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3310:1:8","nodeType":"YulIdentifier","src":"3310:1:8"},{"name":"loopEnd","nativeSrc":"3313:7:8","nodeType":"YulIdentifier","src":"3313:7:8"}],"functionName":{"name":"lt","nativeSrc":"3307:2:8","nodeType":"YulIdentifier","src":"3307:2:8"},"nativeSrc":"3307:14:8","nodeType":"YulFunctionCall","src":"3307:14:8"},"nativeSrc":"3299:222:8","nodeType":"YulForLoop","post":{"nativeSrc":"3322:21:8","nodeType":"YulBlock","src":"3322:21:8","statements":[{"nativeSrc":"3324:17:8","nodeType":"YulAssignment","src":"3324:17:8","value":{"arguments":[{"name":"i","nativeSrc":"3333:1:8","nodeType":"YulIdentifier","src":"3333:1:8"},{"kind":"number","nativeSrc":"3336:4:8","nodeType":"YulLiteral","src":"3336:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3329:3:8","nodeType":"YulIdentifier","src":"3329:3:8"},"nativeSrc":"3329:12:8","nodeType":"YulFunctionCall","src":"3329:12:8"},"variableNames":[{"name":"i","nativeSrc":"3324:1:8","nodeType":"YulIdentifier","src":"3324:1:8"}]}]},"pre":{"nativeSrc":"3303:3:8","nodeType":"YulBlock","src":"3303:3:8","statements":[]},"src":"3299:222:8"},{"body":{"nativeSrc":"3569:166:8","nodeType":"YulBlock","src":"3569:166:8","statements":[{"nativeSrc":"3587:43:8","nodeType":"YulVariableDeclaration","src":"3587:43:8","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3614:3:8","nodeType":"YulIdentifier","src":"3614:3:8"},{"name":"srcOffset","nativeSrc":"3619:9:8","nodeType":"YulIdentifier","src":"3619:9:8"}],"functionName":{"name":"add","nativeSrc":"3610:3:8","nodeType":"YulIdentifier","src":"3610:3:8"},"nativeSrc":"3610:19:8","nodeType":"YulFunctionCall","src":"3610:19:8"}],"functionName":{"name":"mload","nativeSrc":"3604:5:8","nodeType":"YulIdentifier","src":"3604:5:8"},"nativeSrc":"3604:26:8","nodeType":"YulFunctionCall","src":"3604:26:8"},"variables":[{"name":"lastValue","nativeSrc":"3591:9:8","nodeType":"YulTypedName","src":"3591:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3654:6:8","nodeType":"YulIdentifier","src":"3654:6:8"},{"arguments":[{"name":"lastValue","nativeSrc":"3666:9:8","nodeType":"YulIdentifier","src":"3666:9:8"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3693:1:8","nodeType":"YulLiteral","src":"3693:1:8","type":"","value":"3"},{"name":"newLen","nativeSrc":"3696:6:8","nodeType":"YulIdentifier","src":"3696:6:8"}],"functionName":{"name":"shl","nativeSrc":"3689:3:8","nodeType":"YulIdentifier","src":"3689:3:8"},"nativeSrc":"3689:14:8","nodeType":"YulFunctionCall","src":"3689:14:8"},{"kind":"number","nativeSrc":"3705:3:8","nodeType":"YulLiteral","src":"3705:3:8","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3685:3:8","nodeType":"YulIdentifier","src":"3685:3:8"},"nativeSrc":"3685:24:8","nodeType":"YulFunctionCall","src":"3685:24:8"},{"arguments":[{"kind":"number","nativeSrc":"3715:1:8","nodeType":"YulLiteral","src":"3715:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3711:3:8","nodeType":"YulIdentifier","src":"3711:3:8"},"nativeSrc":"3711:6:8","nodeType":"YulFunctionCall","src":"3711:6:8"}],"functionName":{"name":"shr","nativeSrc":"3681:3:8","nodeType":"YulIdentifier","src":"3681:3:8"},"nativeSrc":"3681:37:8","nodeType":"YulFunctionCall","src":"3681:37:8"}],"functionName":{"name":"not","nativeSrc":"3677:3:8","nodeType":"YulIdentifier","src":"3677:3:8"},"nativeSrc":"3677:42:8","nodeType":"YulFunctionCall","src":"3677:42:8"}],"functionName":{"name":"and","nativeSrc":"3662:3:8","nodeType":"YulIdentifier","src":"3662:3:8"},"nativeSrc":"3662:58:8","nodeType":"YulFunctionCall","src":"3662:58:8"}],"functionName":{"name":"sstore","nativeSrc":"3647:6:8","nodeType":"YulIdentifier","src":"3647:6:8"},"nativeSrc":"3647:74:8","nodeType":"YulFunctionCall","src":"3647:74:8"},"nativeSrc":"3647:74:8","nodeType":"YulExpressionStatement","src":"3647:74:8"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"3540:7:8","nodeType":"YulIdentifier","src":"3540:7:8"},{"name":"newLen","nativeSrc":"3549:6:8","nodeType":"YulIdentifier","src":"3549:6:8"}],"functionName":{"name":"lt","nativeSrc":"3537:2:8","nodeType":"YulIdentifier","src":"3537:2:8"},"nativeSrc":"3537:19:8","nodeType":"YulFunctionCall","src":"3537:19:8"},"nativeSrc":"3534:201:8","nodeType":"YulIf","src":"3534:201:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3755:4:8","nodeType":"YulIdentifier","src":"3755:4:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3769:1:8","nodeType":"YulLiteral","src":"3769:1:8","type":"","value":"1"},{"name":"newLen","nativeSrc":"3772:6:8","nodeType":"YulIdentifier","src":"3772:6:8"}],"functionName":{"name":"shl","nativeSrc":"3765:3:8","nodeType":"YulIdentifier","src":"3765:3:8"},"nativeSrc":"3765:14:8","nodeType":"YulFunctionCall","src":"3765:14:8"},{"kind":"number","nativeSrc":"3781:1:8","nodeType":"YulLiteral","src":"3781:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3761:3:8","nodeType":"YulIdentifier","src":"3761:3:8"},"nativeSrc":"3761:22:8","nodeType":"YulFunctionCall","src":"3761:22:8"}],"functionName":{"name":"sstore","nativeSrc":"3748:6:8","nodeType":"YulIdentifier","src":"3748:6:8"},"nativeSrc":"3748:36:8","nodeType":"YulFunctionCall","src":"3748:36:8"},"nativeSrc":"3748:36:8","nodeType":"YulExpressionStatement","src":"3748:36:8"}]},"nativeSrc":"3145:649:8","nodeType":"YulCase","src":"3145:649:8","value":{"kind":"number","nativeSrc":"3150:1:8","nodeType":"YulLiteral","src":"3150:1:8","type":"","value":"1"}},{"body":{"nativeSrc":"3811:234:8","nodeType":"YulBlock","src":"3811:234:8","statements":[{"nativeSrc":"3825:14:8","nodeType":"YulVariableDeclaration","src":"3825:14:8","value":{"kind":"number","nativeSrc":"3838:1:8","nodeType":"YulLiteral","src":"3838:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3829:5:8","nodeType":"YulTypedName","src":"3829:5:8","type":""}]},{"body":{"nativeSrc":"3874:67:8","nodeType":"YulBlock","src":"3874:67:8","statements":[{"nativeSrc":"3892:35:8","nodeType":"YulAssignment","src":"3892:35:8","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3911:3:8","nodeType":"YulIdentifier","src":"3911:3:8"},{"name":"srcOffset","nativeSrc":"3916:9:8","nodeType":"YulIdentifier","src":"3916:9:8"}],"functionName":{"name":"add","nativeSrc":"3907:3:8","nodeType":"YulIdentifier","src":"3907:3:8"},"nativeSrc":"3907:19:8","nodeType":"YulFunctionCall","src":"3907:19:8"}],"functionName":{"name":"mload","nativeSrc":"3901:5:8","nodeType":"YulIdentifier","src":"3901:5:8"},"nativeSrc":"3901:26:8","nodeType":"YulFunctionCall","src":"3901:26:8"},"variableNames":[{"name":"value","nativeSrc":"3892:5:8","nodeType":"YulIdentifier","src":"3892:5:8"}]}]},"condition":{"name":"newLen","nativeSrc":"3855:6:8","nodeType":"YulIdentifier","src":"3855:6:8"},"nativeSrc":"3852:89:8","nodeType":"YulIf","src":"3852:89:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3961:4:8","nodeType":"YulIdentifier","src":"3961:4:8"},{"arguments":[{"name":"value","nativeSrc":"4020:5:8","nodeType":"YulIdentifier","src":"4020:5:8"},{"name":"newLen","nativeSrc":"4027:6:8","nodeType":"YulIdentifier","src":"4027:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3967:52:8","nodeType":"YulIdentifier","src":"3967:52:8"},"nativeSrc":"3967:67:8","nodeType":"YulFunctionCall","src":"3967:67:8"}],"functionName":{"name":"sstore","nativeSrc":"3954:6:8","nodeType":"YulIdentifier","src":"3954:6:8"},"nativeSrc":"3954:81:8","nodeType":"YulFunctionCall","src":"3954:81:8"},"nativeSrc":"3954:81:8","nodeType":"YulExpressionStatement","src":"3954:81:8"}]},"nativeSrc":"3803:242:8","nodeType":"YulCase","src":"3803:242:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"3125:6:8","nodeType":"YulIdentifier","src":"3125:6:8"},{"kind":"number","nativeSrc":"3133:2:8","nodeType":"YulLiteral","src":"3133:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3122:2:8","nodeType":"YulIdentifier","src":"3122:2:8"},"nativeSrc":"3122:14:8","nodeType":"YulFunctionCall","src":"3122:14:8"},"nativeSrc":"3115:930:8","nodeType":"YulSwitch","src":"3115:930:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2752:1299:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2833:4:8","nodeType":"YulTypedName","src":"2833:4:8","type":""},{"name":"src","nativeSrc":"2839:3:8","nodeType":"YulTypedName","src":"2839:3:8","type":""}],"src":"2752:1299:8"},{"body":{"nativeSrc":"4088:95:8","nodeType":"YulBlock","src":"4088:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4105:1:8","nodeType":"YulLiteral","src":"4105:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4112:3:8","nodeType":"YulLiteral","src":"4112:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"4117:10:8","nodeType":"YulLiteral","src":"4117:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4108:3:8","nodeType":"YulIdentifier","src":"4108:3:8"},"nativeSrc":"4108:20:8","nodeType":"YulFunctionCall","src":"4108:20:8"}],"functionName":{"name":"mstore","nativeSrc":"4098:6:8","nodeType":"YulIdentifier","src":"4098:6:8"},"nativeSrc":"4098:31:8","nodeType":"YulFunctionCall","src":"4098:31:8"},"nativeSrc":"4098:31:8","nodeType":"YulExpressionStatement","src":"4098:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4145:1:8","nodeType":"YulLiteral","src":"4145:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"4148:4:8","nodeType":"YulLiteral","src":"4148:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4138:6:8","nodeType":"YulIdentifier","src":"4138:6:8"},"nativeSrc":"4138:15:8","nodeType":"YulFunctionCall","src":"4138:15:8"},"nativeSrc":"4138:15:8","nodeType":"YulExpressionStatement","src":"4138:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4169:1:8","nodeType":"YulLiteral","src":"4169:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"4172:4:8","nodeType":"YulLiteral","src":"4172:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4162:6:8","nodeType":"YulIdentifier","src":"4162:6:8"},"nativeSrc":"4162:15:8","nodeType":"YulFunctionCall","src":"4162:15:8"},"nativeSrc":"4162:15:8","nodeType":"YulExpressionStatement","src":"4162:15:8"}]},"name":"panic_error_0x11","nativeSrc":"4056:127:8","nodeType":"YulFunctionDefinition","src":"4056:127:8"},{"body":{"nativeSrc":"4257:306:8","nodeType":"YulBlock","src":"4257:306:8","statements":[{"nativeSrc":"4267:10:8","nodeType":"YulAssignment","src":"4267:10:8","value":{"kind":"number","nativeSrc":"4276:1:8","nodeType":"YulLiteral","src":"4276:1:8","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4267:5:8","nodeType":"YulIdentifier","src":"4267:5:8"}]},{"nativeSrc":"4286:13:8","nodeType":"YulAssignment","src":"4286:13:8","value":{"name":"_base","nativeSrc":"4294:5:8","nodeType":"YulIdentifier","src":"4294:5:8"},"variableNames":[{"name":"base","nativeSrc":"4286:4:8","nodeType":"YulIdentifier","src":"4286:4:8"}]},{"body":{"nativeSrc":"4344:213:8","nodeType":"YulBlock","src":"4344:213:8","statements":[{"body":{"nativeSrc":"4386:22:8","nodeType":"YulBlock","src":"4386:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4388:16:8","nodeType":"YulIdentifier","src":"4388:16:8"},"nativeSrc":"4388:18:8","nodeType":"YulFunctionCall","src":"4388:18:8"},"nativeSrc":"4388:18:8","nodeType":"YulExpressionStatement","src":"4388:18:8"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4364:4:8","nodeType":"YulIdentifier","src":"4364:4:8"},{"arguments":[{"name":"max","nativeSrc":"4374:3:8","nodeType":"YulIdentifier","src":"4374:3:8"},{"name":"base","nativeSrc":"4379:4:8","nodeType":"YulIdentifier","src":"4379:4:8"}],"functionName":{"name":"div","nativeSrc":"4370:3:8","nodeType":"YulIdentifier","src":"4370:3:8"},"nativeSrc":"4370:14:8","nodeType":"YulFunctionCall","src":"4370:14:8"}],"functionName":{"name":"gt","nativeSrc":"4361:2:8","nodeType":"YulIdentifier","src":"4361:2:8"},"nativeSrc":"4361:24:8","nodeType":"YulFunctionCall","src":"4361:24:8"},"nativeSrc":"4358:50:8","nodeType":"YulIf","src":"4358:50:8"},{"body":{"nativeSrc":"4441:29:8","nodeType":"YulBlock","src":"4441:29:8","statements":[{"nativeSrc":"4443:25:8","nodeType":"YulAssignment","src":"4443:25:8","value":{"arguments":[{"name":"power","nativeSrc":"4456:5:8","nodeType":"YulIdentifier","src":"4456:5:8"},{"name":"base","nativeSrc":"4463:4:8","nodeType":"YulIdentifier","src":"4463:4:8"}],"functionName":{"name":"mul","nativeSrc":"4452:3:8","nodeType":"YulIdentifier","src":"4452:3:8"},"nativeSrc":"4452:16:8","nodeType":"YulFunctionCall","src":"4452:16:8"},"variableNames":[{"name":"power","nativeSrc":"4443:5:8","nodeType":"YulIdentifier","src":"4443:5:8"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4428:8:8","nodeType":"YulIdentifier","src":"4428:8:8"},{"kind":"number","nativeSrc":"4438:1:8","nodeType":"YulLiteral","src":"4438:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4424:3:8","nodeType":"YulIdentifier","src":"4424:3:8"},"nativeSrc":"4424:16:8","nodeType":"YulFunctionCall","src":"4424:16:8"},"nativeSrc":"4421:49:8","nodeType":"YulIf","src":"4421:49:8"},{"nativeSrc":"4483:23:8","nodeType":"YulAssignment","src":"4483:23:8","value":{"arguments":[{"name":"base","nativeSrc":"4495:4:8","nodeType":"YulIdentifier","src":"4495:4:8"},{"name":"base","nativeSrc":"4501:4:8","nodeType":"YulIdentifier","src":"4501:4:8"}],"functionName":{"name":"mul","nativeSrc":"4491:3:8","nodeType":"YulIdentifier","src":"4491:3:8"},"nativeSrc":"4491:15:8","nodeType":"YulFunctionCall","src":"4491:15:8"},"variableNames":[{"name":"base","nativeSrc":"4483:4:8","nodeType":"YulIdentifier","src":"4483:4:8"}]},{"nativeSrc":"4519:28:8","nodeType":"YulAssignment","src":"4519:28:8","value":{"arguments":[{"kind":"number","nativeSrc":"4535:1:8","nodeType":"YulLiteral","src":"4535:1:8","type":"","value":"1"},{"name":"exponent","nativeSrc":"4538:8:8","nodeType":"YulIdentifier","src":"4538:8:8"}],"functionName":{"name":"shr","nativeSrc":"4531:3:8","nodeType":"YulIdentifier","src":"4531:3:8"},"nativeSrc":"4531:16:8","nodeType":"YulFunctionCall","src":"4531:16:8"},"variableNames":[{"name":"exponent","nativeSrc":"4519:8:8","nodeType":"YulIdentifier","src":"4519:8:8"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4319:8:8","nodeType":"YulIdentifier","src":"4319:8:8"},{"kind":"number","nativeSrc":"4329:1:8","nodeType":"YulLiteral","src":"4329:1:8","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"4316:2:8","nodeType":"YulIdentifier","src":"4316:2:8"},"nativeSrc":"4316:15:8","nodeType":"YulFunctionCall","src":"4316:15:8"},"nativeSrc":"4308:249:8","nodeType":"YulForLoop","post":{"nativeSrc":"4332:3:8","nodeType":"YulBlock","src":"4332:3:8","statements":[]},"pre":{"nativeSrc":"4312:3:8","nodeType":"YulBlock","src":"4312:3:8","statements":[]},"src":"4308:249:8"}]},"name":"checked_exp_helper","nativeSrc":"4188:375:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"4216:5:8","nodeType":"YulTypedName","src":"4216:5:8","type":""},{"name":"exponent","nativeSrc":"4223:8:8","nodeType":"YulTypedName","src":"4223:8:8","type":""},{"name":"max","nativeSrc":"4233:3:8","nodeType":"YulTypedName","src":"4233:3:8","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4241:5:8","nodeType":"YulTypedName","src":"4241:5:8","type":""},{"name":"base","nativeSrc":"4248:4:8","nodeType":"YulTypedName","src":"4248:4:8","type":""}],"src":"4188:375:8"},{"body":{"nativeSrc":"4627:843:8","nodeType":"YulBlock","src":"4627:843:8","statements":[{"body":{"nativeSrc":"4665:52:8","nodeType":"YulBlock","src":"4665:52:8","statements":[{"nativeSrc":"4679:10:8","nodeType":"YulAssignment","src":"4679:10:8","value":{"kind":"number","nativeSrc":"4688:1:8","nodeType":"YulLiteral","src":"4688:1:8","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4679:5:8","nodeType":"YulIdentifier","src":"4679:5:8"}]},{"nativeSrc":"4702:5:8","nodeType":"YulLeave","src":"4702:5:8"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4647:8:8","nodeType":"YulIdentifier","src":"4647:8:8"}],"functionName":{"name":"iszero","nativeSrc":"4640:6:8","nodeType":"YulIdentifier","src":"4640:6:8"},"nativeSrc":"4640:16:8","nodeType":"YulFunctionCall","src":"4640:16:8"},"nativeSrc":"4637:80:8","nodeType":"YulIf","src":"4637:80:8"},{"body":{"nativeSrc":"4750:52:8","nodeType":"YulBlock","src":"4750:52:8","statements":[{"nativeSrc":"4764:10:8","nodeType":"YulAssignment","src":"4764:10:8","value":{"kind":"number","nativeSrc":"4773:1:8","nodeType":"YulLiteral","src":"4773:1:8","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"4764:5:8","nodeType":"YulIdentifier","src":"4764:5:8"}]},{"nativeSrc":"4787:5:8","nodeType":"YulLeave","src":"4787:5:8"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4736:4:8","nodeType":"YulIdentifier","src":"4736:4:8"}],"functionName":{"name":"iszero","nativeSrc":"4729:6:8","nodeType":"YulIdentifier","src":"4729:6:8"},"nativeSrc":"4729:12:8","nodeType":"YulFunctionCall","src":"4729:12:8"},"nativeSrc":"4726:76:8","nodeType":"YulIf","src":"4726:76:8"},{"cases":[{"body":{"nativeSrc":"4838:52:8","nodeType":"YulBlock","src":"4838:52:8","statements":[{"nativeSrc":"4852:10:8","nodeType":"YulAssignment","src":"4852:10:8","value":{"kind":"number","nativeSrc":"4861:1:8","nodeType":"YulLiteral","src":"4861:1:8","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4852:5:8","nodeType":"YulIdentifier","src":"4852:5:8"}]},{"nativeSrc":"4875:5:8","nodeType":"YulLeave","src":"4875:5:8"}]},"nativeSrc":"4831:59:8","nodeType":"YulCase","src":"4831:59:8","value":{"kind":"number","nativeSrc":"4836:1:8","nodeType":"YulLiteral","src":"4836:1:8","type":"","value":"1"}},{"body":{"nativeSrc":"4906:167:8","nodeType":"YulBlock","src":"4906:167:8","statements":[{"body":{"nativeSrc":"4941:22:8","nodeType":"YulBlock","src":"4941:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4943:16:8","nodeType":"YulIdentifier","src":"4943:16:8"},"nativeSrc":"4943:18:8","nodeType":"YulFunctionCall","src":"4943:18:8"},"nativeSrc":"4943:18:8","nodeType":"YulExpressionStatement","src":"4943:18:8"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4926:8:8","nodeType":"YulIdentifier","src":"4926:8:8"},{"kind":"number","nativeSrc":"4936:3:8","nodeType":"YulLiteral","src":"4936:3:8","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"4923:2:8","nodeType":"YulIdentifier","src":"4923:2:8"},"nativeSrc":"4923:17:8","nodeType":"YulFunctionCall","src":"4923:17:8"},"nativeSrc":"4920:43:8","nodeType":"YulIf","src":"4920:43:8"},{"nativeSrc":"4976:25:8","nodeType":"YulAssignment","src":"4976:25:8","value":{"arguments":[{"name":"exponent","nativeSrc":"4989:8:8","nodeType":"YulIdentifier","src":"4989:8:8"},{"kind":"number","nativeSrc":"4999:1:8","nodeType":"YulLiteral","src":"4999:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4985:3:8","nodeType":"YulIdentifier","src":"4985:3:8"},"nativeSrc":"4985:16:8","nodeType":"YulFunctionCall","src":"4985:16:8"},"variableNames":[{"name":"power","nativeSrc":"4976:5:8","nodeType":"YulIdentifier","src":"4976:5:8"}]},{"nativeSrc":"5014:11:8","nodeType":"YulVariableDeclaration","src":"5014:11:8","value":{"kind":"number","nativeSrc":"5024:1:8","nodeType":"YulLiteral","src":"5024:1:8","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"5018:2:8","nodeType":"YulTypedName","src":"5018:2:8","type":""}]},{"nativeSrc":"5038:7:8","nodeType":"YulAssignment","src":"5038:7:8","value":{"kind":"number","nativeSrc":"5044:1:8","nodeType":"YulLiteral","src":"5044:1:8","type":"","value":"0"},"variableNames":[{"name":"_1","nativeSrc":"5038:2:8","nodeType":"YulIdentifier","src":"5038:2:8"}]},{"nativeSrc":"5058:5:8","nodeType":"YulLeave","src":"5058:5:8"}]},"nativeSrc":"4899:174:8","nodeType":"YulCase","src":"4899:174:8","value":{"kind":"number","nativeSrc":"4904:1:8","nodeType":"YulLiteral","src":"4904:1:8","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"4818:4:8","nodeType":"YulIdentifier","src":"4818:4:8"},"nativeSrc":"4811:262:8","nodeType":"YulSwitch","src":"4811:262:8"},{"body":{"nativeSrc":"5171:114:8","nodeType":"YulBlock","src":"5171:114:8","statements":[{"nativeSrc":"5185:28:8","nodeType":"YulAssignment","src":"5185:28:8","value":{"arguments":[{"name":"base","nativeSrc":"5198:4:8","nodeType":"YulIdentifier","src":"5198:4:8"},{"name":"exponent","nativeSrc":"5204:8:8","nodeType":"YulIdentifier","src":"5204:8:8"}],"functionName":{"name":"exp","nativeSrc":"5194:3:8","nodeType":"YulIdentifier","src":"5194:3:8"},"nativeSrc":"5194:19:8","nodeType":"YulFunctionCall","src":"5194:19:8"},"variableNames":[{"name":"power","nativeSrc":"5185:5:8","nodeType":"YulIdentifier","src":"5185:5:8"}]},{"nativeSrc":"5226:11:8","nodeType":"YulVariableDeclaration","src":"5226:11:8","value":{"kind":"number","nativeSrc":"5236:1:8","nodeType":"YulLiteral","src":"5236:1:8","type":"","value":"0"},"variables":[{"name":"_2","nativeSrc":"5230:2:8","nodeType":"YulTypedName","src":"5230:2:8","type":""}]},{"nativeSrc":"5250:7:8","nodeType":"YulAssignment","src":"5250:7:8","value":{"kind":"number","nativeSrc":"5256:1:8","nodeType":"YulLiteral","src":"5256:1:8","type":"","value":"0"},"variableNames":[{"name":"_2","nativeSrc":"5250:2:8","nodeType":"YulIdentifier","src":"5250:2:8"}]},{"nativeSrc":"5270:5:8","nodeType":"YulLeave","src":"5270:5:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5095:4:8","nodeType":"YulIdentifier","src":"5095:4:8"},{"kind":"number","nativeSrc":"5101:2:8","nodeType":"YulLiteral","src":"5101:2:8","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"5092:2:8","nodeType":"YulIdentifier","src":"5092:2:8"},"nativeSrc":"5092:12:8","nodeType":"YulFunctionCall","src":"5092:12:8"},{"arguments":[{"name":"exponent","nativeSrc":"5109:8:8","nodeType":"YulIdentifier","src":"5109:8:8"},{"kind":"number","nativeSrc":"5119:2:8","nodeType":"YulLiteral","src":"5119:2:8","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"5106:2:8","nodeType":"YulIdentifier","src":"5106:2:8"},"nativeSrc":"5106:16:8","nodeType":"YulFunctionCall","src":"5106:16:8"}],"functionName":{"name":"and","nativeSrc":"5088:3:8","nodeType":"YulIdentifier","src":"5088:3:8"},"nativeSrc":"5088:35:8","nodeType":"YulFunctionCall","src":"5088:35:8"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5132:4:8","nodeType":"YulIdentifier","src":"5132:4:8"},{"kind":"number","nativeSrc":"5138:3:8","nodeType":"YulLiteral","src":"5138:3:8","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"5129:2:8","nodeType":"YulIdentifier","src":"5129:2:8"},"nativeSrc":"5129:13:8","nodeType":"YulFunctionCall","src":"5129:13:8"},{"arguments":[{"name":"exponent","nativeSrc":"5147:8:8","nodeType":"YulIdentifier","src":"5147:8:8"},{"kind":"number","nativeSrc":"5157:2:8","nodeType":"YulLiteral","src":"5157:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5144:2:8","nodeType":"YulIdentifier","src":"5144:2:8"},"nativeSrc":"5144:16:8","nodeType":"YulFunctionCall","src":"5144:16:8"}],"functionName":{"name":"and","nativeSrc":"5125:3:8","nodeType":"YulIdentifier","src":"5125:3:8"},"nativeSrc":"5125:36:8","nodeType":"YulFunctionCall","src":"5125:36:8"}],"functionName":{"name":"or","nativeSrc":"5085:2:8","nodeType":"YulIdentifier","src":"5085:2:8"},"nativeSrc":"5085:77:8","nodeType":"YulFunctionCall","src":"5085:77:8"},"nativeSrc":"5082:203:8","nodeType":"YulIf","src":"5082:203:8"},{"nativeSrc":"5294:65:8","nodeType":"YulVariableDeclaration","src":"5294:65:8","value":{"arguments":[{"name":"base","nativeSrc":"5336:4:8","nodeType":"YulIdentifier","src":"5336:4:8"},{"name":"exponent","nativeSrc":"5342:8:8","nodeType":"YulIdentifier","src":"5342:8:8"},{"arguments":[{"kind":"number","nativeSrc":"5356:1:8","nodeType":"YulLiteral","src":"5356:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5352:3:8","nodeType":"YulIdentifier","src":"5352:3:8"},"nativeSrc":"5352:6:8","nodeType":"YulFunctionCall","src":"5352:6:8"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"5317:18:8","nodeType":"YulIdentifier","src":"5317:18:8"},"nativeSrc":"5317:42:8","nodeType":"YulFunctionCall","src":"5317:42:8"},"variables":[{"name":"power_1","nativeSrc":"5298:7:8","nodeType":"YulTypedName","src":"5298:7:8","type":""},{"name":"base_1","nativeSrc":"5307:6:8","nodeType":"YulTypedName","src":"5307:6:8","type":""}]},{"body":{"nativeSrc":"5404:22:8","nodeType":"YulBlock","src":"5404:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5406:16:8","nodeType":"YulIdentifier","src":"5406:16:8"},"nativeSrc":"5406:18:8","nodeType":"YulFunctionCall","src":"5406:18:8"},"nativeSrc":"5406:18:8","nodeType":"YulExpressionStatement","src":"5406:18:8"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"5374:7:8","nodeType":"YulIdentifier","src":"5374:7:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5391:1:8","nodeType":"YulLiteral","src":"5391:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5387:3:8","nodeType":"YulIdentifier","src":"5387:3:8"},"nativeSrc":"5387:6:8","nodeType":"YulFunctionCall","src":"5387:6:8"},{"name":"base_1","nativeSrc":"5395:6:8","nodeType":"YulIdentifier","src":"5395:6:8"}],"functionName":{"name":"div","nativeSrc":"5383:3:8","nodeType":"YulIdentifier","src":"5383:3:8"},"nativeSrc":"5383:19:8","nodeType":"YulFunctionCall","src":"5383:19:8"}],"functionName":{"name":"gt","nativeSrc":"5371:2:8","nodeType":"YulIdentifier","src":"5371:2:8"},"nativeSrc":"5371:32:8","nodeType":"YulFunctionCall","src":"5371:32:8"},"nativeSrc":"5368:58:8","nodeType":"YulIf","src":"5368:58:8"},{"nativeSrc":"5435:29:8","nodeType":"YulAssignment","src":"5435:29:8","value":{"arguments":[{"name":"power_1","nativeSrc":"5448:7:8","nodeType":"YulIdentifier","src":"5448:7:8"},{"name":"base_1","nativeSrc":"5457:6:8","nodeType":"YulIdentifier","src":"5457:6:8"}],"functionName":{"name":"mul","nativeSrc":"5444:3:8","nodeType":"YulIdentifier","src":"5444:3:8"},"nativeSrc":"5444:20:8","nodeType":"YulFunctionCall","src":"5444:20:8"},"variableNames":[{"name":"power","nativeSrc":"5435:5:8","nodeType":"YulIdentifier","src":"5435:5:8"}]}]},"name":"checked_exp_unsigned","nativeSrc":"4568:902:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4598:4:8","nodeType":"YulTypedName","src":"4598:4:8","type":""},{"name":"exponent","nativeSrc":"4604:8:8","nodeType":"YulTypedName","src":"4604:8:8","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4617:5:8","nodeType":"YulTypedName","src":"4617:5:8","type":""}],"src":"4568:902:8"},{"body":{"nativeSrc":"5543:72:8","nodeType":"YulBlock","src":"5543:72:8","statements":[{"nativeSrc":"5553:56:8","nodeType":"YulAssignment","src":"5553:56:8","value":{"arguments":[{"name":"base","nativeSrc":"5583:4:8","nodeType":"YulIdentifier","src":"5583:4:8"},{"arguments":[{"name":"exponent","nativeSrc":"5593:8:8","nodeType":"YulIdentifier","src":"5593:8:8"},{"kind":"number","nativeSrc":"5603:4:8","nodeType":"YulLiteral","src":"5603:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5589:3:8","nodeType":"YulIdentifier","src":"5589:3:8"},"nativeSrc":"5589:19:8","nodeType":"YulFunctionCall","src":"5589:19:8"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"5562:20:8","nodeType":"YulIdentifier","src":"5562:20:8"},"nativeSrc":"5562:47:8","nodeType":"YulFunctionCall","src":"5562:47:8"},"variableNames":[{"name":"power","nativeSrc":"5553:5:8","nodeType":"YulIdentifier","src":"5553:5:8"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"5475:140:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"5514:4:8","nodeType":"YulTypedName","src":"5514:4:8","type":""},{"name":"exponent","nativeSrc":"5520:8:8","nodeType":"YulTypedName","src":"5520:8:8","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5533:5:8","nodeType":"YulTypedName","src":"5533:5:8","type":""}],"src":"5475:140:8"},{"body":{"nativeSrc":"5672:116:8","nodeType":"YulBlock","src":"5672:116:8","statements":[{"nativeSrc":"5682:20:8","nodeType":"YulAssignment","src":"5682:20:8","value":{"arguments":[{"name":"x","nativeSrc":"5697:1:8","nodeType":"YulIdentifier","src":"5697:1:8"},{"name":"y","nativeSrc":"5700:1:8","nodeType":"YulIdentifier","src":"5700:1:8"}],"functionName":{"name":"mul","nativeSrc":"5693:3:8","nodeType":"YulIdentifier","src":"5693:3:8"},"nativeSrc":"5693:9:8","nodeType":"YulFunctionCall","src":"5693:9:8"},"variableNames":[{"name":"product","nativeSrc":"5682:7:8","nodeType":"YulIdentifier","src":"5682:7:8"}]},{"body":{"nativeSrc":"5760:22:8","nodeType":"YulBlock","src":"5760:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5762:16:8","nodeType":"YulIdentifier","src":"5762:16:8"},"nativeSrc":"5762:18:8","nodeType":"YulFunctionCall","src":"5762:18:8"},"nativeSrc":"5762:18:8","nodeType":"YulExpressionStatement","src":"5762:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"5731:1:8","nodeType":"YulIdentifier","src":"5731:1:8"}],"functionName":{"name":"iszero","nativeSrc":"5724:6:8","nodeType":"YulIdentifier","src":"5724:6:8"},"nativeSrc":"5724:9:8","nodeType":"YulFunctionCall","src":"5724:9:8"},{"arguments":[{"name":"y","nativeSrc":"5738:1:8","nodeType":"YulIdentifier","src":"5738:1:8"},{"arguments":[{"name":"product","nativeSrc":"5745:7:8","nodeType":"YulIdentifier","src":"5745:7:8"},{"name":"x","nativeSrc":"5754:1:8","nodeType":"YulIdentifier","src":"5754:1:8"}],"functionName":{"name":"div","nativeSrc":"5741:3:8","nodeType":"YulIdentifier","src":"5741:3:8"},"nativeSrc":"5741:15:8","nodeType":"YulFunctionCall","src":"5741:15:8"}],"functionName":{"name":"eq","nativeSrc":"5735:2:8","nodeType":"YulIdentifier","src":"5735:2:8"},"nativeSrc":"5735:22:8","nodeType":"YulFunctionCall","src":"5735:22:8"}],"functionName":{"name":"or","nativeSrc":"5721:2:8","nodeType":"YulIdentifier","src":"5721:2:8"},"nativeSrc":"5721:37:8","nodeType":"YulFunctionCall","src":"5721:37:8"}],"functionName":{"name":"iszero","nativeSrc":"5714:6:8","nodeType":"YulIdentifier","src":"5714:6:8"},"nativeSrc":"5714:45:8","nodeType":"YulFunctionCall","src":"5714:45:8"},"nativeSrc":"5711:71:8","nodeType":"YulIf","src":"5711:71:8"}]},"name":"checked_mul_t_uint256","nativeSrc":"5620:168:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5651:1:8","nodeType":"YulTypedName","src":"5651:1:8","type":""},{"name":"y","nativeSrc":"5654:1:8","nodeType":"YulTypedName","src":"5654:1:8","type":""}],"returnVariables":[{"name":"product","nativeSrc":"5660:7:8","nodeType":"YulTypedName","src":"5660:7:8","type":""}],"src":"5620:168:8"},{"body":{"nativeSrc":"5894:102:8","nodeType":"YulBlock","src":"5894:102:8","statements":[{"nativeSrc":"5904:26:8","nodeType":"YulAssignment","src":"5904:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5916:9:8","nodeType":"YulIdentifier","src":"5916:9:8"},{"kind":"number","nativeSrc":"5927:2:8","nodeType":"YulLiteral","src":"5927:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5912:3:8","nodeType":"YulIdentifier","src":"5912:3:8"},"nativeSrc":"5912:18:8","nodeType":"YulFunctionCall","src":"5912:18:8"},"variableNames":[{"name":"tail","nativeSrc":"5904:4:8","nodeType":"YulIdentifier","src":"5904:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5946:9:8","nodeType":"YulIdentifier","src":"5946:9:8"},{"arguments":[{"name":"value0","nativeSrc":"5961:6:8","nodeType":"YulIdentifier","src":"5961:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5977:3:8","nodeType":"YulLiteral","src":"5977:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"5982:1:8","nodeType":"YulLiteral","src":"5982:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5973:3:8","nodeType":"YulIdentifier","src":"5973:3:8"},"nativeSrc":"5973:11:8","nodeType":"YulFunctionCall","src":"5973:11:8"},{"kind":"number","nativeSrc":"5986:1:8","nodeType":"YulLiteral","src":"5986:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5969:3:8","nodeType":"YulIdentifier","src":"5969:3:8"},"nativeSrc":"5969:19:8","nodeType":"YulFunctionCall","src":"5969:19:8"}],"functionName":{"name":"and","nativeSrc":"5957:3:8","nodeType":"YulIdentifier","src":"5957:3:8"},"nativeSrc":"5957:32:8","nodeType":"YulFunctionCall","src":"5957:32:8"}],"functionName":{"name":"mstore","nativeSrc":"5939:6:8","nodeType":"YulIdentifier","src":"5939:6:8"},"nativeSrc":"5939:51:8","nodeType":"YulFunctionCall","src":"5939:51:8"},"nativeSrc":"5939:51:8","nodeType":"YulExpressionStatement","src":"5939:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5793:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5863:9:8","nodeType":"YulTypedName","src":"5863:9:8","type":""},{"name":"value0","nativeSrc":"5874:6:8","nodeType":"YulTypedName","src":"5874:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5885:4:8","nodeType":"YulTypedName","src":"5885:4:8","type":""}],"src":"5793:203:8"},{"body":{"nativeSrc":"6049:77:8","nodeType":"YulBlock","src":"6049:77:8","statements":[{"nativeSrc":"6059:16:8","nodeType":"YulAssignment","src":"6059:16:8","value":{"arguments":[{"name":"x","nativeSrc":"6070:1:8","nodeType":"YulIdentifier","src":"6070:1:8"},{"name":"y","nativeSrc":"6073:1:8","nodeType":"YulIdentifier","src":"6073:1:8"}],"functionName":{"name":"add","nativeSrc":"6066:3:8","nodeType":"YulIdentifier","src":"6066:3:8"},"nativeSrc":"6066:9:8","nodeType":"YulFunctionCall","src":"6066:9:8"},"variableNames":[{"name":"sum","nativeSrc":"6059:3:8","nodeType":"YulIdentifier","src":"6059:3:8"}]},{"body":{"nativeSrc":"6098:22:8","nodeType":"YulBlock","src":"6098:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6100:16:8","nodeType":"YulIdentifier","src":"6100:16:8"},"nativeSrc":"6100:18:8","nodeType":"YulFunctionCall","src":"6100:18:8"},"nativeSrc":"6100:18:8","nodeType":"YulExpressionStatement","src":"6100:18:8"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6090:1:8","nodeType":"YulIdentifier","src":"6090:1:8"},{"name":"sum","nativeSrc":"6093:3:8","nodeType":"YulIdentifier","src":"6093:3:8"}],"functionName":{"name":"gt","nativeSrc":"6087:2:8","nodeType":"YulIdentifier","src":"6087:2:8"},"nativeSrc":"6087:10:8","nodeType":"YulFunctionCall","src":"6087:10:8"},"nativeSrc":"6084:36:8","nodeType":"YulIf","src":"6084:36:8"}]},"name":"checked_add_t_uint256","nativeSrc":"6001:125:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6032:1:8","nodeType":"YulTypedName","src":"6032:1:8","type":""},{"name":"y","nativeSrc":"6035:1:8","nodeType":"YulTypedName","src":"6035:1:8","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6041:3:8","nodeType":"YulTypedName","src":"6041:3:8","type":""}],"src":"6001:125:8"},{"body":{"nativeSrc":"6288:188:8","nodeType":"YulBlock","src":"6288:188:8","statements":[{"nativeSrc":"6298:26:8","nodeType":"YulAssignment","src":"6298:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"6310:9:8","nodeType":"YulIdentifier","src":"6310:9:8"},{"kind":"number","nativeSrc":"6321:2:8","nodeType":"YulLiteral","src":"6321:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6306:3:8","nodeType":"YulIdentifier","src":"6306:3:8"},"nativeSrc":"6306:18:8","nodeType":"YulFunctionCall","src":"6306:18:8"},"variableNames":[{"name":"tail","nativeSrc":"6298:4:8","nodeType":"YulIdentifier","src":"6298:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6340:9:8","nodeType":"YulIdentifier","src":"6340:9:8"},{"arguments":[{"name":"value0","nativeSrc":"6355:6:8","nodeType":"YulIdentifier","src":"6355:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6371:3:8","nodeType":"YulLiteral","src":"6371:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"6376:1:8","nodeType":"YulLiteral","src":"6376:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6367:3:8","nodeType":"YulIdentifier","src":"6367:3:8"},"nativeSrc":"6367:11:8","nodeType":"YulFunctionCall","src":"6367:11:8"},{"kind":"number","nativeSrc":"6380:1:8","nodeType":"YulLiteral","src":"6380:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6363:3:8","nodeType":"YulIdentifier","src":"6363:3:8"},"nativeSrc":"6363:19:8","nodeType":"YulFunctionCall","src":"6363:19:8"}],"functionName":{"name":"and","nativeSrc":"6351:3:8","nodeType":"YulIdentifier","src":"6351:3:8"},"nativeSrc":"6351:32:8","nodeType":"YulFunctionCall","src":"6351:32:8"}],"functionName":{"name":"mstore","nativeSrc":"6333:6:8","nodeType":"YulIdentifier","src":"6333:6:8"},"nativeSrc":"6333:51:8","nodeType":"YulFunctionCall","src":"6333:51:8"},"nativeSrc":"6333:51:8","nodeType":"YulExpressionStatement","src":"6333:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6404:9:8","nodeType":"YulIdentifier","src":"6404:9:8"},{"kind":"number","nativeSrc":"6415:2:8","nodeType":"YulLiteral","src":"6415:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6400:3:8","nodeType":"YulIdentifier","src":"6400:3:8"},"nativeSrc":"6400:18:8","nodeType":"YulFunctionCall","src":"6400:18:8"},{"name":"value1","nativeSrc":"6420:6:8","nodeType":"YulIdentifier","src":"6420:6:8"}],"functionName":{"name":"mstore","nativeSrc":"6393:6:8","nodeType":"YulIdentifier","src":"6393:6:8"},"nativeSrc":"6393:34:8","nodeType":"YulFunctionCall","src":"6393:34:8"},"nativeSrc":"6393:34:8","nodeType":"YulExpressionStatement","src":"6393:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6447:9:8","nodeType":"YulIdentifier","src":"6447:9:8"},{"kind":"number","nativeSrc":"6458:2:8","nodeType":"YulLiteral","src":"6458:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6443:3:8","nodeType":"YulIdentifier","src":"6443:3:8"},"nativeSrc":"6443:18:8","nodeType":"YulFunctionCall","src":"6443:18:8"},{"name":"value2","nativeSrc":"6463:6:8","nodeType":"YulIdentifier","src":"6463:6:8"}],"functionName":{"name":"mstore","nativeSrc":"6436:6:8","nodeType":"YulIdentifier","src":"6436:6:8"},"nativeSrc":"6436:34:8","nodeType":"YulFunctionCall","src":"6436:34:8"},"nativeSrc":"6436:34:8","nodeType":"YulExpressionStatement","src":"6436:34:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6131:345:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6241:9:8","nodeType":"YulTypedName","src":"6241:9:8","type":""},{"name":"value2","nativeSrc":"6252:6:8","nodeType":"YulTypedName","src":"6252:6:8","type":""},{"name":"value1","nativeSrc":"6260:6:8","nodeType":"YulTypedName","src":"6260:6:8","type":""},{"name":"value0","nativeSrc":"6268:6:8","nodeType":"YulTypedName","src":"6268:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6279:4:8","nodeType":"YulTypedName","src":"6279:4:8","type":""}],"src":"6131:345:8"},{"body":{"nativeSrc":"6582:76:8","nodeType":"YulBlock","src":"6582:76:8","statements":[{"nativeSrc":"6592:26:8","nodeType":"YulAssignment","src":"6592:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"6604:9:8","nodeType":"YulIdentifier","src":"6604:9:8"},{"kind":"number","nativeSrc":"6615:2:8","nodeType":"YulLiteral","src":"6615:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6600:3:8","nodeType":"YulIdentifier","src":"6600:3:8"},"nativeSrc":"6600:18:8","nodeType":"YulFunctionCall","src":"6600:18:8"},"variableNames":[{"name":"tail","nativeSrc":"6592:4:8","nodeType":"YulIdentifier","src":"6592:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6634:9:8","nodeType":"YulIdentifier","src":"6634:9:8"},{"name":"value0","nativeSrc":"6645:6:8","nodeType":"YulIdentifier","src":"6645:6:8"}],"functionName":{"name":"mstore","nativeSrc":"6627:6:8","nodeType":"YulIdentifier","src":"6627:6:8"},"nativeSrc":"6627:25:8","nodeType":"YulFunctionCall","src":"6627:25:8"},"nativeSrc":"6627:25:8","nodeType":"YulExpressionStatement","src":"6627:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6481:177:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6551:9:8","nodeType":"YulTypedName","src":"6551:9:8","type":""},{"name":"value0","nativeSrc":"6562:6:8","nodeType":"YulTypedName","src":"6562:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6573:4:8","nodeType":"YulTypedName","src":"6573:4:8","type":""}],"src":"6481:177:8"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610dbb380380610dbb83398101604081905261002f916102b2565b8181600361003d83826103a4565b50600461004a82826103a4565b5050600580546001600160a01b03191633908117909155610089915061006e601290565b61007990600a610561565b610084906005610577565b610090565b50506105a1565b6001600160a01b0382166100bf5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100cb600083836100cf565b5050565b6001600160a01b0383166100fa5780600260008282546100ef919061058e565b9091555061016c9050565b6001600160a01b0383166000908152602081905260409020548181101561014d5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610188576002805482900390556101a7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101ec91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261022057600080fd5b81516001600160401b03811115610239576102396101f9565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610267576102676101f9565b60405281815283820160200185101561027f57600080fd5b60005b8281101561029e57602081860181015183830182015201610282565b506000918101602001919091529392505050565b600080604083850312156102c557600080fd5b82516001600160401b038111156102db57600080fd5b6102e78582860161020f565b602085015190935090506001600160401b0381111561030557600080fd5b6103118582860161020f565b9150509250929050565b600181811c9082168061032f57607f821691505b60208210810361034f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561039f57806000526020600020601f840160051c8101602085101561037c5750805b601f840160051c820191505b8181101561039c5760008155600101610388565b50505b505050565b81516001600160401b038111156103bd576103bd6101f9565b6103d1816103cb845461031b565b84610355565b6020601f82116001811461040557600083156103ed5750848201515b600019600385901b1c1916600184901b17845561039c565b600084815260208120601f198516915b828110156104355787850151825560209485019460019092019101610415565b50848210156104535786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156104b35780850481111561049757610497610462565b60018416156104a557908102905b60019390931c92800261047c565b935093915050565b6000826104ca5750600161055b565b816104d75750600061055b565b81600181146104ed57600281146104f757610513565b600191505061055b565b60ff84111561050857610508610462565b50506001821b61055b565b5060208310610133831016604e8410600b8410161715610536575081810a61055b565b6105436000198484610478565b806000190482111561055757610557610462565b0290505b92915050565b600061057060ff8416836104bb565b9392505050565b808202811582820484141761055b5761055b610462565b8082018082111561055b5761055b610462565b61080b806105b06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063dd62ed3e1461017c578063f851a440146101b557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101e0565b6040516100c39190610654565b60405180910390f35b6100df6100da3660046106be565b610272565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106e8565b61028c565b604051601281526020016100c3565b6101366101313660046106be565b6102b0565b005b6100f3610146366004610725565b6001600160a01b031660009081526020819052604090205490565b6100b6610313565b6100df6101773660046106be565b610322565b6100f361018a366004610747565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546101c8906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6060600380546101ef9061077a565b80601f016020809104026020016040519081016040528092919081815260200182805461021b9061077a565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b5050505050905090565b600033610280818585610330565b60019150505b92915050565b60003361029a858285610342565b6102a58585856103c0565b506001949350505050565b6005546001600160a01b031633146103055760405162461bcd60e51b815260206004820152601360248201527213db9b1e4818591b5a5b8818d85b881b5a5b9d606a1b60448201526064015b60405180910390fd5b61030f828261041f565b5050565b6060600480546101ef9061077a565b6000336102808185856103c0565b61033d8383836001610455565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146103ba57818110156103ab57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102fc565b6103ba84848484036000610455565b50505050565b6001600160a01b0383166103ea57604051634b637e8f60e11b8152600060048201526024016102fc565b6001600160a01b0382166104145760405163ec442f0560e01b8152600060048201526024016102fc565b61033d83838361052a565b6001600160a01b0382166104495760405163ec442f0560e01b8152600060048201526024016102fc565b61030f6000838361052a565b6001600160a01b03841661047f5760405163e602df0560e01b8152600060048201526024016102fc565b6001600160a01b0383166104a957604051634a1406b160e11b8152600060048201526024016102fc565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103ba57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051c91815260200190565b60405180910390a350505050565b6001600160a01b03831661055557806002600082825461054a91906107b4565b909155506105c79050565b6001600160a01b038316600090815260208190526040902054818110156105a85760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102fc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105e357600280548290039055610602565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161064791815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106825760208186018101516040868401015201610665565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106b957600080fd5b919050565b600080604083850312156106d157600080fd5b6106da836106a2565b946020939093013593505050565b6000806000606084860312156106fd57600080fd5b610706846106a2565b9250610714602085016106a2565b929592945050506040919091013590565b60006020828403121561073757600080fd5b610740826106a2565b9392505050565b6000806040838503121561075a57600080fd5b610763836106a2565b9150610771602084016106a2565b90509250929050565b600181811c9082168061078e57607f821691505b6020821081036107ae57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028657634e487b7160e01b600052601160045260246000fdfea26469706673582212200675f60fada82e6e7d0f9411f4a59141009c270e07d6425ae0f7d83be816a4da64736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDBB CODESIZE SUB DUP1 PUSH2 0xDBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x2B2 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x3A4 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x3A4 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x89 SWAP2 POP PUSH2 0x6E PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x79 SWAP1 PUSH1 0xA PUSH2 0x561 JUMP JUMPDEST PUSH2 0x84 SWAP1 PUSH1 0x5 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x90 JUMP JUMPDEST POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB PUSH1 0x0 DUP4 DUP4 PUSH2 0xCF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFA JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x188 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x239 JUMPI PUSH2 0x239 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x267 JUMPI PUSH2 0x267 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x282 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E7 DUP6 DUP3 DUP7 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x311 DUP6 DUP3 DUP7 ADD PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x32F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x34F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x388 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BD PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3CB DUP5 SLOAD PUSH2 0x31B JUMP JUMPDEST DUP5 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x3ED JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x435 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x415 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x453 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4B3 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x4A5 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x47C JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4CA JUMPI POP PUSH1 0x1 PUSH2 0x55B JUMP JUMPDEST DUP2 PUSH2 0x4D7 JUMPI POP PUSH1 0x0 PUSH2 0x55B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4ED JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4F7 JUMPI PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x55B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0x462 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x55B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x536 JUMPI POP DUP2 DUP2 EXP PUSH2 0x55B JUMP JUMPDEST PUSH2 0x543 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x478 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x462 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x55B JUMPI PUSH2 0x55B PUSH2 0x462 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x55B JUMPI PUSH2 0x55B PUSH2 0x462 JUMP JUMPDEST PUSH2 0x80B DUP1 PUSH2 0x5B0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x77A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0x77A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x268 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x280 DUP2 DUP6 DUP6 PUSH2 0x330 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29A DUP6 DUP3 DUP6 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x2A5 DUP6 DUP6 DUP6 PUSH2 0x3C0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DB9B1E4818591B5A5B8818D85B881B5A5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F DUP3 DUP3 PUSH2 0x41F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x280 DUP2 DUP6 DUP6 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x33D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x455 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3BA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3BA DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x455 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x33D DUP4 DUP4 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x30F PUSH1 0x0 DUP4 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3BA JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x555 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5C7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x682 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x665 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DA DUP4 PUSH2 0x6A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x706 DUP5 PUSH2 0x6A2 JUMP JUMPDEST SWAP3 POP PUSH2 0x714 PUSH1 0x20 DUP6 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x740 DUP3 PUSH2 0x6A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x6A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x771 PUSH1 0x20 DUP5 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x78E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x286 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH22 0xF60FADA82E6E7D0F9411F4A59141009C270E07D6425A 0xE0 0xF7 0xD8 EXTCODESIZE 0xE8 AND LOG4 0xDA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"85:416:6:-:0;;;152:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;212:4;218:6;1962:5:1;:13;212:4:6;1962:5:1;:13;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;237:5:6::1;:18:::0;;-1:-1:-1;;;;;;237:18:6::1;245:10;237:18:::0;;::::1;::::0;;;266:34:::1;::::0;-1:-1:-1;289:10:6::1;3075:2:1::0;;3002:82;289:10:6::1;283:16;::::0;:2:::1;:16;:::i;:::-;279:20;::::0;:1:::1;:20;:::i;:::-;266:5;:34::i;:::-;152:189:::0;;85:416;;7721:208:1;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;5939:51:8;5912:18;;7835:32:1;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;6351:32:8;;6649:50:1;;;6333:51:8;6400:18;;;6393:34;;;6443:18;;;6436:34;;;6306:18;;6649:50:1;6131:345:8;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;6627::8;;6615:2;6600:18;;6481:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:8;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:8;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:8;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:8;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:8;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:8:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:8;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:8;-1:-1:-1;;;;;;1405:32:8;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:8;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:8;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:8;;;3901:26;3852:89;-1:-1:-1;;2709:1:8;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:8;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:8;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:8;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:8:o;4056:127::-;4117:10;4112:3;4108:20;4105:1;4098:31;4148:4;4145:1;4138:15;4172:4;4169:1;4162:15;4188:375;4276:1;4294:5;4308:249;4329:1;4319:8;4316:15;4308:249;;;4379:4;4374:3;4370:14;4364:4;4361:24;4358:50;;;4388:18;;:::i;:::-;4438:1;4428:8;4424:16;4421:49;;;4452:16;;;;4421:49;4535:1;4531:16;;;;;4491:15;;4308:249;;;4188:375;;;;;;:::o;4568:902::-;4617:5;4647:8;4637:80;;-1:-1:-1;4688:1:8;4702:5;;4637:80;4736:4;4726:76;;-1:-1:-1;4773:1:8;4787:5;;4726:76;4818:4;4836:1;4831:59;;;;4904:1;4899:174;;;;4811:262;;4831:59;4861:1;4852:10;;4875:5;;;4899:174;4936:3;4926:8;4923:17;4920:43;;;4943:18;;:::i;:::-;-1:-1:-1;;4999:1:8;4985:16;;5058:5;;4811:262;;5157:2;5147:8;5144:16;5138:3;5132:4;5129:13;5125:36;5119:2;5109:8;5106:16;5101:2;5095:4;5092:12;5088:35;5085:77;5082:203;;;-1:-1:-1;5194:19:8;;;5270:5;;5082:203;5317:42;-1:-1:-1;;5342:8:8;5336:4;5317:42;:::i;:::-;5395:6;5391:1;5387:6;5383:19;5374:7;5371:32;5368:58;;;5406:18;;:::i;:::-;5444:20;;-1:-1:-1;4568:902:8;;;;;:::o;5475:140::-;5533:5;5562:47;5603:4;5593:8;5589:19;5583:4;5562:47;:::i;:::-;5553:56;5475:140;-1:-1:-1;;;5475:140:8:o;5620:168::-;5693:9;;;5724;;5741:15;;;5735:22;;5721:37;5711:71;;5762:18;;:::i;6001:125::-;6066:9;;;6087:10;;;6084:36;;;6100:18;;:::i;6481:177::-;85:416:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":816,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":1109,"id":602,"parameterSlots":4,"returnSlots":0},"@_mint_491":{"entryPoint":1055,"id":491,"parameterSlots":2,"returnSlots":0},"@_msgSender_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":834,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":960,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":1322,"id":458,"parameterSlots":3,"returnSlots":0},"@admin_1039":{"entryPoint":null,"id":1039,"parameterSlots":0,"returnSlots":0},"@allowance_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":626,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":null,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"@mint_1087":{"entryPoint":688,"id":1087,"parameterSlots":2,"returnSlots":0},"@name_197":{"entryPoint":480,"id":197,"parameterSlots":0,"returnSlots":1},"@symbol_206":{"entryPoint":787,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":null,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":652,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":802,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1698,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1863,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1768,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1726,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d96500ea9414223520a8d18635edd40ec897fdcd23024884790a0352b17fef4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1972,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1914,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:3942:8","nodeType":"YulBlock","src":"0:3942:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"135:406:8","nodeType":"YulBlock","src":"135:406:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"152:9:8","nodeType":"YulIdentifier","src":"152:9:8"},{"kind":"number","nativeSrc":"163:2:8","nodeType":"YulLiteral","src":"163:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"145:6:8","nodeType":"YulIdentifier","src":"145:6:8"},"nativeSrc":"145:21:8","nodeType":"YulFunctionCall","src":"145:21:8"},"nativeSrc":"145:21:8","nodeType":"YulExpressionStatement","src":"145:21:8"},{"nativeSrc":"175:27:8","nodeType":"YulVariableDeclaration","src":"175:27:8","value":{"arguments":[{"name":"value0","nativeSrc":"195:6:8","nodeType":"YulIdentifier","src":"195:6:8"}],"functionName":{"name":"mload","nativeSrc":"189:5:8","nodeType":"YulIdentifier","src":"189:5:8"},"nativeSrc":"189:13:8","nodeType":"YulFunctionCall","src":"189:13:8"},"variables":[{"name":"length","nativeSrc":"179:6:8","nodeType":"YulTypedName","src":"179:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"222:9:8","nodeType":"YulIdentifier","src":"222:9:8"},{"kind":"number","nativeSrc":"233:2:8","nodeType":"YulLiteral","src":"233:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"218:3:8","nodeType":"YulIdentifier","src":"218:3:8"},"nativeSrc":"218:18:8","nodeType":"YulFunctionCall","src":"218:18:8"},{"name":"length","nativeSrc":"238:6:8","nodeType":"YulIdentifier","src":"238:6:8"}],"functionName":{"name":"mstore","nativeSrc":"211:6:8","nodeType":"YulIdentifier","src":"211:6:8"},"nativeSrc":"211:34:8","nodeType":"YulFunctionCall","src":"211:34:8"},"nativeSrc":"211:34:8","nodeType":"YulExpressionStatement","src":"211:34:8"},{"nativeSrc":"254:10:8","nodeType":"YulVariableDeclaration","src":"254:10:8","value":{"kind":"number","nativeSrc":"263:1:8","nodeType":"YulLiteral","src":"263:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"258:1:8","nodeType":"YulTypedName","src":"258:1:8","type":""}]},{"body":{"nativeSrc":"323:90:8","nodeType":"YulBlock","src":"323:90:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"352:9:8","nodeType":"YulIdentifier","src":"352:9:8"},{"name":"i","nativeSrc":"363:1:8","nodeType":"YulIdentifier","src":"363:1:8"}],"functionName":{"name":"add","nativeSrc":"348:3:8","nodeType":"YulIdentifier","src":"348:3:8"},"nativeSrc":"348:17:8","nodeType":"YulFunctionCall","src":"348:17:8"},{"kind":"number","nativeSrc":"367:2:8","nodeType":"YulLiteral","src":"367:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"344:3:8","nodeType":"YulIdentifier","src":"344:3:8"},"nativeSrc":"344:26:8","nodeType":"YulFunctionCall","src":"344:26:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"386:6:8","nodeType":"YulIdentifier","src":"386:6:8"},{"name":"i","nativeSrc":"394:1:8","nodeType":"YulIdentifier","src":"394:1:8"}],"functionName":{"name":"add","nativeSrc":"382:3:8","nodeType":"YulIdentifier","src":"382:3:8"},"nativeSrc":"382:14:8","nodeType":"YulFunctionCall","src":"382:14:8"},{"kind":"number","nativeSrc":"398:2:8","nodeType":"YulLiteral","src":"398:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"378:3:8","nodeType":"YulIdentifier","src":"378:3:8"},"nativeSrc":"378:23:8","nodeType":"YulFunctionCall","src":"378:23:8"}],"functionName":{"name":"mload","nativeSrc":"372:5:8","nodeType":"YulIdentifier","src":"372:5:8"},"nativeSrc":"372:30:8","nodeType":"YulFunctionCall","src":"372:30:8"}],"functionName":{"name":"mstore","nativeSrc":"337:6:8","nodeType":"YulIdentifier","src":"337:6:8"},"nativeSrc":"337:66:8","nodeType":"YulFunctionCall","src":"337:66:8"},"nativeSrc":"337:66:8","nodeType":"YulExpressionStatement","src":"337:66:8"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"284:1:8","nodeType":"YulIdentifier","src":"284:1:8"},{"name":"length","nativeSrc":"287:6:8","nodeType":"YulIdentifier","src":"287:6:8"}],"functionName":{"name":"lt","nativeSrc":"281:2:8","nodeType":"YulIdentifier","src":"281:2:8"},"nativeSrc":"281:13:8","nodeType":"YulFunctionCall","src":"281:13:8"},"nativeSrc":"273:140:8","nodeType":"YulForLoop","post":{"nativeSrc":"295:19:8","nodeType":"YulBlock","src":"295:19:8","statements":[{"nativeSrc":"297:15:8","nodeType":"YulAssignment","src":"297:15:8","value":{"arguments":[{"name":"i","nativeSrc":"306:1:8","nodeType":"YulIdentifier","src":"306:1:8"},{"kind":"number","nativeSrc":"309:2:8","nodeType":"YulLiteral","src":"309:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"302:3:8","nodeType":"YulIdentifier","src":"302:3:8"},"nativeSrc":"302:10:8","nodeType":"YulFunctionCall","src":"302:10:8"},"variableNames":[{"name":"i","nativeSrc":"297:1:8","nodeType":"YulIdentifier","src":"297:1:8"}]}]},"pre":{"nativeSrc":"277:3:8","nodeType":"YulBlock","src":"277:3:8","statements":[]},"src":"273:140:8"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"437:9:8","nodeType":"YulIdentifier","src":"437:9:8"},{"name":"length","nativeSrc":"448:6:8","nodeType":"YulIdentifier","src":"448:6:8"}],"functionName":{"name":"add","nativeSrc":"433:3:8","nodeType":"YulIdentifier","src":"433:3:8"},"nativeSrc":"433:22:8","nodeType":"YulFunctionCall","src":"433:22:8"},{"kind":"number","nativeSrc":"457:2:8","nodeType":"YulLiteral","src":"457:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"429:3:8","nodeType":"YulIdentifier","src":"429:3:8"},"nativeSrc":"429:31:8","nodeType":"YulFunctionCall","src":"429:31:8"},{"kind":"number","nativeSrc":"462:1:8","nodeType":"YulLiteral","src":"462:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"422:6:8","nodeType":"YulIdentifier","src":"422:6:8"},"nativeSrc":"422:42:8","nodeType":"YulFunctionCall","src":"422:42:8"},"nativeSrc":"422:42:8","nodeType":"YulExpressionStatement","src":"422:42:8"},{"nativeSrc":"473:62:8","nodeType":"YulAssignment","src":"473:62:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"489:9:8","nodeType":"YulIdentifier","src":"489:9:8"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"508:6:8","nodeType":"YulIdentifier","src":"508:6:8"},{"kind":"number","nativeSrc":"516:2:8","nodeType":"YulLiteral","src":"516:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"504:3:8","nodeType":"YulIdentifier","src":"504:3:8"},"nativeSrc":"504:15:8","nodeType":"YulFunctionCall","src":"504:15:8"},{"arguments":[{"kind":"number","nativeSrc":"525:2:8","nodeType":"YulLiteral","src":"525:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"521:3:8","nodeType":"YulIdentifier","src":"521:3:8"},"nativeSrc":"521:7:8","nodeType":"YulFunctionCall","src":"521:7:8"}],"functionName":{"name":"and","nativeSrc":"500:3:8","nodeType":"YulIdentifier","src":"500:3:8"},"nativeSrc":"500:29:8","nodeType":"YulFunctionCall","src":"500:29:8"}],"functionName":{"name":"add","nativeSrc":"485:3:8","nodeType":"YulIdentifier","src":"485:3:8"},"nativeSrc":"485:45:8","nodeType":"YulFunctionCall","src":"485:45:8"},{"kind":"number","nativeSrc":"532:2:8","nodeType":"YulLiteral","src":"532:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"481:3:8","nodeType":"YulIdentifier","src":"481:3:8"},"nativeSrc":"481:54:8","nodeType":"YulFunctionCall","src":"481:54:8"},"variableNames":[{"name":"tail","nativeSrc":"473:4:8","nodeType":"YulIdentifier","src":"473:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:527:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:8","nodeType":"YulTypedName","src":"104:9:8","type":""},{"name":"value0","nativeSrc":"115:6:8","nodeType":"YulTypedName","src":"115:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:8","nodeType":"YulTypedName","src":"126:4:8","type":""}],"src":"14:527:8"},{"body":{"nativeSrc":"595:124:8","nodeType":"YulBlock","src":"595:124:8","statements":[{"nativeSrc":"605:29:8","nodeType":"YulAssignment","src":"605:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"627:6:8","nodeType":"YulIdentifier","src":"627:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"614:12:8","nodeType":"YulIdentifier","src":"614:12:8"},"nativeSrc":"614:20:8","nodeType":"YulFunctionCall","src":"614:20:8"},"variableNames":[{"name":"value","nativeSrc":"605:5:8","nodeType":"YulIdentifier","src":"605:5:8"}]},{"body":{"nativeSrc":"697:16:8","nodeType":"YulBlock","src":"697:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"706:1:8","nodeType":"YulLiteral","src":"706:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"709:1:8","nodeType":"YulLiteral","src":"709:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"699:6:8","nodeType":"YulIdentifier","src":"699:6:8"},"nativeSrc":"699:12:8","nodeType":"YulFunctionCall","src":"699:12:8"},"nativeSrc":"699:12:8","nodeType":"YulExpressionStatement","src":"699:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:8","nodeType":"YulIdentifier","src":"656:5:8"},{"arguments":[{"name":"value","nativeSrc":"667:5:8","nodeType":"YulIdentifier","src":"667:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"682:3:8","nodeType":"YulLiteral","src":"682:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"687:1:8","nodeType":"YulLiteral","src":"687:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"678:3:8","nodeType":"YulIdentifier","src":"678:3:8"},"nativeSrc":"678:11:8","nodeType":"YulFunctionCall","src":"678:11:8"},{"kind":"number","nativeSrc":"691:1:8","nodeType":"YulLiteral","src":"691:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"674:3:8","nodeType":"YulIdentifier","src":"674:3:8"},"nativeSrc":"674:19:8","nodeType":"YulFunctionCall","src":"674:19:8"}],"functionName":{"name":"and","nativeSrc":"663:3:8","nodeType":"YulIdentifier","src":"663:3:8"},"nativeSrc":"663:31:8","nodeType":"YulFunctionCall","src":"663:31:8"}],"functionName":{"name":"eq","nativeSrc":"653:2:8","nodeType":"YulIdentifier","src":"653:2:8"},"nativeSrc":"653:42:8","nodeType":"YulFunctionCall","src":"653:42:8"}],"functionName":{"name":"iszero","nativeSrc":"646:6:8","nodeType":"YulIdentifier","src":"646:6:8"},"nativeSrc":"646:50:8","nodeType":"YulFunctionCall","src":"646:50:8"},"nativeSrc":"643:70:8","nodeType":"YulIf","src":"643:70:8"}]},"name":"abi_decode_address","nativeSrc":"546:173:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"574:6:8","nodeType":"YulTypedName","src":"574:6:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"585:5:8","nodeType":"YulTypedName","src":"585:5:8","type":""}],"src":"546:173:8"},{"body":{"nativeSrc":"811:213:8","nodeType":"YulBlock","src":"811:213:8","statements":[{"body":{"nativeSrc":"857:16:8","nodeType":"YulBlock","src":"857:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"866:1:8","nodeType":"YulLiteral","src":"866:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"869:1:8","nodeType":"YulLiteral","src":"869:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"859:6:8","nodeType":"YulIdentifier","src":"859:6:8"},"nativeSrc":"859:12:8","nodeType":"YulFunctionCall","src":"859:12:8"},"nativeSrc":"859:12:8","nodeType":"YulExpressionStatement","src":"859:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"832:7:8","nodeType":"YulIdentifier","src":"832:7:8"},{"name":"headStart","nativeSrc":"841:9:8","nodeType":"YulIdentifier","src":"841:9:8"}],"functionName":{"name":"sub","nativeSrc":"828:3:8","nodeType":"YulIdentifier","src":"828:3:8"},"nativeSrc":"828:23:8","nodeType":"YulFunctionCall","src":"828:23:8"},{"kind":"number","nativeSrc":"853:2:8","nodeType":"YulLiteral","src":"853:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"824:3:8","nodeType":"YulIdentifier","src":"824:3:8"},"nativeSrc":"824:32:8","nodeType":"YulFunctionCall","src":"824:32:8"},"nativeSrc":"821:52:8","nodeType":"YulIf","src":"821:52:8"},{"nativeSrc":"882:39:8","nodeType":"YulAssignment","src":"882:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"911:9:8","nodeType":"YulIdentifier","src":"911:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"892:18:8","nodeType":"YulIdentifier","src":"892:18:8"},"nativeSrc":"892:29:8","nodeType":"YulFunctionCall","src":"892:29:8"},"variableNames":[{"name":"value0","nativeSrc":"882:6:8","nodeType":"YulIdentifier","src":"882:6:8"}]},{"nativeSrc":"930:14:8","nodeType":"YulVariableDeclaration","src":"930:14:8","value":{"kind":"number","nativeSrc":"943:1:8","nodeType":"YulLiteral","src":"943:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"934:5:8","nodeType":"YulTypedName","src":"934:5:8","type":""}]},{"nativeSrc":"953:41:8","nodeType":"YulAssignment","src":"953:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"979:9:8","nodeType":"YulIdentifier","src":"979:9:8"},{"kind":"number","nativeSrc":"990:2:8","nodeType":"YulLiteral","src":"990:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"975:3:8","nodeType":"YulIdentifier","src":"975:3:8"},"nativeSrc":"975:18:8","nodeType":"YulFunctionCall","src":"975:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"962:12:8","nodeType":"YulIdentifier","src":"962:12:8"},"nativeSrc":"962:32:8","nodeType":"YulFunctionCall","src":"962:32:8"},"variableNames":[{"name":"value","nativeSrc":"953:5:8","nodeType":"YulIdentifier","src":"953:5:8"}]},{"nativeSrc":"1003:15:8","nodeType":"YulAssignment","src":"1003:15:8","value":{"name":"value","nativeSrc":"1013:5:8","nodeType":"YulIdentifier","src":"1013:5:8"},"variableNames":[{"name":"value1","nativeSrc":"1003:6:8","nodeType":"YulIdentifier","src":"1003:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"724:300:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"769:9:8","nodeType":"YulTypedName","src":"769:9:8","type":""},{"name":"dataEnd","nativeSrc":"780:7:8","nodeType":"YulTypedName","src":"780:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"792:6:8","nodeType":"YulTypedName","src":"792:6:8","type":""},{"name":"value1","nativeSrc":"800:6:8","nodeType":"YulTypedName","src":"800:6:8","type":""}],"src":"724:300:8"},{"body":{"nativeSrc":"1124:92:8","nodeType":"YulBlock","src":"1124:92:8","statements":[{"nativeSrc":"1134:26:8","nodeType":"YulAssignment","src":"1134:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1146:9:8","nodeType":"YulIdentifier","src":"1146:9:8"},{"kind":"number","nativeSrc":"1157:2:8","nodeType":"YulLiteral","src":"1157:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1142:3:8","nodeType":"YulIdentifier","src":"1142:3:8"},"nativeSrc":"1142:18:8","nodeType":"YulFunctionCall","src":"1142:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1134:4:8","nodeType":"YulIdentifier","src":"1134:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1176:9:8","nodeType":"YulIdentifier","src":"1176:9:8"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1201:6:8","nodeType":"YulIdentifier","src":"1201:6:8"}],"functionName":{"name":"iszero","nativeSrc":"1194:6:8","nodeType":"YulIdentifier","src":"1194:6:8"},"nativeSrc":"1194:14:8","nodeType":"YulFunctionCall","src":"1194:14:8"}],"functionName":{"name":"iszero","nativeSrc":"1187:6:8","nodeType":"YulIdentifier","src":"1187:6:8"},"nativeSrc":"1187:22:8","nodeType":"YulFunctionCall","src":"1187:22:8"}],"functionName":{"name":"mstore","nativeSrc":"1169:6:8","nodeType":"YulIdentifier","src":"1169:6:8"},"nativeSrc":"1169:41:8","nodeType":"YulFunctionCall","src":"1169:41:8"},"nativeSrc":"1169:41:8","nodeType":"YulExpressionStatement","src":"1169:41:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1029:187:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1093:9:8","nodeType":"YulTypedName","src":"1093:9:8","type":""},{"name":"value0","nativeSrc":"1104:6:8","nodeType":"YulTypedName","src":"1104:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1115:4:8","nodeType":"YulTypedName","src":"1115:4:8","type":""}],"src":"1029:187:8"},{"body":{"nativeSrc":"1322:76:8","nodeType":"YulBlock","src":"1322:76:8","statements":[{"nativeSrc":"1332:26:8","nodeType":"YulAssignment","src":"1332:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1344:9:8","nodeType":"YulIdentifier","src":"1344:9:8"},{"kind":"number","nativeSrc":"1355:2:8","nodeType":"YulLiteral","src":"1355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1340:3:8","nodeType":"YulIdentifier","src":"1340:3:8"},"nativeSrc":"1340:18:8","nodeType":"YulFunctionCall","src":"1340:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1332:4:8","nodeType":"YulIdentifier","src":"1332:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1374:9:8","nodeType":"YulIdentifier","src":"1374:9:8"},{"name":"value0","nativeSrc":"1385:6:8","nodeType":"YulIdentifier","src":"1385:6:8"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:8","nodeType":"YulIdentifier","src":"1367:6:8"},"nativeSrc":"1367:25:8","nodeType":"YulFunctionCall","src":"1367:25:8"},"nativeSrc":"1367:25:8","nodeType":"YulExpressionStatement","src":"1367:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1221:177:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1291:9:8","nodeType":"YulTypedName","src":"1291:9:8","type":""},{"name":"value0","nativeSrc":"1302:6:8","nodeType":"YulTypedName","src":"1302:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1313:4:8","nodeType":"YulTypedName","src":"1313:4:8","type":""}],"src":"1221:177:8"},{"body":{"nativeSrc":"1507:270:8","nodeType":"YulBlock","src":"1507:270:8","statements":[{"body":{"nativeSrc":"1553:16:8","nodeType":"YulBlock","src":"1553:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1562:1:8","nodeType":"YulLiteral","src":"1562:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1565:1:8","nodeType":"YulLiteral","src":"1565:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1555:6:8","nodeType":"YulIdentifier","src":"1555:6:8"},"nativeSrc":"1555:12:8","nodeType":"YulFunctionCall","src":"1555:12:8"},"nativeSrc":"1555:12:8","nodeType":"YulExpressionStatement","src":"1555:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1528:7:8","nodeType":"YulIdentifier","src":"1528:7:8"},{"name":"headStart","nativeSrc":"1537:9:8","nodeType":"YulIdentifier","src":"1537:9:8"}],"functionName":{"name":"sub","nativeSrc":"1524:3:8","nodeType":"YulIdentifier","src":"1524:3:8"},"nativeSrc":"1524:23:8","nodeType":"YulFunctionCall","src":"1524:23:8"},{"kind":"number","nativeSrc":"1549:2:8","nodeType":"YulLiteral","src":"1549:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1520:3:8","nodeType":"YulIdentifier","src":"1520:3:8"},"nativeSrc":"1520:32:8","nodeType":"YulFunctionCall","src":"1520:32:8"},"nativeSrc":"1517:52:8","nodeType":"YulIf","src":"1517:52:8"},{"nativeSrc":"1578:39:8","nodeType":"YulAssignment","src":"1578:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1607:9:8","nodeType":"YulIdentifier","src":"1607:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1588:18:8","nodeType":"YulIdentifier","src":"1588:18:8"},"nativeSrc":"1588:29:8","nodeType":"YulFunctionCall","src":"1588:29:8"},"variableNames":[{"name":"value0","nativeSrc":"1578:6:8","nodeType":"YulIdentifier","src":"1578:6:8"}]},{"nativeSrc":"1626:48:8","nodeType":"YulAssignment","src":"1626:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1659:9:8","nodeType":"YulIdentifier","src":"1659:9:8"},{"kind":"number","nativeSrc":"1670:2:8","nodeType":"YulLiteral","src":"1670:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1655:3:8","nodeType":"YulIdentifier","src":"1655:3:8"},"nativeSrc":"1655:18:8","nodeType":"YulFunctionCall","src":"1655:18:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1636:18:8","nodeType":"YulIdentifier","src":"1636:18:8"},"nativeSrc":"1636:38:8","nodeType":"YulFunctionCall","src":"1636:38:8"},"variableNames":[{"name":"value1","nativeSrc":"1626:6:8","nodeType":"YulIdentifier","src":"1626:6:8"}]},{"nativeSrc":"1683:14:8","nodeType":"YulVariableDeclaration","src":"1683:14:8","value":{"kind":"number","nativeSrc":"1696:1:8","nodeType":"YulLiteral","src":"1696:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1687:5:8","nodeType":"YulTypedName","src":"1687:5:8","type":""}]},{"nativeSrc":"1706:41:8","nodeType":"YulAssignment","src":"1706:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1732:9:8","nodeType":"YulIdentifier","src":"1732:9:8"},{"kind":"number","nativeSrc":"1743:2:8","nodeType":"YulLiteral","src":"1743:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1728:3:8","nodeType":"YulIdentifier","src":"1728:3:8"},"nativeSrc":"1728:18:8","nodeType":"YulFunctionCall","src":"1728:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"1715:12:8","nodeType":"YulIdentifier","src":"1715:12:8"},"nativeSrc":"1715:32:8","nodeType":"YulFunctionCall","src":"1715:32:8"},"variableNames":[{"name":"value","nativeSrc":"1706:5:8","nodeType":"YulIdentifier","src":"1706:5:8"}]},{"nativeSrc":"1756:15:8","nodeType":"YulAssignment","src":"1756:15:8","value":{"name":"value","nativeSrc":"1766:5:8","nodeType":"YulIdentifier","src":"1766:5:8"},"variableNames":[{"name":"value2","nativeSrc":"1756:6:8","nodeType":"YulIdentifier","src":"1756:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1403:374:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1457:9:8","nodeType":"YulTypedName","src":"1457:9:8","type":""},{"name":"dataEnd","nativeSrc":"1468:7:8","nodeType":"YulTypedName","src":"1468:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1480:6:8","nodeType":"YulTypedName","src":"1480:6:8","type":""},{"name":"value1","nativeSrc":"1488:6:8","nodeType":"YulTypedName","src":"1488:6:8","type":""},{"name":"value2","nativeSrc":"1496:6:8","nodeType":"YulTypedName","src":"1496:6:8","type":""}],"src":"1403:374:8"},{"body":{"nativeSrc":"1879:87:8","nodeType":"YulBlock","src":"1879:87:8","statements":[{"nativeSrc":"1889:26:8","nodeType":"YulAssignment","src":"1889:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1901:9:8","nodeType":"YulIdentifier","src":"1901:9:8"},{"kind":"number","nativeSrc":"1912:2:8","nodeType":"YulLiteral","src":"1912:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1897:3:8","nodeType":"YulIdentifier","src":"1897:3:8"},"nativeSrc":"1897:18:8","nodeType":"YulFunctionCall","src":"1897:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1889:4:8","nodeType":"YulIdentifier","src":"1889:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1931:9:8","nodeType":"YulIdentifier","src":"1931:9:8"},{"arguments":[{"name":"value0","nativeSrc":"1946:6:8","nodeType":"YulIdentifier","src":"1946:6:8"},{"kind":"number","nativeSrc":"1954:4:8","nodeType":"YulLiteral","src":"1954:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1942:3:8","nodeType":"YulIdentifier","src":"1942:3:8"},"nativeSrc":"1942:17:8","nodeType":"YulFunctionCall","src":"1942:17:8"}],"functionName":{"name":"mstore","nativeSrc":"1924:6:8","nodeType":"YulIdentifier","src":"1924:6:8"},"nativeSrc":"1924:36:8","nodeType":"YulFunctionCall","src":"1924:36:8"},"nativeSrc":"1924:36:8","nodeType":"YulExpressionStatement","src":"1924:36:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1782:184:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1848:9:8","nodeType":"YulTypedName","src":"1848:9:8","type":""},{"name":"value0","nativeSrc":"1859:6:8","nodeType":"YulTypedName","src":"1859:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1870:4:8","nodeType":"YulTypedName","src":"1870:4:8","type":""}],"src":"1782:184:8"},{"body":{"nativeSrc":"2041:116:8","nodeType":"YulBlock","src":"2041:116:8","statements":[{"body":{"nativeSrc":"2087:16:8","nodeType":"YulBlock","src":"2087:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2096:1:8","nodeType":"YulLiteral","src":"2096:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2099:1:8","nodeType":"YulLiteral","src":"2099:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2089:6:8","nodeType":"YulIdentifier","src":"2089:6:8"},"nativeSrc":"2089:12:8","nodeType":"YulFunctionCall","src":"2089:12:8"},"nativeSrc":"2089:12:8","nodeType":"YulExpressionStatement","src":"2089:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2062:7:8","nodeType":"YulIdentifier","src":"2062:7:8"},{"name":"headStart","nativeSrc":"2071:9:8","nodeType":"YulIdentifier","src":"2071:9:8"}],"functionName":{"name":"sub","nativeSrc":"2058:3:8","nodeType":"YulIdentifier","src":"2058:3:8"},"nativeSrc":"2058:23:8","nodeType":"YulFunctionCall","src":"2058:23:8"},{"kind":"number","nativeSrc":"2083:2:8","nodeType":"YulLiteral","src":"2083:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2054:3:8","nodeType":"YulIdentifier","src":"2054:3:8"},"nativeSrc":"2054:32:8","nodeType":"YulFunctionCall","src":"2054:32:8"},"nativeSrc":"2051:52:8","nodeType":"YulIf","src":"2051:52:8"},{"nativeSrc":"2112:39:8","nodeType":"YulAssignment","src":"2112:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2141:9:8","nodeType":"YulIdentifier","src":"2141:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2122:18:8","nodeType":"YulIdentifier","src":"2122:18:8"},"nativeSrc":"2122:29:8","nodeType":"YulFunctionCall","src":"2122:29:8"},"variableNames":[{"name":"value0","nativeSrc":"2112:6:8","nodeType":"YulIdentifier","src":"2112:6:8"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1971:186:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2007:9:8","nodeType":"YulTypedName","src":"2007:9:8","type":""},{"name":"dataEnd","nativeSrc":"2018:7:8","nodeType":"YulTypedName","src":"2018:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2030:6:8","nodeType":"YulTypedName","src":"2030:6:8","type":""}],"src":"1971:186:8"},{"body":{"nativeSrc":"2249:173:8","nodeType":"YulBlock","src":"2249:173:8","statements":[{"body":{"nativeSrc":"2295:16:8","nodeType":"YulBlock","src":"2295:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2304:1:8","nodeType":"YulLiteral","src":"2304:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2307:1:8","nodeType":"YulLiteral","src":"2307:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2297:6:8","nodeType":"YulIdentifier","src":"2297:6:8"},"nativeSrc":"2297:12:8","nodeType":"YulFunctionCall","src":"2297:12:8"},"nativeSrc":"2297:12:8","nodeType":"YulExpressionStatement","src":"2297:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2270:7:8","nodeType":"YulIdentifier","src":"2270:7:8"},{"name":"headStart","nativeSrc":"2279:9:8","nodeType":"YulIdentifier","src":"2279:9:8"}],"functionName":{"name":"sub","nativeSrc":"2266:3:8","nodeType":"YulIdentifier","src":"2266:3:8"},"nativeSrc":"2266:23:8","nodeType":"YulFunctionCall","src":"2266:23:8"},{"kind":"number","nativeSrc":"2291:2:8","nodeType":"YulLiteral","src":"2291:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2262:3:8","nodeType":"YulIdentifier","src":"2262:3:8"},"nativeSrc":"2262:32:8","nodeType":"YulFunctionCall","src":"2262:32:8"},"nativeSrc":"2259:52:8","nodeType":"YulIf","src":"2259:52:8"},{"nativeSrc":"2320:39:8","nodeType":"YulAssignment","src":"2320:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2349:9:8","nodeType":"YulIdentifier","src":"2349:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2330:18:8","nodeType":"YulIdentifier","src":"2330:18:8"},"nativeSrc":"2330:29:8","nodeType":"YulFunctionCall","src":"2330:29:8"},"variableNames":[{"name":"value0","nativeSrc":"2320:6:8","nodeType":"YulIdentifier","src":"2320:6:8"}]},{"nativeSrc":"2368:48:8","nodeType":"YulAssignment","src":"2368:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2401:9:8","nodeType":"YulIdentifier","src":"2401:9:8"},{"kind":"number","nativeSrc":"2412:2:8","nodeType":"YulLiteral","src":"2412:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2397:3:8","nodeType":"YulIdentifier","src":"2397:3:8"},"nativeSrc":"2397:18:8","nodeType":"YulFunctionCall","src":"2397:18:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2378:18:8","nodeType":"YulIdentifier","src":"2378:18:8"},"nativeSrc":"2378:38:8","nodeType":"YulFunctionCall","src":"2378:38:8"},"variableNames":[{"name":"value1","nativeSrc":"2368:6:8","nodeType":"YulIdentifier","src":"2368:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2162:260:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2207:9:8","nodeType":"YulTypedName","src":"2207:9:8","type":""},{"name":"dataEnd","nativeSrc":"2218:7:8","nodeType":"YulTypedName","src":"2218:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2230:6:8","nodeType":"YulTypedName","src":"2230:6:8","type":""},{"name":"value1","nativeSrc":"2238:6:8","nodeType":"YulTypedName","src":"2238:6:8","type":""}],"src":"2162:260:8"},{"body":{"nativeSrc":"2528:102:8","nodeType":"YulBlock","src":"2528:102:8","statements":[{"nativeSrc":"2538:26:8","nodeType":"YulAssignment","src":"2538:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2550:9:8","nodeType":"YulIdentifier","src":"2550:9:8"},{"kind":"number","nativeSrc":"2561:2:8","nodeType":"YulLiteral","src":"2561:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2546:3:8","nodeType":"YulIdentifier","src":"2546:3:8"},"nativeSrc":"2546:18:8","nodeType":"YulFunctionCall","src":"2546:18:8"},"variableNames":[{"name":"tail","nativeSrc":"2538:4:8","nodeType":"YulIdentifier","src":"2538:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2580:9:8","nodeType":"YulIdentifier","src":"2580:9:8"},{"arguments":[{"name":"value0","nativeSrc":"2595:6:8","nodeType":"YulIdentifier","src":"2595:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2611:3:8","nodeType":"YulLiteral","src":"2611:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"2616:1:8","nodeType":"YulLiteral","src":"2616:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2607:3:8","nodeType":"YulIdentifier","src":"2607:3:8"},"nativeSrc":"2607:11:8","nodeType":"YulFunctionCall","src":"2607:11:8"},{"kind":"number","nativeSrc":"2620:1:8","nodeType":"YulLiteral","src":"2620:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2603:3:8","nodeType":"YulIdentifier","src":"2603:3:8"},"nativeSrc":"2603:19:8","nodeType":"YulFunctionCall","src":"2603:19:8"}],"functionName":{"name":"and","nativeSrc":"2591:3:8","nodeType":"YulIdentifier","src":"2591:3:8"},"nativeSrc":"2591:32:8","nodeType":"YulFunctionCall","src":"2591:32:8"}],"functionName":{"name":"mstore","nativeSrc":"2573:6:8","nodeType":"YulIdentifier","src":"2573:6:8"},"nativeSrc":"2573:51:8","nodeType":"YulFunctionCall","src":"2573:51:8"},"nativeSrc":"2573:51:8","nodeType":"YulExpressionStatement","src":"2573:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2427:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2497:9:8","nodeType":"YulTypedName","src":"2497:9:8","type":""},{"name":"value0","nativeSrc":"2508:6:8","nodeType":"YulTypedName","src":"2508:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2519:4:8","nodeType":"YulTypedName","src":"2519:4:8","type":""}],"src":"2427:203:8"},{"body":{"nativeSrc":"2690:325:8","nodeType":"YulBlock","src":"2690:325:8","statements":[{"nativeSrc":"2700:22:8","nodeType":"YulAssignment","src":"2700:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"2714:1:8","nodeType":"YulLiteral","src":"2714:1:8","type":"","value":"1"},{"name":"data","nativeSrc":"2717:4:8","nodeType":"YulIdentifier","src":"2717:4:8"}],"functionName":{"name":"shr","nativeSrc":"2710:3:8","nodeType":"YulIdentifier","src":"2710:3:8"},"nativeSrc":"2710:12:8","nodeType":"YulFunctionCall","src":"2710:12:8"},"variableNames":[{"name":"length","nativeSrc":"2700:6:8","nodeType":"YulIdentifier","src":"2700:6:8"}]},{"nativeSrc":"2731:38:8","nodeType":"YulVariableDeclaration","src":"2731:38:8","value":{"arguments":[{"name":"data","nativeSrc":"2761:4:8","nodeType":"YulIdentifier","src":"2761:4:8"},{"kind":"number","nativeSrc":"2767:1:8","nodeType":"YulLiteral","src":"2767:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2757:3:8","nodeType":"YulIdentifier","src":"2757:3:8"},"nativeSrc":"2757:12:8","nodeType":"YulFunctionCall","src":"2757:12:8"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2735:18:8","nodeType":"YulTypedName","src":"2735:18:8","type":""}]},{"body":{"nativeSrc":"2808:31:8","nodeType":"YulBlock","src":"2808:31:8","statements":[{"nativeSrc":"2810:27:8","nodeType":"YulAssignment","src":"2810:27:8","value":{"arguments":[{"name":"length","nativeSrc":"2824:6:8","nodeType":"YulIdentifier","src":"2824:6:8"},{"kind":"number","nativeSrc":"2832:4:8","nodeType":"YulLiteral","src":"2832:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2820:3:8","nodeType":"YulIdentifier","src":"2820:3:8"},"nativeSrc":"2820:17:8","nodeType":"YulFunctionCall","src":"2820:17:8"},"variableNames":[{"name":"length","nativeSrc":"2810:6:8","nodeType":"YulIdentifier","src":"2810:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2788:18:8","nodeType":"YulIdentifier","src":"2788:18:8"}],"functionName":{"name":"iszero","nativeSrc":"2781:6:8","nodeType":"YulIdentifier","src":"2781:6:8"},"nativeSrc":"2781:26:8","nodeType":"YulFunctionCall","src":"2781:26:8"},"nativeSrc":"2778:61:8","nodeType":"YulIf","src":"2778:61:8"},{"body":{"nativeSrc":"2898:111:8","nodeType":"YulBlock","src":"2898:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2919:1:8","nodeType":"YulLiteral","src":"2919:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2926:3:8","nodeType":"YulLiteral","src":"2926:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"2931:10:8","nodeType":"YulLiteral","src":"2931:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2922:3:8","nodeType":"YulIdentifier","src":"2922:3:8"},"nativeSrc":"2922:20:8","nodeType":"YulFunctionCall","src":"2922:20:8"}],"functionName":{"name":"mstore","nativeSrc":"2912:6:8","nodeType":"YulIdentifier","src":"2912:6:8"},"nativeSrc":"2912:31:8","nodeType":"YulFunctionCall","src":"2912:31:8"},"nativeSrc":"2912:31:8","nodeType":"YulExpressionStatement","src":"2912:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2963:1:8","nodeType":"YulLiteral","src":"2963:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"2966:4:8","nodeType":"YulLiteral","src":"2966:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2956:6:8","nodeType":"YulIdentifier","src":"2956:6:8"},"nativeSrc":"2956:15:8","nodeType":"YulFunctionCall","src":"2956:15:8"},"nativeSrc":"2956:15:8","nodeType":"YulExpressionStatement","src":"2956:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2991:1:8","nodeType":"YulLiteral","src":"2991:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2994:4:8","nodeType":"YulLiteral","src":"2994:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2984:6:8","nodeType":"YulIdentifier","src":"2984:6:8"},"nativeSrc":"2984:15:8","nodeType":"YulFunctionCall","src":"2984:15:8"},"nativeSrc":"2984:15:8","nodeType":"YulExpressionStatement","src":"2984:15:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2854:18:8","nodeType":"YulIdentifier","src":"2854:18:8"},{"arguments":[{"name":"length","nativeSrc":"2877:6:8","nodeType":"YulIdentifier","src":"2877:6:8"},{"kind":"number","nativeSrc":"2885:2:8","nodeType":"YulLiteral","src":"2885:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2874:2:8","nodeType":"YulIdentifier","src":"2874:2:8"},"nativeSrc":"2874:14:8","nodeType":"YulFunctionCall","src":"2874:14:8"}],"functionName":{"name":"eq","nativeSrc":"2851:2:8","nodeType":"YulIdentifier","src":"2851:2:8"},"nativeSrc":"2851:38:8","nodeType":"YulFunctionCall","src":"2851:38:8"},"nativeSrc":"2848:161:8","nodeType":"YulIf","src":"2848:161:8"}]},"name":"extract_byte_array_length","nativeSrc":"2635:380:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2670:4:8","nodeType":"YulTypedName","src":"2670:4:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2679:6:8","nodeType":"YulTypedName","src":"2679:6:8","type":""}],"src":"2635:380:8"},{"body":{"nativeSrc":"3194:169:8","nodeType":"YulBlock","src":"3194:169:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3211:9:8","nodeType":"YulIdentifier","src":"3211:9:8"},{"kind":"number","nativeSrc":"3222:2:8","nodeType":"YulLiteral","src":"3222:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3204:6:8","nodeType":"YulIdentifier","src":"3204:6:8"},"nativeSrc":"3204:21:8","nodeType":"YulFunctionCall","src":"3204:21:8"},"nativeSrc":"3204:21:8","nodeType":"YulExpressionStatement","src":"3204:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3245:9:8","nodeType":"YulIdentifier","src":"3245:9:8"},{"kind":"number","nativeSrc":"3256:2:8","nodeType":"YulLiteral","src":"3256:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3241:3:8","nodeType":"YulIdentifier","src":"3241:3:8"},"nativeSrc":"3241:18:8","nodeType":"YulFunctionCall","src":"3241:18:8"},{"kind":"number","nativeSrc":"3261:2:8","nodeType":"YulLiteral","src":"3261:2:8","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"3234:6:8","nodeType":"YulIdentifier","src":"3234:6:8"},"nativeSrc":"3234:30:8","nodeType":"YulFunctionCall","src":"3234:30:8"},"nativeSrc":"3234:30:8","nodeType":"YulExpressionStatement","src":"3234:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3284:9:8","nodeType":"YulIdentifier","src":"3284:9:8"},{"kind":"number","nativeSrc":"3295:2:8","nodeType":"YulLiteral","src":"3295:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3280:3:8","nodeType":"YulIdentifier","src":"3280:3:8"},"nativeSrc":"3280:18:8","nodeType":"YulFunctionCall","src":"3280:18:8"},{"hexValue":"4f6e6c792061646d696e2063616e206d696e74","kind":"string","nativeSrc":"3300:21:8","nodeType":"YulLiteral","src":"3300:21:8","type":"","value":"Only admin can mint"}],"functionName":{"name":"mstore","nativeSrc":"3273:6:8","nodeType":"YulIdentifier","src":"3273:6:8"},"nativeSrc":"3273:49:8","nodeType":"YulFunctionCall","src":"3273:49:8"},"nativeSrc":"3273:49:8","nodeType":"YulExpressionStatement","src":"3273:49:8"},{"nativeSrc":"3331:26:8","nodeType":"YulAssignment","src":"3331:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3343:9:8","nodeType":"YulIdentifier","src":"3343:9:8"},{"kind":"number","nativeSrc":"3354:2:8","nodeType":"YulLiteral","src":"3354:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3339:3:8","nodeType":"YulIdentifier","src":"3339:3:8"},"nativeSrc":"3339:18:8","nodeType":"YulFunctionCall","src":"3339:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3331:4:8","nodeType":"YulIdentifier","src":"3331:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d96500ea9414223520a8d18635edd40ec897fdcd23024884790a0352b17fef4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3020:343:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3171:9:8","nodeType":"YulTypedName","src":"3171:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3185:4:8","nodeType":"YulTypedName","src":"3185:4:8","type":""}],"src":"3020:343:8"},{"body":{"nativeSrc":"3525:188:8","nodeType":"YulBlock","src":"3525:188:8","statements":[{"nativeSrc":"3535:26:8","nodeType":"YulAssignment","src":"3535:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3547:9:8","nodeType":"YulIdentifier","src":"3547:9:8"},{"kind":"number","nativeSrc":"3558:2:8","nodeType":"YulLiteral","src":"3558:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3543:3:8","nodeType":"YulIdentifier","src":"3543:3:8"},"nativeSrc":"3543:18:8","nodeType":"YulFunctionCall","src":"3543:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3535:4:8","nodeType":"YulIdentifier","src":"3535:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3577:9:8","nodeType":"YulIdentifier","src":"3577:9:8"},{"arguments":[{"name":"value0","nativeSrc":"3592:6:8","nodeType":"YulIdentifier","src":"3592:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3608:3:8","nodeType":"YulLiteral","src":"3608:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"3613:1:8","nodeType":"YulLiteral","src":"3613:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3604:3:8","nodeType":"YulIdentifier","src":"3604:3:8"},"nativeSrc":"3604:11:8","nodeType":"YulFunctionCall","src":"3604:11:8"},{"kind":"number","nativeSrc":"3617:1:8","nodeType":"YulLiteral","src":"3617:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3600:3:8","nodeType":"YulIdentifier","src":"3600:3:8"},"nativeSrc":"3600:19:8","nodeType":"YulFunctionCall","src":"3600:19:8"}],"functionName":{"name":"and","nativeSrc":"3588:3:8","nodeType":"YulIdentifier","src":"3588:3:8"},"nativeSrc":"3588:32:8","nodeType":"YulFunctionCall","src":"3588:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3570:6:8","nodeType":"YulIdentifier","src":"3570:6:8"},"nativeSrc":"3570:51:8","nodeType":"YulFunctionCall","src":"3570:51:8"},"nativeSrc":"3570:51:8","nodeType":"YulExpressionStatement","src":"3570:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3641:9:8","nodeType":"YulIdentifier","src":"3641:9:8"},{"kind":"number","nativeSrc":"3652:2:8","nodeType":"YulLiteral","src":"3652:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3637:3:8","nodeType":"YulIdentifier","src":"3637:3:8"},"nativeSrc":"3637:18:8","nodeType":"YulFunctionCall","src":"3637:18:8"},{"name":"value1","nativeSrc":"3657:6:8","nodeType":"YulIdentifier","src":"3657:6:8"}],"functionName":{"name":"mstore","nativeSrc":"3630:6:8","nodeType":"YulIdentifier","src":"3630:6:8"},"nativeSrc":"3630:34:8","nodeType":"YulFunctionCall","src":"3630:34:8"},"nativeSrc":"3630:34:8","nodeType":"YulExpressionStatement","src":"3630:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3684:9:8","nodeType":"YulIdentifier","src":"3684:9:8"},{"kind":"number","nativeSrc":"3695:2:8","nodeType":"YulLiteral","src":"3695:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3680:3:8","nodeType":"YulIdentifier","src":"3680:3:8"},"nativeSrc":"3680:18:8","nodeType":"YulFunctionCall","src":"3680:18:8"},{"name":"value2","nativeSrc":"3700:6:8","nodeType":"YulIdentifier","src":"3700:6:8"}],"functionName":{"name":"mstore","nativeSrc":"3673:6:8","nodeType":"YulIdentifier","src":"3673:6:8"},"nativeSrc":"3673:34:8","nodeType":"YulFunctionCall","src":"3673:34:8"},"nativeSrc":"3673:34:8","nodeType":"YulExpressionStatement","src":"3673:34:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3368:345:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3478:9:8","nodeType":"YulTypedName","src":"3478:9:8","type":""},{"name":"value2","nativeSrc":"3489:6:8","nodeType":"YulTypedName","src":"3489:6:8","type":""},{"name":"value1","nativeSrc":"3497:6:8","nodeType":"YulTypedName","src":"3497:6:8","type":""},{"name":"value0","nativeSrc":"3505:6:8","nodeType":"YulTypedName","src":"3505:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3516:4:8","nodeType":"YulTypedName","src":"3516:4:8","type":""}],"src":"3368:345:8"},{"body":{"nativeSrc":"3766:174:8","nodeType":"YulBlock","src":"3766:174:8","statements":[{"nativeSrc":"3776:16:8","nodeType":"YulAssignment","src":"3776:16:8","value":{"arguments":[{"name":"x","nativeSrc":"3787:1:8","nodeType":"YulIdentifier","src":"3787:1:8"},{"name":"y","nativeSrc":"3790:1:8","nodeType":"YulIdentifier","src":"3790:1:8"}],"functionName":{"name":"add","nativeSrc":"3783:3:8","nodeType":"YulIdentifier","src":"3783:3:8"},"nativeSrc":"3783:9:8","nodeType":"YulFunctionCall","src":"3783:9:8"},"variableNames":[{"name":"sum","nativeSrc":"3776:3:8","nodeType":"YulIdentifier","src":"3776:3:8"}]},{"body":{"nativeSrc":"3823:111:8","nodeType":"YulBlock","src":"3823:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3844:1:8","nodeType":"YulLiteral","src":"3844:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3851:3:8","nodeType":"YulLiteral","src":"3851:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"3856:10:8","nodeType":"YulLiteral","src":"3856:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3847:3:8","nodeType":"YulIdentifier","src":"3847:3:8"},"nativeSrc":"3847:20:8","nodeType":"YulFunctionCall","src":"3847:20:8"}],"functionName":{"name":"mstore","nativeSrc":"3837:6:8","nodeType":"YulIdentifier","src":"3837:6:8"},"nativeSrc":"3837:31:8","nodeType":"YulFunctionCall","src":"3837:31:8"},"nativeSrc":"3837:31:8","nodeType":"YulExpressionStatement","src":"3837:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3888:1:8","nodeType":"YulLiteral","src":"3888:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"3891:4:8","nodeType":"YulLiteral","src":"3891:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3881:6:8","nodeType":"YulIdentifier","src":"3881:6:8"},"nativeSrc":"3881:15:8","nodeType":"YulFunctionCall","src":"3881:15:8"},"nativeSrc":"3881:15:8","nodeType":"YulExpressionStatement","src":"3881:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3916:1:8","nodeType":"YulLiteral","src":"3916:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3919:4:8","nodeType":"YulLiteral","src":"3919:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3909:6:8","nodeType":"YulIdentifier","src":"3909:6:8"},"nativeSrc":"3909:15:8","nodeType":"YulFunctionCall","src":"3909:15:8"},"nativeSrc":"3909:15:8","nodeType":"YulExpressionStatement","src":"3909:15:8"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3807:1:8","nodeType":"YulIdentifier","src":"3807:1:8"},{"name":"sum","nativeSrc":"3810:3:8","nodeType":"YulIdentifier","src":"3810:3:8"}],"functionName":{"name":"gt","nativeSrc":"3804:2:8","nodeType":"YulIdentifier","src":"3804:2:8"},"nativeSrc":"3804:10:8","nodeType":"YulFunctionCall","src":"3804:10:8"},"nativeSrc":"3801:133:8","nodeType":"YulIf","src":"3801:133:8"}]},"name":"checked_add_t_uint256","nativeSrc":"3718:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3749:1:8","nodeType":"YulTypedName","src":"3749:1:8","type":""},{"name":"y","nativeSrc":"3752:1:8","nodeType":"YulTypedName","src":"3752:1:8","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3758:3:8","nodeType":"YulTypedName","src":"3758:3:8","type":""}],"src":"3718:222:8"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_8d96500ea9414223520a8d18635edd40ec897fdcd23024884790a0352b17fef4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Only admin can mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063dd62ed3e1461017c578063f851a440146101b557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101e0565b6040516100c39190610654565b60405180910390f35b6100df6100da3660046106be565b610272565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106e8565b61028c565b604051601281526020016100c3565b6101366101313660046106be565b6102b0565b005b6100f3610146366004610725565b6001600160a01b031660009081526020819052604090205490565b6100b6610313565b6100df6101773660046106be565b610322565b6100f361018a366004610747565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546101c8906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6060600380546101ef9061077a565b80601f016020809104026020016040519081016040528092919081815260200182805461021b9061077a565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b5050505050905090565b600033610280818585610330565b60019150505b92915050565b60003361029a858285610342565b6102a58585856103c0565b506001949350505050565b6005546001600160a01b031633146103055760405162461bcd60e51b815260206004820152601360248201527213db9b1e4818591b5a5b8818d85b881b5a5b9d606a1b60448201526064015b60405180910390fd5b61030f828261041f565b5050565b6060600480546101ef9061077a565b6000336102808185856103c0565b61033d8383836001610455565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146103ba57818110156103ab57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102fc565b6103ba84848484036000610455565b50505050565b6001600160a01b0383166103ea57604051634b637e8f60e11b8152600060048201526024016102fc565b6001600160a01b0382166104145760405163ec442f0560e01b8152600060048201526024016102fc565b61033d83838361052a565b6001600160a01b0382166104495760405163ec442f0560e01b8152600060048201526024016102fc565b61030f6000838361052a565b6001600160a01b03841661047f5760405163e602df0560e01b8152600060048201526024016102fc565b6001600160a01b0383166104a957604051634a1406b160e11b8152600060048201526024016102fc565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103ba57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051c91815260200190565b60405180910390a350505050565b6001600160a01b03831661055557806002600082825461054a91906107b4565b909155506105c79050565b6001600160a01b038316600090815260208190526040902054818110156105a85760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102fc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105e357600280548290039055610602565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161064791815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106825760208186018101516040868401015201610665565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106b957600080fd5b919050565b600080604083850312156106d157600080fd5b6106da836106a2565b946020939093013593505050565b6000806000606084860312156106fd57600080fd5b610706846106a2565b9250610714602085016106a2565b929592945050506040919091013590565b60006020828403121561073757600080fd5b610740826106a2565b9392505050565b6000806040838503121561075a57600080fd5b610763836106a2565b9150610771602084016106a2565b90509250929050565b600181811c9082168061078e57607f821691505b6020821081036107ae57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028657634e487b7160e01b600052601160045260246000fdfea26469706673582212200675f60fada82e6e7d0f9411f4a59141009c270e07d6425ae0f7d83be816a4da64736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x77A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0x77A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x268 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x280 DUP2 DUP6 DUP6 PUSH2 0x330 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29A DUP6 DUP3 DUP6 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x2A5 DUP6 DUP6 DUP6 PUSH2 0x3C0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DB9B1E4818591B5A5B8818D85B881B5A5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F DUP3 DUP3 PUSH2 0x41F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x280 DUP2 DUP6 DUP6 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x33D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x455 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3BA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3BA DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x455 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x33D DUP4 DUP4 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x30F PUSH1 0x0 DUP4 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3BA JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x555 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5C7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x682 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x665 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DA DUP4 PUSH2 0x6A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x706 DUP5 PUSH2 0x6A2 JUMP JUMPDEST SWAP3 POP PUSH2 0x714 PUSH1 0x20 DUP6 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x740 DUP3 PUSH2 0x6A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x6A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x771 PUSH1 0x20 DUP5 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x78E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x286 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH22 0xF60FADA82E6E7D0F9411F4A59141009C270E07D6425A 0xE0 0xF7 0xD8 EXTCODESIZE 0xE8 AND LOG4 0xDA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"85:416:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:8;;1187:22;1169:41;;1157:2;1142:18;4293:186:1;1029:187:8;3144:97:1;3222:12;;3144:97;;;1367:25:8;;;1355:2;1340:18;3144:97:1;1221:177:8;5039:244:1;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1924:36:8;;1912:2;1897:18;3002:82:1;1782:184:8;349:149:6;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;123:20:6;;;;;-1:-1:-1;;;;;123:20:6;;;;;;-1:-1:-1;;;;;2591:32:8;;;2573:51;;2561:2;2546:18;123:20:6;2427:203:8;2074:89:1;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;349:149:6:-;433:5;;-1:-1:-1;;;;;433:5:6;419:10;:19;411:51;;;;-1:-1:-1;;;411:51:6;;3222:2:8;411:51:6;;;3204:21:8;3261:2;3241:18;;;3234:30;-1:-1:-1;;;3280:18:8;;;3273:49;3339:18;;411:51:6;;;;;;;;;473:17;479:2;483:6;473:5;:17::i;:::-;349:149;;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;3588:32:8;;10936:60:1;;;3570:51:8;3637:18;;;3630:34;;;3680:18;;;3673:34;;;3543:18;;10936:60:1;3368:345:8;10881:130:1;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;2573:51:8;2546:18;;5780:30:1;2427:203:8;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;2573:51:8;2546:18;;5873:32:1;2427:203:8;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;2573:51:8;2546:18;;7835:32:1;2427:203:8;7787:91:1;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;2573:51:8;2546:18;;10103:32:1;2427:203:8;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;2573:51:8;2546:18;;10203:31:1;2427:203:8;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;1367:25:8;;1355:2;1340:18;;1221:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;3588:32:8;;6649:50:1;;;3570:51:8;3637:18;;;3630:34;;;3680:18;;;3673:34;;;3543:18;;6649:50:1;3368:345:8;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;1367::8;;1355:2;1340:18;;1221:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:527:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:8;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:8:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:8;1728:18;;;;1715:32;;1403:374::o;1971:186::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;2122:29;2141:9;2122:29;:::i;:::-;2112:39;1971:186;-1:-1:-1;;;1971:186:8:o;2162:260::-;2230:6;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:29;2349:9;2330:29;:::i;:::-;2320:39;;2378:38;2412:2;2401:9;2397:18;2378:38;:::i;:::-;2368:48;;2162:260;;;;;:::o;2635:380::-;2714:1;2710:12;;;;2757;;;2778:61;;2832:4;2824:6;2820:17;2810:27;;2778:61;2885:2;2877:6;2874:14;2854:18;2851:38;2848:161;;2931:10;2926:3;2922:20;2919:1;2912:31;2966:4;2963:1;2956:15;2994:4;2991:1;2984:15;2848:161;;2635:380;;;:::o;3718:222::-;3783:9;;;3804:10;;;3801:133;;;3856:10;3851:3;3847:20;3844:1;3837:31;3891:4;3888:1;3881:15;3919:4;3916:1;3909:15"},"gasEstimates":{"creation":{"codeDepositCost":"411800","executionCost":"infinite","totalCost":"infinite"},"external":{"admin()":"2447","allowance(address,address)":"infinite","approve(address,uint256)":"24739","balanceOf(address)":"2562","decimals()":"266","mint(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51288","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"admin()":"f851a440","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockRWAToken.sol\":\"MockRWAToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MockRWAToken.sol\":{\"content\":\"// MockRWAToken Contract\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract MockRWAToken is ERC20 {\\r\\n    address public admin;\\r\\n\\r\\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\\r\\n        admin = msg.sender;\\r\\n        _mint(admin, 5 * 10 ** decimals()); // Mint 5 tokens to the deployer\\r\\n    }\\r\\n\\r\\n    function mint(address to, uint256 amount) external {\\r\\n        require(msg.sender == admin, \\\"Only admin can mint\\\");\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6cbadf4552e5505332f687606be560859cca82b5e31190d96982af5ebc7a7ea8\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"contracts/MockRWAToken.sol:MockRWAToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"contracts/MockRWAToken.sol:MockRWAToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"contracts/MockRWAToken.sol:MockRWAToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"contracts/MockRWAToken.sol:MockRWAToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"contracts/MockRWAToken.sol:MockRWAToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1039,"contract":"contracts/MockRWAToken.sol:MockRWAToken","label":"admin","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RWAOracle.sol":{"RWAOracle":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"PriceUpdated","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"prices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1112":{"entryPoint":null,"id":1112,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50600080546001600160a01b03191633179055610241806100316000396000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c8062e4768b1461005057806341976e0914610065578063cfed246b146100a1578063f851a440146100c1575b600080fd5b61006361005e3660046101bf565b6100ec565b005b61008e6100733660046101e9565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b61008e6100af3660046101e9565b60016020526000908152604090205481565b6000546100d4906001600160a01b031681565b6040516001600160a01b039091168152602001610098565b6000546001600160a01b0316331461014a5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792061646d696e2063616e207570646174652070726963657300000000604482015260640160405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055517f0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b84906101979084815260200190565b60405180910390a25050565b80356001600160a01b03811681146101ba57600080fd5b919050565b600080604083850312156101d257600080fd5b6101db836101a3565b946020939093013593505050565b6000602082840312156101fb57600080fd5b610204826101a3565b939250505056fea264697066735822122048d01c37e2ed7f931b0ba3b9a95028a687264681f66bd188779400fa2f350c7764736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x241 DUP1 PUSH2 0x31 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xE4768B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xCFED246B EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8E PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0xAF CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E207570646174652070726963657300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xD86730737B142FC160892FA8A0F2DB687A92A0E294D1AD70624CF5ACEF03B84 SWAP1 PUSH2 0x197 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DB DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xD0 SHR CALLDATACOPY 0xE2 0xED PUSH32 0x931B0BA3B9A95028A687264681F66BD188779400FA2F350C7764736F6C634300 ADDMOD BYTE STOP CALLER ","sourceMap":"146:552:7:-:0;;;314:51;;;;;;;;;-1:-1:-1;339:5:7;:18;;-1:-1:-1;;;;;;339:18:7;347:10;339:18;;;146:552;;;;;;"},"deployedBytecode":{"functionDebugData":{"@admin_1093":{"entryPoint":null,"id":1093,"parameterSlots":0,"returnSlots":0},"@getPrice_1151":{"entryPoint":null,"id":1151,"parameterSlots":1,"returnSlots":1},"@prices_1097":{"entryPoint":null,"id":1097,"parameterSlots":0,"returnSlots":0},"@setPrice_1139":{"entryPoint":236,"id":1139,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":447,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ef1c71dda171e86d57395274b028fb914558f9fc3f24c799ef3ebed3d6d99d11__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1386:8","nodeType":"YulBlock","src":"0:1386:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"63:124:8","nodeType":"YulBlock","src":"63:124:8","statements":[{"nativeSrc":"73:29:8","nodeType":"YulAssignment","src":"73:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:8","nodeType":"YulIdentifier","src":"95:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:8","nodeType":"YulIdentifier","src":"82:12:8"},"nativeSrc":"82:20:8","nodeType":"YulFunctionCall","src":"82:20:8"},"variableNames":[{"name":"value","nativeSrc":"73:5:8","nodeType":"YulIdentifier","src":"73:5:8"}]},{"body":{"nativeSrc":"165:16:8","nodeType":"YulBlock","src":"165:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:8","nodeType":"YulLiteral","src":"174:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:8","nodeType":"YulLiteral","src":"177:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:8","nodeType":"YulIdentifier","src":"167:6:8"},"nativeSrc":"167:12:8","nodeType":"YulFunctionCall","src":"167:12:8"},"nativeSrc":"167:12:8","nodeType":"YulExpressionStatement","src":"167:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:8","nodeType":"YulIdentifier","src":"124:5:8"},{"arguments":[{"name":"value","nativeSrc":"135:5:8","nodeType":"YulIdentifier","src":"135:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:8","nodeType":"YulLiteral","src":"150:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:8","nodeType":"YulLiteral","src":"155:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:8","nodeType":"YulIdentifier","src":"146:3:8"},"nativeSrc":"146:11:8","nodeType":"YulFunctionCall","src":"146:11:8"},{"kind":"number","nativeSrc":"159:1:8","nodeType":"YulLiteral","src":"159:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:8","nodeType":"YulIdentifier","src":"142:3:8"},"nativeSrc":"142:19:8","nodeType":"YulFunctionCall","src":"142:19:8"}],"functionName":{"name":"and","nativeSrc":"131:3:8","nodeType":"YulIdentifier","src":"131:3:8"},"nativeSrc":"131:31:8","nodeType":"YulFunctionCall","src":"131:31:8"}],"functionName":{"name":"eq","nativeSrc":"121:2:8","nodeType":"YulIdentifier","src":"121:2:8"},"nativeSrc":"121:42:8","nodeType":"YulFunctionCall","src":"121:42:8"}],"functionName":{"name":"iszero","nativeSrc":"114:6:8","nodeType":"YulIdentifier","src":"114:6:8"},"nativeSrc":"114:50:8","nodeType":"YulFunctionCall","src":"114:50:8"},"nativeSrc":"111:70:8","nodeType":"YulIf","src":"111:70:8"}]},"name":"abi_decode_address","nativeSrc":"14:173:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:8","nodeType":"YulTypedName","src":"42:6:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:8","nodeType":"YulTypedName","src":"53:5:8","type":""}],"src":"14:173:8"},{"body":{"nativeSrc":"279:167:8","nodeType":"YulBlock","src":"279:167:8","statements":[{"body":{"nativeSrc":"325:16:8","nodeType":"YulBlock","src":"325:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"334:1:8","nodeType":"YulLiteral","src":"334:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"337:1:8","nodeType":"YulLiteral","src":"337:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"327:6:8","nodeType":"YulIdentifier","src":"327:6:8"},"nativeSrc":"327:12:8","nodeType":"YulFunctionCall","src":"327:12:8"},"nativeSrc":"327:12:8","nodeType":"YulExpressionStatement","src":"327:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"300:7:8","nodeType":"YulIdentifier","src":"300:7:8"},{"name":"headStart","nativeSrc":"309:9:8","nodeType":"YulIdentifier","src":"309:9:8"}],"functionName":{"name":"sub","nativeSrc":"296:3:8","nodeType":"YulIdentifier","src":"296:3:8"},"nativeSrc":"296:23:8","nodeType":"YulFunctionCall","src":"296:23:8"},{"kind":"number","nativeSrc":"321:2:8","nodeType":"YulLiteral","src":"321:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"292:3:8","nodeType":"YulIdentifier","src":"292:3:8"},"nativeSrc":"292:32:8","nodeType":"YulFunctionCall","src":"292:32:8"},"nativeSrc":"289:52:8","nodeType":"YulIf","src":"289:52:8"},{"nativeSrc":"350:39:8","nodeType":"YulAssignment","src":"350:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"379:9:8","nodeType":"YulIdentifier","src":"379:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"360:18:8","nodeType":"YulIdentifier","src":"360:18:8"},"nativeSrc":"360:29:8","nodeType":"YulFunctionCall","src":"360:29:8"},"variableNames":[{"name":"value0","nativeSrc":"350:6:8","nodeType":"YulIdentifier","src":"350:6:8"}]},{"nativeSrc":"398:42:8","nodeType":"YulAssignment","src":"398:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"425:9:8","nodeType":"YulIdentifier","src":"425:9:8"},{"kind":"number","nativeSrc":"436:2:8","nodeType":"YulLiteral","src":"436:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"421:3:8","nodeType":"YulIdentifier","src":"421:3:8"},"nativeSrc":"421:18:8","nodeType":"YulFunctionCall","src":"421:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"408:12:8","nodeType":"YulIdentifier","src":"408:12:8"},"nativeSrc":"408:32:8","nodeType":"YulFunctionCall","src":"408:32:8"},"variableNames":[{"name":"value1","nativeSrc":"398:6:8","nodeType":"YulIdentifier","src":"398:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"192:254:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"237:9:8","nodeType":"YulTypedName","src":"237:9:8","type":""},{"name":"dataEnd","nativeSrc":"248:7:8","nodeType":"YulTypedName","src":"248:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"260:6:8","nodeType":"YulTypedName","src":"260:6:8","type":""},{"name":"value1","nativeSrc":"268:6:8","nodeType":"YulTypedName","src":"268:6:8","type":""}],"src":"192:254:8"},{"body":{"nativeSrc":"521:116:8","nodeType":"YulBlock","src":"521:116:8","statements":[{"body":{"nativeSrc":"567:16:8","nodeType":"YulBlock","src":"567:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"576:1:8","nodeType":"YulLiteral","src":"576:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"579:1:8","nodeType":"YulLiteral","src":"579:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"569:6:8","nodeType":"YulIdentifier","src":"569:6:8"},"nativeSrc":"569:12:8","nodeType":"YulFunctionCall","src":"569:12:8"},"nativeSrc":"569:12:8","nodeType":"YulExpressionStatement","src":"569:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"542:7:8","nodeType":"YulIdentifier","src":"542:7:8"},{"name":"headStart","nativeSrc":"551:9:8","nodeType":"YulIdentifier","src":"551:9:8"}],"functionName":{"name":"sub","nativeSrc":"538:3:8","nodeType":"YulIdentifier","src":"538:3:8"},"nativeSrc":"538:23:8","nodeType":"YulFunctionCall","src":"538:23:8"},{"kind":"number","nativeSrc":"563:2:8","nodeType":"YulLiteral","src":"563:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"534:3:8","nodeType":"YulIdentifier","src":"534:3:8"},"nativeSrc":"534:32:8","nodeType":"YulFunctionCall","src":"534:32:8"},"nativeSrc":"531:52:8","nodeType":"YulIf","src":"531:52:8"},{"nativeSrc":"592:39:8","nodeType":"YulAssignment","src":"592:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"621:9:8","nodeType":"YulIdentifier","src":"621:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"602:18:8","nodeType":"YulIdentifier","src":"602:18:8"},"nativeSrc":"602:29:8","nodeType":"YulFunctionCall","src":"602:29:8"},"variableNames":[{"name":"value0","nativeSrc":"592:6:8","nodeType":"YulIdentifier","src":"592:6:8"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"451:186:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"487:9:8","nodeType":"YulTypedName","src":"487:9:8","type":""},{"name":"dataEnd","nativeSrc":"498:7:8","nodeType":"YulTypedName","src":"498:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"510:6:8","nodeType":"YulTypedName","src":"510:6:8","type":""}],"src":"451:186:8"},{"body":{"nativeSrc":"743:76:8","nodeType":"YulBlock","src":"743:76:8","statements":[{"nativeSrc":"753:26:8","nodeType":"YulAssignment","src":"753:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"765:9:8","nodeType":"YulIdentifier","src":"765:9:8"},{"kind":"number","nativeSrc":"776:2:8","nodeType":"YulLiteral","src":"776:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"761:3:8","nodeType":"YulIdentifier","src":"761:3:8"},"nativeSrc":"761:18:8","nodeType":"YulFunctionCall","src":"761:18:8"},"variableNames":[{"name":"tail","nativeSrc":"753:4:8","nodeType":"YulIdentifier","src":"753:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"795:9:8","nodeType":"YulIdentifier","src":"795:9:8"},{"name":"value0","nativeSrc":"806:6:8","nodeType":"YulIdentifier","src":"806:6:8"}],"functionName":{"name":"mstore","nativeSrc":"788:6:8","nodeType":"YulIdentifier","src":"788:6:8"},"nativeSrc":"788:25:8","nodeType":"YulFunctionCall","src":"788:25:8"},"nativeSrc":"788:25:8","nodeType":"YulExpressionStatement","src":"788:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"642:177:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"712:9:8","nodeType":"YulTypedName","src":"712:9:8","type":""},{"name":"value0","nativeSrc":"723:6:8","nodeType":"YulTypedName","src":"723:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"734:4:8","nodeType":"YulTypedName","src":"734:4:8","type":""}],"src":"642:177:8"},{"body":{"nativeSrc":"925:102:8","nodeType":"YulBlock","src":"925:102:8","statements":[{"nativeSrc":"935:26:8","nodeType":"YulAssignment","src":"935:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"947:9:8","nodeType":"YulIdentifier","src":"947:9:8"},{"kind":"number","nativeSrc":"958:2:8","nodeType":"YulLiteral","src":"958:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"943:3:8","nodeType":"YulIdentifier","src":"943:3:8"},"nativeSrc":"943:18:8","nodeType":"YulFunctionCall","src":"943:18:8"},"variableNames":[{"name":"tail","nativeSrc":"935:4:8","nodeType":"YulIdentifier","src":"935:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"977:9:8","nodeType":"YulIdentifier","src":"977:9:8"},{"arguments":[{"name":"value0","nativeSrc":"992:6:8","nodeType":"YulIdentifier","src":"992:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1008:3:8","nodeType":"YulLiteral","src":"1008:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"1013:1:8","nodeType":"YulLiteral","src":"1013:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1004:3:8","nodeType":"YulIdentifier","src":"1004:3:8"},"nativeSrc":"1004:11:8","nodeType":"YulFunctionCall","src":"1004:11:8"},{"kind":"number","nativeSrc":"1017:1:8","nodeType":"YulLiteral","src":"1017:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1000:3:8","nodeType":"YulIdentifier","src":"1000:3:8"},"nativeSrc":"1000:19:8","nodeType":"YulFunctionCall","src":"1000:19:8"}],"functionName":{"name":"and","nativeSrc":"988:3:8","nodeType":"YulIdentifier","src":"988:3:8"},"nativeSrc":"988:32:8","nodeType":"YulFunctionCall","src":"988:32:8"}],"functionName":{"name":"mstore","nativeSrc":"970:6:8","nodeType":"YulIdentifier","src":"970:6:8"},"nativeSrc":"970:51:8","nodeType":"YulFunctionCall","src":"970:51:8"},"nativeSrc":"970:51:8","nodeType":"YulExpressionStatement","src":"970:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"824:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"894:9:8","nodeType":"YulTypedName","src":"894:9:8","type":""},{"name":"value0","nativeSrc":"905:6:8","nodeType":"YulTypedName","src":"905:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"916:4:8","nodeType":"YulTypedName","src":"916:4:8","type":""}],"src":"824:203:8"},{"body":{"nativeSrc":"1206:178:8","nodeType":"YulBlock","src":"1206:178:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1223:9:8","nodeType":"YulIdentifier","src":"1223:9:8"},{"kind":"number","nativeSrc":"1234:2:8","nodeType":"YulLiteral","src":"1234:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1216:6:8","nodeType":"YulIdentifier","src":"1216:6:8"},"nativeSrc":"1216:21:8","nodeType":"YulFunctionCall","src":"1216:21:8"},"nativeSrc":"1216:21:8","nodeType":"YulExpressionStatement","src":"1216:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1257:9:8","nodeType":"YulIdentifier","src":"1257:9:8"},{"kind":"number","nativeSrc":"1268:2:8","nodeType":"YulLiteral","src":"1268:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1253:3:8","nodeType":"YulIdentifier","src":"1253:3:8"},"nativeSrc":"1253:18:8","nodeType":"YulFunctionCall","src":"1253:18:8"},{"kind":"number","nativeSrc":"1273:2:8","nodeType":"YulLiteral","src":"1273:2:8","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"1246:6:8","nodeType":"YulIdentifier","src":"1246:6:8"},"nativeSrc":"1246:30:8","nodeType":"YulFunctionCall","src":"1246:30:8"},"nativeSrc":"1246:30:8","nodeType":"YulExpressionStatement","src":"1246:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1296:9:8","nodeType":"YulIdentifier","src":"1296:9:8"},{"kind":"number","nativeSrc":"1307:2:8","nodeType":"YulLiteral","src":"1307:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1292:3:8","nodeType":"YulIdentifier","src":"1292:3:8"},"nativeSrc":"1292:18:8","nodeType":"YulFunctionCall","src":"1292:18:8"},{"hexValue":"4f6e6c792061646d696e2063616e2075706461746520707269636573","kind":"string","nativeSrc":"1312:30:8","nodeType":"YulLiteral","src":"1312:30:8","type":"","value":"Only admin can update prices"}],"functionName":{"name":"mstore","nativeSrc":"1285:6:8","nodeType":"YulIdentifier","src":"1285:6:8"},"nativeSrc":"1285:58:8","nodeType":"YulFunctionCall","src":"1285:58:8"},"nativeSrc":"1285:58:8","nodeType":"YulExpressionStatement","src":"1285:58:8"},{"nativeSrc":"1352:26:8","nodeType":"YulAssignment","src":"1352:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1364:9:8","nodeType":"YulIdentifier","src":"1364:9:8"},{"kind":"number","nativeSrc":"1375:2:8","nodeType":"YulLiteral","src":"1375:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1360:3:8","nodeType":"YulIdentifier","src":"1360:3:8"},"nativeSrc":"1360:18:8","nodeType":"YulFunctionCall","src":"1360:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1352:4:8","nodeType":"YulIdentifier","src":"1352:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef1c71dda171e86d57395274b028fb914558f9fc3f24c799ef3ebed3d6d99d11__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:352:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1183:9:8","nodeType":"YulTypedName","src":"1183:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1197:4:8","nodeType":"YulTypedName","src":"1197:4:8","type":""}],"src":"1032:352:8"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ef1c71dda171e86d57395274b028fb914558f9fc3f24c799ef3ebed3d6d99d11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only admin can update prices\")\n        tail := add(headStart, 96)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004b5760003560e01c8062e4768b1461005057806341976e0914610065578063cfed246b146100a1578063f851a440146100c1575b600080fd5b61006361005e3660046101bf565b6100ec565b005b61008e6100733660046101e9565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b61008e6100af3660046101e9565b60016020526000908152604090205481565b6000546100d4906001600160a01b031681565b6040516001600160a01b039091168152602001610098565b6000546001600160a01b0316331461014a5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792061646d696e2063616e207570646174652070726963657300000000604482015260640160405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055517f0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b84906101979084815260200190565b60405180910390a25050565b80356001600160a01b03811681146101ba57600080fd5b919050565b600080604083850312156101d257600080fd5b6101db836101a3565b946020939093013593505050565b6000602082840312156101fb57600080fd5b610204826101a3565b939250505056fea264697066735822122048d01c37e2ed7f931b0ba3b9a95028a687264681f66bd188779400fa2f350c7764736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xE4768B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xCFED246B EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8E PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0xAF CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E207570646174652070726963657300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xD86730737B142FC160892FA8A0F2DB687A92A0E294D1AD70624CF5ACEF03B84 SWAP1 PUSH2 0x197 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DB DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xD0 SHR CALLDATACOPY 0xE2 0xED PUSH32 0x931B0BA3B9A95028A687264681F66BD188779400FA2F350C7764736F6C634300 ADDMOD BYTE STOP CALLER ","sourceMap":"146:552:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:210;;;;;;:::i;:::-;;:::i;:::-;;591:104;;;;;;:::i;:::-;-1:-1:-1;;;;;674:13:7;647:7;674:13;;;:6;:13;;;;;;;591:104;;;;788:25:8;;;776:2;761:18;591:104:7;;;;;;;;199:41;;;;;;:::i;:::-;;;;;;;;;;;;;;172:20;;;;;-1:-1:-1;;;;;172:20:7;;;;;;-1:-1:-1;;;;;988:32:8;;;970:51;;958:2;943:18;172:20:7;824:203:8;373:210:7;463:5;;-1:-1:-1;;;;;463:5:7;449:10;:19;441:60;;;;-1:-1:-1;;;441:60:7;;1234:2:8;441:60:7;;;1216:21:8;1273:2;1253:18;;;1246:30;1312;1292:18;;;1285:58;1360:18;;441:60:7;;;;;;;;-1:-1:-1;;;;;512:13:7;;;;;;:6;:13;;;;;;;:21;;;549:26;;;;;528:5;788:25:8;;776:2;761:18;;642:177;549:26:7;;;;;;;;373:210;;:::o;14:173:8:-;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:8:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:8:o"},"gasEstimates":{"creation":{"codeDepositCost":"115400","executionCost":"24400","totalCost":"139800"},"external":{"admin()":"2381","getPrice(address)":"2526","prices(address)":"2530","setPrice(address,uint256)":"26094"}},"methodIdentifiers":{"admin()":"f851a440","getPrice(address)":"41976e09","prices(address)":"cfed246b","setPrice(address,uint256)":"00e4768b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RWAOracle.sol\":\"RWAOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/RWAOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\n\\r\\n// RWAOracle Contract\\r\\ncontract RWAOracle {\\r\\n    address public admin;\\r\\n    mapping(address => uint256) public prices;\\r\\n\\r\\n    event PriceUpdated(address indexed token, uint256 price);\\r\\n\\r\\n    constructor() {\\r\\n        admin = msg.sender;\\r\\n    }\\r\\n\\r\\n    function setPrice(address token, uint256 price) external {\\r\\n        require(msg.sender == admin, \\\"Only admin can update prices\\\");\\r\\n        prices[token] = price;\\r\\n        emit PriceUpdated(token, price);\\r\\n    }\\r\\n\\r\\n    function getPrice(address token) external view returns (uint256) {\\r\\n        return prices[token];\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2af1255d74b03967f75770bd084a07fa9c8576c4213c4c95e434dce9ec2dc516\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1093,"contract":"contracts/RWAOracle.sol:RWAOracle","label":"admin","offset":0,"slot":"0","type":"t_address"},{"astId":1097,"contract":"contracts/RWAOracle.sol:RWAOracle","label":"prices","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}